{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/base64-js@1.5.1/node_modules/base64-js/index.js", "../../../node_modules/.pnpm/ieee754@1.2.1/node_modules/ieee754/index.js", "../../../node_modules/.pnpm/buffer@6.0.3/node_modules/buffer/index.js", "../../../node_modules/.pnpm/safe-buffer@5.2.1/node_modules/safe-buffer/index.js", "../../../node_modules/.pnpm/randombytes@2.1.0/node_modules/randombytes/browser.js", "../src/__legacy__/client.ts", "../src/__legacy__/clients/main-thread-client.ts", "../src/__legacy__/constants/messages-types.ts", "../src/__legacy__/constants/storage.ts", "../src/__legacy__/constants/hooks.ts", "../src/__legacy__/constants/session-management.ts", "../src/__legacy__/constants/parameters.ts", "../src/__legacy__/constants/errors.ts", "../src/__legacy__/helpers/session-management-helper.ts", "../src/__legacy__/utils/message-utils.ts", "../src/__legacy__/utils/spa-utils.ts", "../src/__legacy__/helpers/spa-helper.ts", "../src/__legacy__/http-client/clients/axios-http-client.ts", "../src/__legacy__/http-client/helpers/decorators.ts", "../src/__legacy__/stores/local-store.ts", "../src/__legacy__/stores/memory-store.ts", "../src/__legacy__/stores/session-store.ts", "../src/__legacy__/utils/crypto-utils.ts", "../src/__legacy__/clients/web-worker-client.ts", "../src/__legacy__/helpers/authentication-helper.ts", "../src/__legacy__/models/http-client.ts", "../src/__legacy__/models/web-worker.ts", "../src/__legacy__/worker/worker-receiver.ts", "../src/__legacy__/worker/worker-core.ts", "../src/utils/hasAuthParamsInUrl.ts", "../src/AsgardeoBrowserClient.ts", "../src/index.ts", "../src/theme/themeDetection.ts"],
  "sourcesContent": ["'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  var i\n  for (i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n", "/*! ieee754. BSD-3-Clause License. Feross Aboukhadijeh <https://feross.org/opensource> */\nexports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n", "/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <https://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nconst base64 = require('base64-js')\nconst ieee754 = require('ieee754')\nconst customInspectSymbol =\n  (typeof Symbol === 'function' && typeof Symbol['for'] === 'function') // eslint-disable-line dot-notation\n    ? Symbol['for']('nodejs.util.inspect.custom') // eslint-disable-line dot-notation\n    : null\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\nconst K_MAX_LENGTH = 0x7fffffff\nexports.kMaxLength = K_MAX_LENGTH\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Print warning and recommend using `buffer` v4.x which has an Object\n *               implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * We report that the browser does not support typed arrays if the are not subclassable\n * using __proto__. Firefox 4-29 lacks support for adding new properties to `Uint8Array`\n * (See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438). IE 10 lacks support\n * for __proto__ and has a buggy typed array implementation.\n */\nBuffer.TYPED_ARRAY_SUPPORT = typedArraySupport()\n\nif (!Buffer.TYPED_ARRAY_SUPPORT && typeof console !== 'undefined' &&\n    typeof console.error === 'function') {\n  console.error(\n    'This browser lacks typed array (Uint8Array) support which is required by ' +\n    '`buffer` v5.x. Use `buffer` v4.x if you require old browser support.'\n  )\n}\n\nfunction typedArraySupport () {\n  // Can typed array instances can be augmented?\n  try {\n    const arr = new Uint8Array(1)\n    const proto = { foo: function () { return 42 } }\n    Object.setPrototypeOf(proto, Uint8Array.prototype)\n    Object.setPrototypeOf(arr, proto)\n    return arr.foo() === 42\n  } catch (e) {\n    return false\n  }\n}\n\nObject.defineProperty(Buffer.prototype, 'parent', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.buffer\n  }\n})\n\nObject.defineProperty(Buffer.prototype, 'offset', {\n  enumerable: true,\n  get: function () {\n    if (!Buffer.isBuffer(this)) return undefined\n    return this.byteOffset\n  }\n})\n\nfunction createBuffer (length) {\n  if (length > K_MAX_LENGTH) {\n    throw new RangeError('The value \"' + length + '\" is invalid for option \"size\"')\n  }\n  // Return an augmented `Uint8Array` instance\n  const buf = new Uint8Array(length)\n  Object.setPrototypeOf(buf, Buffer.prototype)\n  return buf\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new TypeError(\n        'The \"string\" argument must be of type string. Received type number'\n      )\n    }\n    return allocUnsafe(arg)\n  }\n  return from(arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\nfunction from (value, encodingOrOffset, length) {\n  if (typeof value === 'string') {\n    return fromString(value, encodingOrOffset)\n  }\n\n  if (ArrayBuffer.isView(value)) {\n    return fromArrayView(value)\n  }\n\n  if (value == null) {\n    throw new TypeError(\n      'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n      'or Array-like Object. Received type ' + (typeof value)\n    )\n  }\n\n  if (isInstance(value, ArrayBuffer) ||\n      (value && isInstance(value.buffer, ArrayBuffer))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof SharedArrayBuffer !== 'undefined' &&\n      (isInstance(value, SharedArrayBuffer) ||\n      (value && isInstance(value.buffer, SharedArrayBuffer)))) {\n    return fromArrayBuffer(value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'number') {\n    throw new TypeError(\n      'The \"value\" argument must not be of type number. Received type number'\n    )\n  }\n\n  const valueOf = value.valueOf && value.valueOf()\n  if (valueOf != null && valueOf !== value) {\n    return Buffer.from(valueOf, encodingOrOffset, length)\n  }\n\n  const b = fromObject(value)\n  if (b) return b\n\n  if (typeof Symbol !== 'undefined' && Symbol.toPrimitive != null &&\n      typeof value[Symbol.toPrimitive] === 'function') {\n    return Buffer.from(value[Symbol.toPrimitive]('string'), encodingOrOffset, length)\n  }\n\n  throw new TypeError(\n    'The first argument must be one of type string, Buffer, ArrayBuffer, Array, ' +\n    'or Array-like Object. Received type ' + (typeof value)\n  )\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(value, encodingOrOffset, length)\n}\n\n// Note: Change prototype *after* Buffer.from is defined to workaround Chrome bug:\n// https://github.com/feross/buffer/pull/148\nObject.setPrototypeOf(Buffer.prototype, Uint8Array.prototype)\nObject.setPrototypeOf(Buffer, Uint8Array)\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be of type number')\n  } else if (size < 0) {\n    throw new RangeError('The value \"' + size + '\" is invalid for option \"size\"')\n  }\n}\n\nfunction alloc (size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpreted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(size).fill(fill, encoding)\n      : createBuffer(size).fill(fill)\n  }\n  return createBuffer(size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(size, fill, encoding)\n}\n\nfunction allocUnsafe (size) {\n  assertSize(size)\n  return createBuffer(size < 0 ? 0 : checked(size) | 0)\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(size)\n}\n\nfunction fromString (string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('Unknown encoding: ' + encoding)\n  }\n\n  const length = byteLength(string, encoding) | 0\n  let buf = createBuffer(length)\n\n  const actual = buf.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    buf = buf.slice(0, actual)\n  }\n\n  return buf\n}\n\nfunction fromArrayLike (array) {\n  const length = array.length < 0 ? 0 : checked(array.length) | 0\n  const buf = createBuffer(length)\n  for (let i = 0; i < length; i += 1) {\n    buf[i] = array[i] & 255\n  }\n  return buf\n}\n\nfunction fromArrayView (arrayView) {\n  if (isInstance(arrayView, Uint8Array)) {\n    const copy = new Uint8Array(arrayView)\n    return fromArrayBuffer(copy.buffer, copy.byteOffset, copy.byteLength)\n  }\n  return fromArrayLike(arrayView)\n}\n\nfunction fromArrayBuffer (array, byteOffset, length) {\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\"offset\" is outside of buffer bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\"length\" is outside of buffer bounds')\n  }\n\n  let buf\n  if (byteOffset === undefined && length === undefined) {\n    buf = new Uint8Array(array)\n  } else if (length === undefined) {\n    buf = new Uint8Array(array, byteOffset)\n  } else {\n    buf = new Uint8Array(array, byteOffset, length)\n  }\n\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(buf, Buffer.prototype)\n\n  return buf\n}\n\nfunction fromObject (obj) {\n  if (Buffer.isBuffer(obj)) {\n    const len = checked(obj.length) | 0\n    const buf = createBuffer(len)\n\n    if (buf.length === 0) {\n      return buf\n    }\n\n    obj.copy(buf, 0, 0, len)\n    return buf\n  }\n\n  if (obj.length !== undefined) {\n    if (typeof obj.length !== 'number' || numberIsNaN(obj.length)) {\n      return createBuffer(0)\n    }\n    return fromArrayLike(obj)\n  }\n\n  if (obj.type === 'Buffer' && Array.isArray(obj.data)) {\n    return fromArrayLike(obj.data)\n  }\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < K_MAX_LENGTH` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= K_MAX_LENGTH) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + K_MAX_LENGTH.toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return b != null && b._isBuffer === true &&\n    b !== Buffer.prototype // so Buffer.isBuffer(Buffer.prototype) will be false\n}\n\nBuffer.compare = function compare (a, b) {\n  if (isInstance(a, Uint8Array)) a = Buffer.from(a, a.offset, a.byteLength)\n  if (isInstance(b, Uint8Array)) b = Buffer.from(b, b.offset, b.byteLength)\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError(\n      'The \"buf1\", \"buf2\" arguments must be one of type Buffer or Uint8Array'\n    )\n  }\n\n  if (a === b) return 0\n\n  let x = a.length\n  let y = b.length\n\n  for (let i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!Array.isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  let i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  const buffer = Buffer.allocUnsafe(length)\n  let pos = 0\n  for (i = 0; i < list.length; ++i) {\n    let buf = list[i]\n    if (isInstance(buf, Uint8Array)) {\n      if (pos + buf.length > buffer.length) {\n        if (!Buffer.isBuffer(buf)) buf = Buffer.from(buf)\n        buf.copy(buffer, pos)\n      } else {\n        Uint8Array.prototype.set.call(\n          buffer,\n          buf,\n          pos\n        )\n      }\n    } else if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    } else {\n      buf.copy(buffer, pos)\n    }\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (ArrayBuffer.isView(string) || isInstance(string, ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    throw new TypeError(\n      'The \"string\" argument must be one of type string, Buffer, or ArrayBuffer. ' +\n      'Received type ' + typeof string\n    )\n  }\n\n  const len = string.length\n  const mustMatch = (arguments.length > 2 && arguments[2] === true)\n  if (!mustMatch && len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) {\n          return mustMatch ? -1 : utf8ToBytes(string).length // assume utf8\n        }\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  let loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coercion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// This property is used by `Buffer.isBuffer` (and the `is-buffer` npm package)\n// to detect a Buffer instance. It's not possible to use `instanceof Buffer`\n// reliably in a browserify context because there could be multiple different\n// copies of the 'buffer' package in use. This method works even for Buffer\n// instances that were created from another copy of the `buffer` package.\n// See: https://github.com/feross/buffer/issues/154\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  const i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  const len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (let i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  const len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (let i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  const len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (let i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  const length = this.length\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.toLocaleString = Buffer.prototype.toString\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  let str = ''\n  const max = exports.INSPECT_MAX_BYTES\n  str = this.toString('hex', 0, max).replace(/(.{2})/g, '$1 ').trim()\n  if (this.length > max) str += ' ... '\n  return '<Buffer ' + str + '>'\n}\nif (customInspectSymbol) {\n  Buffer.prototype[customInspectSymbol] = Buffer.prototype.inspect\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (isInstance(target, Uint8Array)) {\n    target = Buffer.from(target, target.offset, target.byteLength)\n  }\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError(\n      'The \"target\" argument must be one of type Buffer or Uint8Array. ' +\n      'Received type ' + (typeof target)\n    )\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  let x = thisEnd - thisStart\n  let y = end - start\n  const len = Math.min(x, y)\n\n  const thisCopy = this.slice(thisStart, thisEnd)\n  const targetCopy = target.slice(start, end)\n\n  for (let i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset // Coerce to Number.\n  if (numberIsNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [val], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  let indexSize = 1\n  let arrLength = arr.length\n  let valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  let i\n  if (dir) {\n    let foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      let found = true\n      for (let j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  const remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  const strLen = string.length\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  let i\n  for (i = 0; i < length; ++i) {\n    const parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (numberIsNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset >>> 0\n    if (isFinite(length)) {\n      length = length >>> 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  const remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  let loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return asciiWrite(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  const res = []\n\n  let i = start\n  while (i < end) {\n    const firstByte = buf[i]\n    let codePoint = null\n    let bytesPerSequence = (firstByte > 0xEF)\n      ? 4\n      : (firstByte > 0xDF)\n          ? 3\n          : (firstByte > 0xBF)\n              ? 2\n              : 1\n\n    if (i + bytesPerSequence <= end) {\n      let secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nconst MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  const len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  let res = ''\n  let i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  let ret = ''\n  end = Math.min(buf.length, end)\n\n  for (let i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  const len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  let out = ''\n  for (let i = start; i < end; ++i) {\n    out += hexSliceLookupTable[buf[i]]\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  const bytes = buf.slice(start, end)\n  let res = ''\n  // If bytes.length is odd, the last 8 bits must be ignored (same as node.js)\n  for (let i = 0; i < bytes.length - 1; i += 2) {\n    res += String.fromCharCode(bytes[i] + (bytes[i + 1] * 256))\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  const len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  const newBuf = this.subarray(start, end)\n  // Return an augmented `Uint8Array` instance\n  Object.setPrototypeOf(newBuf, Buffer.prototype)\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUintLE =\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUintBE =\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  let val = this[offset + --byteLength]\n  let mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUint8 =\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUint16LE =\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUint16BE =\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUint32LE =\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUint32BE =\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readBigUInt64LE = defineBigIntMethod(function readBigUInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const lo = first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24\n\n  const hi = this[++offset] +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    last * 2 ** 24\n\n  return BigInt(lo) + (BigInt(hi) << BigInt(32))\n})\n\nBuffer.prototype.readBigUInt64BE = defineBigIntMethod(function readBigUInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const hi = first * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  const lo = this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last\n\n  return (BigInt(hi) << BigInt(32)) + BigInt(lo)\n})\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let val = this[offset]\n  let mul = 1\n  let i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  let i = byteLength\n  let mul = 1\n  let val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  const val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readBigInt64LE = defineBigIntMethod(function readBigInt64LE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = this[offset + 4] +\n    this[offset + 5] * 2 ** 8 +\n    this[offset + 6] * 2 ** 16 +\n    (last << 24) // Overflow\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(first +\n    this[++offset] * 2 ** 8 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 24)\n})\n\nBuffer.prototype.readBigInt64BE = defineBigIntMethod(function readBigInt64BE (offset) {\n  offset = offset >>> 0\n  validateNumber(offset, 'offset')\n  const first = this[offset]\n  const last = this[offset + 7]\n  if (first === undefined || last === undefined) {\n    boundsError(offset, this.length - 8)\n  }\n\n  const val = (first << 24) + // Overflow\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    this[++offset]\n\n  return (BigInt(val) << BigInt(32)) +\n    BigInt(this[++offset] * 2 ** 24 +\n    this[++offset] * 2 ** 16 +\n    this[++offset] * 2 ** 8 +\n    last)\n})\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  offset = offset >>> 0\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUintLE =\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let mul = 1\n  let i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUintBE =\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  byteLength = byteLength >>> 0\n  if (!noAssert) {\n    const maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUint8 =\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeUint16LE =\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint16BE =\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeUint32LE =\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset + 3] = (value >>> 24)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 1] = (value >>> 8)\n  this[offset] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeUint32BE =\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nfunction wrtBigUInt64LE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  lo = lo >> 8\n  buf[offset++] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  hi = hi >> 8\n  buf[offset++] = hi\n  return offset\n}\n\nfunction wrtBigUInt64BE (buf, value, offset, min, max) {\n  checkIntBI(value, min, max, buf, offset, 7)\n\n  let lo = Number(value & BigInt(0xffffffff))\n  buf[offset + 7] = lo\n  lo = lo >> 8\n  buf[offset + 6] = lo\n  lo = lo >> 8\n  buf[offset + 5] = lo\n  lo = lo >> 8\n  buf[offset + 4] = lo\n  let hi = Number(value >> BigInt(32) & BigInt(0xffffffff))\n  buf[offset + 3] = hi\n  hi = hi >> 8\n  buf[offset + 2] = hi\n  hi = hi >> 8\n  buf[offset + 1] = hi\n  hi = hi >> 8\n  buf[offset] = hi\n  return offset + 8\n}\n\nBuffer.prototype.writeBigUInt64LE = defineBigIntMethod(function writeBigUInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeBigUInt64BE = defineBigIntMethod(function writeBigUInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, BigInt(0), BigInt('0xffffffffffffffff'))\n})\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = 0\n  let mul = 1\n  let sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    const limit = Math.pow(2, (8 * byteLength) - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  let i = byteLength - 1\n  let mul = 1\n  let sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  this[offset] = (value >>> 8)\n  this[offset + 1] = (value & 0xff)\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  this[offset] = (value & 0xff)\n  this[offset + 1] = (value >>> 8)\n  this[offset + 2] = (value >>> 16)\n  this[offset + 3] = (value >>> 24)\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  this[offset] = (value >>> 24)\n  this[offset + 1] = (value >>> 16)\n  this[offset + 2] = (value >>> 8)\n  this[offset + 3] = (value & 0xff)\n  return offset + 4\n}\n\nBuffer.prototype.writeBigInt64LE = defineBigIntMethod(function writeBigInt64LE (value, offset = 0) {\n  return wrtBigUInt64LE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nBuffer.prototype.writeBigInt64BE = defineBigIntMethod(function writeBigInt64BE (value, offset = 0) {\n  return wrtBigUInt64BE(this, value, offset, -BigInt('0x8000000000000000'), BigInt('0x7fffffffffffffff'))\n})\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  value = +value\n  offset = offset >>> 0\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!Buffer.isBuffer(target)) throw new TypeError('argument should be a Buffer')\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('Index out of range')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  const len = end - start\n\n  if (this === target && typeof Uint8Array.prototype.copyWithin === 'function') {\n    // Use built-in when available, missing from IE11\n    this.copyWithin(targetStart, start, end)\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, end),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n    if (val.length === 1) {\n      const code = val.charCodeAt(0)\n      if ((encoding === 'utf8' && code < 128) ||\n          encoding === 'latin1') {\n        // Fast path: If `val` fits into a single byte, use that numeric value.\n        val = code\n      }\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  } else if (typeof val === 'boolean') {\n    val = Number(val)\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  let i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    const bytes = Buffer.isBuffer(val)\n      ? val\n      : Buffer.from(val, encoding)\n    const len = bytes.length\n    if (len === 0) {\n      throw new TypeError('The value \"' + val +\n        '\" is invalid for argument \"value\"')\n    }\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// CUSTOM ERRORS\n// =============\n\n// Simplified versions from Node, changed for Buffer-only usage\nconst errors = {}\nfunction E (sym, getMessage, Base) {\n  errors[sym] = class NodeError extends Base {\n    constructor () {\n      super()\n\n      Object.defineProperty(this, 'message', {\n        value: getMessage.apply(this, arguments),\n        writable: true,\n        configurable: true\n      })\n\n      // Add the error code to the name to include it in the stack trace.\n      this.name = `${this.name} [${sym}]`\n      // Access the stack to generate the error message including the error code\n      // from the name.\n      this.stack // eslint-disable-line no-unused-expressions\n      // Reset the name to the actual name.\n      delete this.name\n    }\n\n    get code () {\n      return sym\n    }\n\n    set code (value) {\n      Object.defineProperty(this, 'code', {\n        configurable: true,\n        enumerable: true,\n        value,\n        writable: true\n      })\n    }\n\n    toString () {\n      return `${this.name} [${sym}]: ${this.message}`\n    }\n  }\n}\n\nE('ERR_BUFFER_OUT_OF_BOUNDS',\n  function (name) {\n    if (name) {\n      return `${name} is outside of buffer bounds`\n    }\n\n    return 'Attempt to access memory outside buffer bounds'\n  }, RangeError)\nE('ERR_INVALID_ARG_TYPE',\n  function (name, actual) {\n    return `The \"${name}\" argument must be of type number. Received type ${typeof actual}`\n  }, TypeError)\nE('ERR_OUT_OF_RANGE',\n  function (str, range, input) {\n    let msg = `The value of \"${str}\" is out of range.`\n    let received = input\n    if (Number.isInteger(input) && Math.abs(input) > 2 ** 32) {\n      received = addNumericalSeparator(String(input))\n    } else if (typeof input === 'bigint') {\n      received = String(input)\n      if (input > BigInt(2) ** BigInt(32) || input < -(BigInt(2) ** BigInt(32))) {\n        received = addNumericalSeparator(received)\n      }\n      received += 'n'\n    }\n    msg += ` It must be ${range}. Received ${received}`\n    return msg\n  }, RangeError)\n\nfunction addNumericalSeparator (val) {\n  let res = ''\n  let i = val.length\n  const start = val[0] === '-' ? 1 : 0\n  for (; i >= start + 4; i -= 3) {\n    res = `_${val.slice(i - 3, i)}${res}`\n  }\n  return `${val.slice(0, i)}${res}`\n}\n\n// CHECK FUNCTIONS\n// ===============\n\nfunction checkBounds (buf, offset, byteLength) {\n  validateNumber(offset, 'offset')\n  if (buf[offset] === undefined || buf[offset + byteLength] === undefined) {\n    boundsError(offset, buf.length - (byteLength + 1))\n  }\n}\n\nfunction checkIntBI (value, min, max, buf, offset, byteLength) {\n  if (value > max || value < min) {\n    const n = typeof min === 'bigint' ? 'n' : ''\n    let range\n    if (byteLength > 3) {\n      if (min === 0 || min === BigInt(0)) {\n        range = `>= 0${n} and < 2${n} ** ${(byteLength + 1) * 8}${n}`\n      } else {\n        range = `>= -(2${n} ** ${(byteLength + 1) * 8 - 1}${n}) and < 2 ** ` +\n                `${(byteLength + 1) * 8 - 1}${n}`\n      }\n    } else {\n      range = `>= ${min}${n} and <= ${max}${n}`\n    }\n    throw new errors.ERR_OUT_OF_RANGE('value', range, value)\n  }\n  checkBounds(buf, offset, byteLength)\n}\n\nfunction validateNumber (value, name) {\n  if (typeof value !== 'number') {\n    throw new errors.ERR_INVALID_ARG_TYPE(name, 'number', value)\n  }\n}\n\nfunction boundsError (value, length, type) {\n  if (Math.floor(value) !== value) {\n    validateNumber(value, type)\n    throw new errors.ERR_OUT_OF_RANGE(type || 'offset', 'an integer', value)\n  }\n\n  if (length < 0) {\n    throw new errors.ERR_BUFFER_OUT_OF_BOUNDS()\n  }\n\n  throw new errors.ERR_OUT_OF_RANGE(type || 'offset',\n                                    `>= ${type ? 1 : 0} and <= ${length}`,\n                                    value)\n}\n\n// HELPER FUNCTIONS\n// ================\n\nconst INVALID_BASE64_RE = /[^+/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node takes equal signs as end of the Base64 encoding\n  str = str.split('=')[0]\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = str.trim().replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  let codePoint\n  const length = string.length\n  let leadSurrogate = null\n  const bytes = []\n\n  for (let i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  let c, hi, lo\n  const byteArray = []\n  for (let i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  let i\n  for (i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\n// ArrayBuffer or Uint8Array objects from other contexts (i.e. iframes) do not pass\n// the `instanceof` check but they should be treated as of that type.\n// See: https://github.com/feross/buffer/issues/166\nfunction isInstance (obj, type) {\n  return obj instanceof type ||\n    (obj != null && obj.constructor != null && obj.constructor.name != null &&\n      obj.constructor.name === type.name)\n}\nfunction numberIsNaN (obj) {\n  // For IE11 support\n  return obj !== obj // eslint-disable-line no-self-compare\n}\n\n// Create lookup table for `toString('hex')`\n// See: https://github.com/feross/buffer/issues/219\nconst hexSliceLookupTable = (function () {\n  const alphabet = '0123456789abcdef'\n  const table = new Array(256)\n  for (let i = 0; i < 16; ++i) {\n    const i16 = i * 16\n    for (let j = 0; j < 16; ++j) {\n      table[i16 + j] = alphabet[i] + alphabet[j]\n    }\n  }\n  return table\n})()\n\n// Return not function with Error if BigInt not supported\nfunction defineBigIntMethod (fn) {\n  return typeof BigInt === 'undefined' ? BufferBigIntNotDefined : fn\n}\n\nfunction BufferBigIntNotDefined () {\n  throw new Error('BigInt not supported')\n}\n", "/*! safe-buffer. MIT License. Feross Aboukhadijeh <https://feross.org/opensource> */\n/* eslint-disable node/no-deprecated-api */\nvar buffer = require('buffer')\nvar Buffer = buffer.Buffer\n\n// alternative to using Object.keys for old browsers\nfunction copyProps (src, dst) {\n  for (var key in src) {\n    dst[key] = src[key]\n  }\n}\nif (Buffer.from && Buffer.alloc && Buffer.allocUnsafe && Buffer.allocUnsafeSlow) {\n  module.exports = buffer\n} else {\n  // Copy properties from require('buffer')\n  copyProps(buffer, exports)\n  exports.Buffer = SafeBuffer\n}\n\nfunction SafeBuffer (arg, encodingOrOffset, length) {\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.prototype = Object.create(Buffer.prototype)\n\n// Copy static methods from Buffer\ncopyProps(Buffer, SafeBuffer)\n\nSafeBuffer.from = function (arg, encodingOrOffset, length) {\n  if (typeof arg === 'number') {\n    throw new TypeError('Argument must not be a number')\n  }\n  return Buffer(arg, encodingOrOffset, length)\n}\n\nSafeBuffer.alloc = function (size, fill, encoding) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  var buf = Buffer(size)\n  if (fill !== undefined) {\n    if (typeof encoding === 'string') {\n      buf.fill(fill, encoding)\n    } else {\n      buf.fill(fill)\n    }\n  } else {\n    buf.fill(0)\n  }\n  return buf\n}\n\nSafeBuffer.allocUnsafe = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return Buffer(size)\n}\n\nSafeBuffer.allocUnsafeSlow = function (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('Argument must be a number')\n  }\n  return buffer.SlowBuffer(size)\n}\n", "'use strict'\n\n// limit of Crypto.getRandomValues()\n// https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues\nvar MAX_BYTES = 65536\n\n// Node supports requesting up to this number of bytes\n// https://github.com/nodejs/node/blob/master/lib/internal/crypto/random.js#L48\nvar MAX_UINT32 = 4294967295\n\nfunction oldBrowser () {\n  throw new Error('Secure random number generation is not supported by this browser.\\nUse Chrome, Firefox or Internet Explorer 11')\n}\n\nvar Buffer = require('safe-buffer').Buffer\nvar crypto = global.crypto || global.msCrypto\n\nif (crypto && crypto.getRandomValues) {\n  module.exports = randomBytes\n} else {\n  module.exports = oldBrowser\n}\n\nfunction randomBytes (size, cb) {\n  // phantomjs needs to throw\n  if (size > MAX_UINT32) throw new RangeError('requested too many random bytes')\n\n  var bytes = Buffer.allocUnsafe(size)\n\n  if (size > 0) {  // getRandomValues fails on IE if size == 0\n    if (size > MAX_BYTES) { // this is the max bytes crypto.getRandomValues\n      // can do at once see https://developer.mozilla.org/en-US/docs/Web/API/window.crypto.getRandomValues\n      for (var generated = 0; generated < size; generated += MAX_BYTES) {\n        // buffer.slice automatically checks if the end is past the end of\n        // the buffer so we don't have to here\n        crypto.getRandomValues(bytes.slice(generated, generated + MAX_BYTES))\n      }\n    } else {\n      crypto.getRandomValues(bytes)\n    }\n  }\n\n  if (typeof cb === 'function') {\n    return process.nextTick(function () {\n      cb(null, bytes)\n    })\n  }\n\n  return bytes\n}\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoAuthClient,\n  AsgardeoAuthException,\n  AuthClientConfig,\n  IsomorphicCrypto,\n  TokenExchangeRequestConfig,\n  StorageManager,\n  IdToken,\n  OIDCEndpoints,\n  User,\n} from '@asgardeo/javascript';\n// import WorkerFile from '../worker';\nimport {MainThreadClient, WebWorkerClient} from './clients';\nimport {Hooks, REFRESH_ACCESS_TOKEN_ERR0R} from './constants';\nimport {AuthenticationHelper, SPAHelper} from './helpers';\nimport {HttpClientInstance} from './http-client';\nimport {\n  AuthSPAClientConfig,\n  LegacyConfig as Config,\n  HttpRequestConfig,\n  HttpResponse,\n  MainThreadClientConfig,\n  MainThreadClientInterface,\n  SignInConfig,\n  SignOutError,\n  WebWorkerClientConfig,\n  WebWorkerClientInterface,\n} from './models';\nimport {BrowserStorage} from './models/storage';\nimport {SPAUtils} from './utils';\n\n/**\n * Default configurations.\n */\nconst DefaultConfig: Partial<AuthClientConfig<Config>> = {\n  autoLogoutOnTokenRefreshError: false,\n  checkSessionInterval: 3,\n  enableOIDCSessionManagement: false,\n  periodicTokenRefresh: false,\n  sessionRefreshInterval: 300,\n  storage: BrowserStorage.SessionStorage,\n};\n\n/**\n * This class provides the necessary methods to implement authentication in a Single Page Application.\n *\n * @export\n * @class AsgardeoSPAClient\n */\nexport class AsgardeoSPAClient {\n  protected static _instances: Map<number, AsgardeoSPAClient> = new Map<number, AsgardeoSPAClient>();\n  protected _client: WebWorkerClientInterface | MainThreadClientInterface | undefined;\n  protected _storage: BrowserStorage | undefined;\n  protected _authHelper: typeof AuthenticationHelper = AuthenticationHelper;\n  // protected _worker: new () => Worker = WorkerFile;\n  protected _worker = null;\n  protected _initialized: boolean = false;\n  protected _startedInitialize: boolean = false;\n  protected _onSignInCallback: (response: User) => void = () => null;\n  protected _onSignOutCallback: () => void = () => null;\n  protected _onSignOutFailedCallback: (error: SignOutError) => void = () => null;\n  protected _onEndUserSession: (response: any) => void = () => null;\n  protected _onInitialize: (response: boolean) => void = () => null;\n  protected _onCustomGrant: Map<string, (response: any) => void> = new Map();\n  protected _instanceID: number;\n\n  protected constructor(id: number) {\n    this._instanceID = id;\n  }\n\n  public instantiateAuthHelper(authHelper?: typeof AuthenticationHelper) {\n    if (authHelper) {\n      this._authHelper = authHelper;\n    } else {\n      this._authHelper = AuthenticationHelper;\n    }\n  }\n\n  // public instantiateWorker(worker: new () => Worker) {\n  //   if (worker) {\n  //     this._worker = worker;\n  //   } else {\n  //     this._worker = WorkerFile;\n  //   }\n  // }\n\n  /**\n   * This method specifies if the `AsgardeoSPAClient` has been initialized or not.\n   *\n   * @return {Promise<boolean>} - Resolves to `true` if the client has been initialized.\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @private\n   */\n  public async isInitialized(): Promise<boolean> {\n    if (!this._startedInitialize) {\n      return false;\n    }\n\n    let iterationToWait = 0;\n\n    const sleep = (): Promise<any> => {\n      return new Promise(resolve => setTimeout(resolve, 1));\n    };\n\n    while (!this._initialized) {\n      if (iterationToWait === 1e4) {\n        // eslint-disable-next-line no-console\n        console.warn('It is taking longer than usual for the object to be initialized');\n      }\n      await sleep();\n      iterationToWait++;\n    }\n\n    return true;\n  }\n\n  /**\n   * This method checks if the SDK is initialized and the user is authenticated.\n   *\n   * @param validateAuthentication - should user's authenticated status be checked as part of validation\n   *\n   * @return {Promise<boolean>} - A Promise that resolves with `true` if the SDK is initialized and the\n   * user is authenticated.\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @private\n   */\n  private async _validateMethod(validateAuthentication: boolean = true): Promise<boolean> {\n    if (!(await this.isInitialized())) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-VM-NF01',\n          'The SDK is not initialized.',\n          'The SDK must be initialized first.',\n        ),\n      );\n    }\n\n    if (validateAuthentication && !(await this.isSignedIn())) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-VM-IV02',\n          'The user is not authenticated.',\n          'The user must be authenticated first.',\n        ),\n      );\n    }\n\n    return true;\n  }\n\n  /**\n   * This method returns the instance of the singleton class.\n   * If an ID is provided, it will return the instance with the given ID.\n   * If no ID is provided, it will return the default instance value 0.\n   *\n   * @return {AsgardeoSPAClient} - Returns the instance of the singleton class.\n   *\n   * @example\n   * ```\n   * const auth = AsgardeoSPAClient.getInstance();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getinstance\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public static getInstance(id?: number): AsgardeoSPAClient | undefined {\n    if (id && this._instances?.get(id)) {\n      return this._instances.get(id);\n    } else if (!id && this._instances?.get(0)) {\n      return this._instances.get(0);\n    }\n\n    if (id) {\n      this._instances.set(id, new AsgardeoSPAClient(id));\n\n      return this._instances.get(id);\n    }\n\n    this._instances.set(0, new AsgardeoSPAClient(0));\n\n    return this._instances.get(0);\n  }\n\n  /**\n   * This method initializes the `AsgardeoSPAClient` instance.\n   *\n   * @param {ConfigInterface} config The config object to initialize with.\n   *\n   * @return {Promise<boolean>} - Resolves to `true` if initialization is successful.\n   *\n   * @example\n   * ```\n   * auth.initialize({\n   *     afterSignInUrl: \"http://localhost:3000/sign-in\",\n   *     clientId: \"client ID\",\n   *     baseUrl: \"https://api.asgardeo.io\"\n   * });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#initialize\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n\n  public async initialize(\n    config: AuthSPAClientConfig,\n    authHelper?: typeof AuthenticationHelper,\n    workerFile?: new () => Worker,\n  ): Promise<boolean> {\n    this._storage = (config.storage as BrowserStorage) ?? BrowserStorage.SessionStorage;\n    this._initialized = false;\n    this._startedInitialize = true;\n\n    authHelper && this.instantiateAuthHelper(authHelper);\n    // workerFile && this.instantiateWorker(workerFile);\n\n    const _config = await this._client?.getConfigData();\n\n    if (!(this._storage === BrowserStorage.WebWorker)) {\n      const mainThreadClientConfig = config as AuthClientConfig<MainThreadClientConfig>;\n      const defaultConfig = {...DefaultConfig} as Partial<AuthClientConfig<MainThreadClientConfig>>;\n      const mergedConfig: AuthClientConfig<MainThreadClientConfig> = {\n        ...defaultConfig,\n        ...mainThreadClientConfig,\n      };\n\n      // If the client is not initialized, initialize it as usual.\n      // NOTE: With React 19 strict mode, the initialization logic runs twice, and there's an intermittent\n      // issue where the config object is not getting stored in the storage layer with Vite scaffolding.\n      // Hence, we need to check if the client is initialized but the config object is empty, and reinitialize.\n      // Tracker: https://github.com/asgardeo/asgardeo-auth-react-sdk/issues/240\n      if (!this._client || (this._client && (!_config || Object.keys(_config)?.length === 0))) {\n        this._client = await MainThreadClient(\n          this._instanceID,\n          mergedConfig,\n          (authClient: AsgardeoAuthClient<MainThreadClientConfig>, spaHelper: SPAHelper<MainThreadClientConfig>) => {\n            return new this._authHelper(authClient, spaHelper);\n          },\n        );\n      }\n\n      this._initialized = true;\n\n      if (this._onInitialize) {\n        this._onInitialize(true);\n      }\n\n      // Do not sign out the user if the autoLogoutOnTokenRefreshError is set to false.\n      if (!mergedConfig.autoLogoutOnTokenRefreshError) {\n        return Promise.resolve(true);\n      }\n\n      window.addEventListener('message', event => {\n        if (event?.data?.type === REFRESH_ACCESS_TOKEN_ERR0R) {\n          this.signOut();\n        }\n      });\n\n      return Promise.resolve(true);\n    } else {\n      // If the client is not initialized, initialize it as usual.\n      // NOTE: With React 19 strict mode, the initialization logic runs twice, and there's an intermittent\n      // issue where the config object is not getting stored in the storage layer with Vite scaffolding.\n      // Hence, we need to check if the client is initialized but the config object is empty, and reinitialize.\n      // Tracker: https://github.com/asgardeo/asgardeo-auth-react-sdk/issues/240\n      if (!this._client || (this._client && (!_config || Object.keys(_config)?.length === 0))) {\n        const webWorkerClientConfig = config as AuthClientConfig<WebWorkerClientConfig>;\n        this._client = (await WebWorkerClient(\n          this._instanceID,\n          {\n            ...DefaultConfig,\n            ...webWorkerClientConfig,\n          },\n          this._worker,\n          (authClient: AsgardeoAuthClient<WebWorkerClientConfig>, spaHelper: SPAHelper<WebWorkerClientConfig>) => {\n            return new this._authHelper(authClient, spaHelper);\n          },\n        )) as WebWorkerClientInterface;\n\n        return this._client\n          .initialize()\n          .then(() => {\n            if (this._onInitialize) {\n              this._onInitialize(true);\n            }\n            this._initialized = true;\n\n            return Promise.resolve(true);\n          })\n          .catch(error => {\n            return Promise.reject(error);\n          });\n      }\n\n      return Promise.resolve(true);\n    }\n  }\n\n  /**\n   * This method returns a Promise that resolves with the basic user information obtained from the ID token.\n   *\n   * @return {Promise<User>} - A promise that resolves with the user information.\n   *\n   * @example\n   * ```\n   * auth.getUser().then((response) => {\n   *    // console.log(response);\n   * }).catch((error) => {\n   *    // console.error(error);\n   * });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getuserinfo\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getUser(): Promise<User | undefined> {\n    await this._validateMethod();\n\n    return this._client?.getUser();\n  }\n\n  /**\n   * This method initiates the authentication flow. This should be called twice.\n   *  1. To initiate the authentication flow.\n   *  2. To obtain the access token after getting the authorization code.\n   *\n   * To satisfy the second condition, one of the two strategies mentioned below can be used:\n   *  1. Redirect the user back to the same login page that initiated the authentication flow.\n   *  2. Call the `signIn()` method in the page the user is redirected to after authentication.\n   *\n   * **To fire a callback function after signing in, use the `on()` method.**\n   * **To learn more about the `on()` method:**\n   * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}\n   *\n   * @param {SignInConfig} config - The sign-in config.\n   * The `SignInConfig` object has these two attributes in addition to any custom key-value pairs.\n   *  1. fidp - Specifies the FIDP parameter that is used to take the user directly to an IdP login page.\n   *  2. forceInit: Specifies if the OIDC Provider Meta Data should be loaded again from the `well-known`\n   * endpoint.\n   *  3. Any other parameters that should be appended to the authorization request.\n   * @param {string} authorizationCode - The authorization code. (Optional)\n   * @param {string} sessionState - The session state. (Optional)\n   * @param {string} state - The state. (Optional)\n   *\n   * @return {Promise<User>} - A promise that resolves with the user information.\n   *\n   * @example\n   * ```\n   * auth.signIn();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signin\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async signIn(\n    config?: SignInConfig,\n    authorizationCode?: string,\n    sessionState?: string,\n    state?: string,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<User | undefined> {\n    await this.isInitialized();\n\n    // Discontinues the execution of this method if `config.callOnlyOnRedirect` is true and the `signIn` method\n    // is not being called on redirect.\n    if (!SPAUtils.canContinueSignIn(Boolean(config?.callOnlyOnRedirect), authorizationCode)) {\n      return undefined;\n    }\n\n    delete config?.callOnlyOnRedirect;\n\n    return this._client\n      ?.signIn(config, authorizationCode, sessionState, state, tokenRequestConfig)\n      .then((response: User) => {\n        if (this._onSignInCallback) {\n          this._onSignInCallback(response);\n        }\n\n        return response;\n      });\n  }\n\n  /**\n   * This method allows you to sign in silently.\n   * First, this method sends a prompt none request to see if there is an active user session in the identity server.\n   * If there is one, then it requests the access token and stores it. Else, it returns false.\n   *\n   * If this method is to be called on page load and the `signIn` method is also to be called on page load,\n   * then it is advisable to call this method after the `signIn` call.\n   *\n   * @return {Promise<User | boolean>} - A Promise that resolves with the user information after signing in\n   * or with `false` if the user is not signed in.\n   *\n   * @example\n   *```\n   * auth.trySignInSilently()\n   *```\n   */\n  public async trySignInSilently(\n    additionalParams?: Record<string, string | boolean>,\n    tokenRequestConfig?: {params: Record<string, unknown>},\n  ): Promise<User | boolean | undefined> {\n    await this.isInitialized();\n\n    // checks if the `signIn` method has been called.\n    if (SPAUtils.wasSignInCalled()) {\n      return undefined;\n    }\n\n    return this._client?.trySignInSilently(additionalParams, tokenRequestConfig).then((response: User | boolean) => {\n      if (this._onSignInCallback && response) {\n        this._onSignInCallback(response as User);\n      }\n\n      return response;\n    });\n  }\n\n  /**\n   * This method initiates the sign-out flow.\n   *\n   * **To fire a callback function after signing out, use the `on()` method.**\n   * **To learn more about the `on()` method:**\n   * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}\n   *\n   * @return {Promise<boolean>} - Returns a promise that resolves with `true` if sign out is successful.\n   *\n   * @example\n   * ```\n   * auth.signOut();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#signout\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async signOut(): Promise<boolean> {\n    await this._validateMethod(false);\n\n    const signOutResponse = (await this._client?.signOut()) ?? false;\n\n    return signOutResponse;\n  }\n\n  /**\n   * This method sends an API request to a protected endpoint.\n   * The access token is automatically attached to the header of the request.\n   * This is the only way by which protected endpoints can be accessed\n   * when the web worker is used to store session information.\n   *\n   * @param {HttpRequestConfig} config -  The config object containing attributes necessary to send a request.\n   *\n   * @return {Promise<HttpResponse>} - Returns a Promise that resolves with the response to the request.\n   *\n   * @example\n   * ```\n   *  const requestConfig = {\n   *      headers: {\n   *          \"Accept\": \"application/json\",\n   *          \"Access-Control-Allow-Origin\": \"https://api.asgardeo.io/myaccount\",\n   *          \"Content-Type\": \"application/scim+json\"\n   *      },\n   *      method: \"GET\",\n   *      url: \"https://api.asgardeo.io/scim2/me\"\n   *  };\n   *\n   *  return auth.httpRequest(requestConfig)\n   *     .then((response) => {\n   *           // console.log(response);\n   *      })\n   *      .catch((error) => {\n   *           // console.error(error);\n   *      });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequest\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async httpRequest(config: HttpRequestConfig): Promise<HttpResponse | undefined> {\n    await this._validateMethod(false);\n\n    return this._client?.httpRequest(config);\n  }\n\n  /**\n   * This method sends multiple API requests to a protected endpoint.\n   * The access token is automatically attached to the header of the request.\n   * This is the only way by which multiple requests can be sent to protected endpoints\n   * when the web worker is used to store session information.\n   *\n   * @param {HttpRequestConfig[]} config -  The config object containing attributes necessary to send a request.\n   *\n   * @return {Promise<HttpResponse[]>} - Returns a Promise that resolves with the responses to the requests.\n   *\n   * @example\n   * ```\n   *  const requestConfig = {\n   *      headers: {\n   *          \"Accept\": \"application/json\",\n   *          \"Content-Type\": \"application/scim+json\"\n   *      },\n   *      method: \"GET\",\n   *      url: \"https://api.asgardeo.io/scim2/me\"\n   *  };\n   *\n   *  const requestConfig2 = {\n   *      headers: {\n   *          \"Accept\": \"application/json\",\n   *          \"Content-Type\": \"application/scim+json\"\n   *      },\n   *      method: \"GET\",\n   *      url: \"https://api.asgardeo.io/scim2/me\"\n   *  };\n   *\n   *  return auth.httpRequest([requestConfig, requestConfig2])\n   *     .then((responses) => {\n   *           response.forEach((response)=>{\n   *              // console.log(response);\n   *           });\n   *      })\n   *      .catch((error) => {\n   *           // console.error(error);\n   *      });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#httprequestall\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async httpRequestAll(config: HttpRequestConfig[]): Promise<HttpResponse[] | undefined> {\n    await this._validateMethod(false);\n\n    return this._client?.httpRequestAll(config);\n  }\n\n  /**\n   * This method allows you to send a request with a custom grant.\n   *\n   * @param {CustomGrantRequestParams} config - The request parameters.\n   *\n   * @return {Promise<HttpResponse<any> | SignInResponse>} - A Promise that resolves with\n   * the value returned by the custom grant request.\n   *\n   * @example\n   * ```\n   * auth.customGrant({\n   *   attachToken: false,\n   *   data: {\n   *       client_id: \"{{clientId}}\",\n   *       grant_type: \"account_switch\",\n   *       scope: \"{{scope}}\",\n   *       token: \"{{token}}\",\n   *   },\n   *   id: \"account-switch\",\n   *   returnResponse: true,\n   *   returnsSession: true,\n   *   signInRequired: true\n   * });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#customgrant\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async exchangeToken(config: TokenExchangeRequestConfig): Promise<Response | User | undefined> {\n    if (config.signInRequired) {\n      await this._validateMethod();\n    } else {\n      await this._validateMethod();\n    }\n\n    if (!config.id) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-RCG-NF01',\n          'The custom grant request id not found.',\n          'The id attribute of the custom grant config object passed as an argument should have a value.',\n        ),\n      );\n    }\n\n    const customGrantResponse = await this._client?.exchangeToken(config);\n\n    const customGrantCallback = this._onCustomGrant.get(config.id);\n    customGrantCallback && customGrantCallback(this._onCustomGrant?.get(config.id));\n\n    return customGrantResponse;\n  }\n\n  /**\n   * This method ends a user session. The access token is revoked and the session information is destroyed.\n   *\n   * **To fire a callback function after ending user session, use the `on()` method.**\n   * **To learn more about the `on()` method:**\n   * @see {@link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on}\n   *\n   * @return {Promise<boolean>} - A promise that resolves with `true` if the process is successful.\n   *\n   * @example\n   * ```\n   * auth.endUserSession();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#endusersession\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async revokeAccessToken(): Promise<boolean | undefined> {\n    await this._validateMethod();\n\n    const revokeAccessToken = await this._client?.revokeAccessToken();\n    this._onEndUserSession && (await this._onEndUserSession(revokeAccessToken));\n\n    return revokeAccessToken;\n  }\n\n  /**\n   * This method returns a Promise that resolves with an object containing the service endpoints.\n   *\n   * @return {Promise<ServiceResourcesType} - A Promise that resolves with an object containing the service endpoints.\n   *\n   * @example\n   * ```\n   * auth.getServiceEndpoints().then((endpoints) => {\n   *      // console.log(endpoints);\n   *  }).error((error) => {\n   *      // console.error(error);\n   *  });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getserviceendpoints\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getOpenIDProviderEndpoints(): Promise<OIDCEndpoints | undefined> {\n    await this.isInitialized();\n\n    return this._client?.getOpenIDProviderEndpoints();\n  }\n\n  /**\n   * This methods returns the Axios http client.\n   *\n   * @return {HttpClientInstance} - The Axios HTTP client.\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public getHttpClient(): HttpClientInstance {\n    if (this._client) {\n      if (this._storage !== BrowserStorage.WebWorker) {\n        const mainThreadClient = this._client as MainThreadClientInterface;\n        return mainThreadClient.getHttpClient();\n      }\n\n      throw new AsgardeoAuthException(\n        'SPA-AUTH_CLIENT-GHC-IV01',\n        'Http client cannot be returned.',\n        'The http client cannot be returned when the storage type is set to webWorker.',\n      );\n    }\n\n    throw new AsgardeoAuthException(\n      'SPA-AUTH_CLIENT-GHC-NF02',\n      'The SDK is not initialized.',\n      'The SDK has not been initialized yet. Initialize the SDK using the initialize method ' +\n        'before calling this method.',\n    );\n  }\n\n  /**\n   * This method decodes the payload of the id token and returns it.\n   *\n   * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with\n   * the decoded payload of the id token.\n   *\n   * @example\n   * ```\n   * auth.getDecodedIdToken().then((response)=>{\n   *     // console.log(response);\n   * }).catch((error)=>{\n   *     // console.error(error);\n   * });\n   * ```\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdecodedidtoken\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getDecodedIdToken(sessionId?: string): Promise<IdToken | undefined> {\n    await this._validateMethod();\n\n    return this._client?.getDecodedIdToken(sessionId);\n  }\n\n  /**\n   * This method returns the IsomorphicCrypto instance.\n   *\n   * @return {Promise<DecodedIdTokenPayloadInterface>} - A Promise that resolves with\n   * the IsomorphicCrypto instance.\n   *\n   * @example\n   * ```\n   * auth.getCrypto().then((response)=>{\n   *     // console.log(response);\n   * }).catch((error)=>{\n   *     // console.error(error);\n   * });\n   * ```\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getCrypto\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getCrypto(): Promise<IsomorphicCrypto | undefined> {\n    await this._validateMethod();\n\n    return this._client?.getCrypto();\n  }\n\n  /**\n   * This method return the ID token.\n   *\n   * @return {Promise<string>} - A Promise that resolves with the ID token.\n   *\n   * @example\n   * ```\n   * const idToken = await auth.getIdToken();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-js-sdk/tree/master#getIdToken\n   *\n   * @memberof AsgardeoAuthClient\n   *\n   * @preserve\n   */\n  public async getIdToken(): Promise<string | undefined> {\n    await this._validateMethod();\n\n    return this._client?.getIdToken();\n  }\n\n  /**\n   * This method return a Promise that resolves with the access token.\n   *\n   * **This method will not return the access token if the storage type is set to `webWorker`.**\n   *\n   * @return {Promise<string>} - A Promise that resolves with the access token.\n   *\n   * @example\n   * ```\n   *   auth.getAccessToken().then((token) => {\n   *       // console.log(token);\n   *   }).catch((error) => {\n   *       // console.error(error);\n   *   });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getAccessToken(): Promise<string> {\n    await this._validateMethod();\n\n    if (this._storage && [(BrowserStorage.WebWorker, BrowserStorage.BrowserMemory)].includes(this._storage)) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-GAT-IV01',\n          'The access token cannot be returned.',\n          'The access token cannot be returned when the storage type is set to webWorker or browserMemory.',\n        ),\n      );\n    }\n    const mainThreadClient = this._client as MainThreadClientInterface;\n\n    return mainThreadClient.getAccessToken();\n  }\n\n  /**\n   * This method return a Promise that resolves with the idp access token.\n   *\n   * **This method will not return the access token if the storage type is set to `webWorker`.**\n   *\n   * @return {Promise<string>} - A Promise that resolves with the idp access token.\n   *\n   * @example\n   * ```\n   *   auth.getIDPAccessToken().then((token) => {\n   *       // console.log(token);\n   *   }).catch((error) => {\n   *       // console.error(error);\n   *   });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getaccesstoken\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getIDPAccessToken(): Promise<string> {\n    await this._validateMethod();\n\n    if (this._storage && [(BrowserStorage.WebWorker, BrowserStorage.BrowserMemory)].includes(this._storage)) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-GIAT-IV01',\n          'The access token cannot be returned.',\n          'The access token cannot be returned when the storage type is set to webWorker or browserMemory.',\n        ),\n      );\n    }\n    const mainThreadClient = this._client as MainThreadClientInterface;\n\n    return mainThreadClient.getAccessToken();\n  }\n\n  /**\n   * This method return a Promise that resolves with the data layer object.\n   *\n   * **This method will not return the data layer object, if the storage type is set to `webWorker`.**\n   *\n   * @return {Promise<string>} - A Promise that resolves with the data layer object.\n   *\n   * @example\n   * ```\n   *   auth.getStorageManager().then((dataLayer) => {\n   *       // console.log(dataLayer);\n   *   }).catch((error) => {\n   *       // console.error(error);\n   *   });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#getdatalayer\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getStorageManager(): Promise<StorageManager<MainThreadClientConfig>> {\n    await this._validateMethod();\n\n    if (this._storage && [(BrowserStorage.WebWorker, BrowserStorage.BrowserMemory)].includes(this._storage)) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-GDL-IV01',\n          'The data layer cannot be returned.',\n          'The data layer cannot be returned when the storage type is set to webWorker or browserMemory.',\n        ),\n      );\n    }\n    const mainThreadClient = this._client as MainThreadClientInterface;\n\n    return mainThreadClient.getStorageManager();\n  }\n\n  /**\n   * This method return a Promise that resolves with the config data stored in the storage.\n   *\n   * @return - A Promise that resolves with the config data.\n   *\n   * @example\n   * ```\n   * auth.getConfigData().then((configData) => {\n   *     // console.log(configData);\n   * }).catch((error) => {\n   *    // console.error(error);\n   * });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/main#getConfigData\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async getConfigData(): Promise<\n    AuthClientConfig<MainThreadClientConfig> | AuthClientConfig<WebWorkerClientConfig> | undefined\n  > {\n    return this._client?.getConfigData();\n  }\n\n  /**\n   * This method refreshes the access token.\n   *\n   * @return {TokenResponseInterface} - A Promise that resolves with an object containing\n   * information about the refreshed access token.\n   *\n   * @example\n   * ```\n   * auth.refreshToken().then((response)=>{\n   *      // console.log(response);\n   * }).catch((error)=>{\n   *      // console.error(error);\n   * });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#refreshtoken\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async refreshAccessToken(): Promise<User | undefined> {\n    await this._validateMethod(false);\n\n    return this._client?.refreshAccessToken();\n  }\n\n  /**\n   * This method specifies if the user is authenticated or not.\n   *\n   * @return {Promise<boolean>} - A Promise that resolves with `true` if the user is authenticated.\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async isSignedIn(): Promise<boolean | undefined> {\n    await this.isInitialized();\n\n    return this._client?.isSignedIn();\n  }\n\n  /**\n   * This method specifies if there is an active session in the browser or not.\n   *\n   * @return {Promise<boolean>} - A Promise that resolves with `true` if there is a session.\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async isSessionActive(): Promise<boolean | undefined> {\n    await this.isInitialized();\n\n    if (this._storage && [(BrowserStorage.WebWorker, BrowserStorage.BrowserMemory)].includes(this._storage)) {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_CLIENT-ISA-IV01',\n          'The active session cannot be returned.',\n          'The active session cannot be returned when the storage type is set to webWorker ' + 'or browserMemory.',\n        ),\n      );\n    }\n    const mainThreadClient = this._client as MainThreadClientInterface;\n\n    return mainThreadClient?.isSessionActive();\n  }\n\n  /**\n   * This method attaches a callback function to an event hook that fires the callback when the event happens.\n   *\n   * @param {Hooks.CustomGrant} hook - The name of the hook.\n   * @param {(response?: any) => void} callback - The callback function.\n   * @param {string} id (optional) - The id of the hook. This is used when multiple custom grants are used.\n   *\n   * @example\n   * ```\n   * auth.on(\"sign-in\", (response)=>{\n   *      // console.log(response);\n   * });\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#on\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async on(hook: Hooks.CustomGrant, callback: (response?: any) => void, id: string): Promise<void>;\n  public async on(hook: Exclude<Hooks, Hooks.CustomGrant>, callback: (response?: any) => void): Promise<void>;\n  public async on(hook: Hooks, callback: (response?: any) => void | Promise<void>, id?: string): Promise<void> {\n    await this.isInitialized();\n    if (callback && typeof callback === 'function') {\n      switch (hook) {\n        case Hooks.SignIn:\n          this._onSignInCallback = callback;\n          break;\n        case Hooks.SignOut:\n          this._onSignOutCallback = callback;\n          if (await SPAUtils.isSignOutSuccessful()) {\n            this._onSignOutCallback();\n          }\n          break;\n        case Hooks.RevokeAccessToken:\n          this._onEndUserSession = callback;\n          break;\n        case Hooks.Initialize:\n          this._onInitialize = callback;\n          break;\n        case Hooks.HttpRequestError:\n          this._client?.setHttpRequestErrorCallback(callback);\n          break;\n        case Hooks.HttpRequestFinish:\n          this._client?.setHttpRequestFinishCallback(callback);\n          break;\n        case Hooks.HttpRequestStart:\n          this._client?.setHttpRequestStartCallback(callback);\n          break;\n        case Hooks.HttpRequestSuccess:\n          this._client?.setHttpRequestSuccessCallback(callback);\n          break;\n        case Hooks.CustomGrant:\n          id && this._onCustomGrant.set(id, callback);\n          break;\n        case Hooks.SignOutFailed: {\n          this._onSignOutFailedCallback = callback;\n          const signOutFail: boolean | SignOutError = SPAUtils.didSignOutFail();\n\n          if (signOutFail) {\n            this._onSignOutFailedCallback(signOutFail as SignOutError);\n          }\n          break;\n        }\n        default:\n          throw new AsgardeoAuthException('SPA-AUTH_CLIENT-ON-IV01', 'Invalid hook.', 'The provided hook is invalid.');\n      }\n    } else {\n      throw new AsgardeoAuthException(\n        'SPA-AUTH_CLIENT-ON-IV02',\n        'Invalid callback function.',\n        'The provided callback function is invalid.',\n      );\n    }\n  }\n\n  /**\n   * This method enables callback functions attached to the http client.\n   *\n   * @return {Promise<boolean>} - A promise that resolves with True.\n   *\n   * @example\n   * ```\n   * auth.enableHttpHandler();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#enableHttpHandler\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async enableHttpHandler(): Promise<boolean | undefined> {\n    await this.isInitialized();\n\n    return this._client?.enableHttpHandler();\n  }\n\n  /**\n   * This method disables callback functions attached to the http client.\n   *\n   * @return {Promise<boolean>} - A promise that resolves with True.\n   *\n   * @example\n   * ```\n   * auth.disableHttpHandler();\n   * ```\n   *\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master#disableHttpHandler\n   *\n   * @memberof AsgardeoSPAClient\n   *\n   * @preserve\n   */\n  public async disableHttpHandler(): Promise<boolean | undefined> {\n    await this.isInitialized();\n\n    return this._client?.disableHttpHandler();\n  }\n\n  /**\n   * This method updates the configuration that was passed into the constructor when instantiating this class.\n   *\n   * @param {Partial<AuthClientConfig<T>>} config - A config object to update the SDK configurations with.\n   *\n   * @example\n   * ```\n   * const config = {\n   *     afterSignInUrl: \"http://localhost:3000/sign-in\",\n   *     clientId: \"client ID\",\n   *     baseUrl: \"https://api.asgardeo.io\"\n   * }\n   * const auth.reInitialize(config);\n   * ```\n   * @link https://github.com/asgardeo/asgardeo-auth-spa-sdk/tree/master/lib#reInitialize\n   *\n   * @memberof AsgardeoAuthClient\n   *\n   * @preserve\n   */\n  public async reInitialize(config: Partial<AuthClientConfig<Config>>): Promise<void> {\n    await this.isInitialized();\n    if (this._storage === BrowserStorage.WebWorker) {\n      const client = this._client as WebWorkerClientInterface;\n      await client.reInitialize(config as Partial<AuthClientConfig<WebWorkerClientConfig>>);\n    } else {\n      const client = this._client as WebWorkerClientInterface;\n      await client.reInitialize(config as Partial<AuthClientConfig<WebWorkerClientConfig>>);\n    }\n\n    return;\n  }\n}\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoAuthClient,\n  AuthClientConfig,\n  User,\n  IsomorphicCrypto,\n  StorageManager,\n  IdToken,\n  ExtendedAuthorizeRequestUrlParams,\n  OIDCEndpoints,\n  OIDCRequestConstants,\n  SessionData,\n  Storage,\n  extractPkceStorageKeyFromState,\n  initializeEmbeddedSignInFlow,\n} from '@asgardeo/javascript';\nimport {SILENT_SIGN_IN_STATE, TOKEN_REQUEST_CONFIG_KEY} from '../constants';\nimport {AuthenticationHelper} from '../helpers/authentication-helper';\nimport {SessionManagementHelper} from '../helpers/session-management-helper';\nimport {SPAHelper} from '../helpers/spa-helper';\nimport {HttpClient, HttpClientInstance} from '../http-client';\nimport {HttpError, HttpRequestConfig, HttpResponse, MainThreadClientConfig, MainThreadClientInterface} from '../models';\nimport {SPACustomGrantConfig} from '../models/request-custom-grant';\nimport {BrowserStorage} from '../models/storage';\nimport {LocalStore, MemoryStore, SessionStore} from '../stores';\nimport {SPAUtils} from '../utils';\nimport {SPACryptoUtils} from '../utils/crypto-utils';\n\nconst initiateStore = (store: BrowserStorage | undefined): Storage => {\n  switch (store) {\n    case BrowserStorage.LocalStorage:\n      return new LocalStore();\n    case BrowserStorage.SessionStorage:\n      return new SessionStore();\n    case BrowserStorage.BrowserMemory:\n      return new MemoryStore();\n    default:\n      return new SessionStore();\n  }\n};\n\nexport const MainThreadClient = async (\n  instanceID: number,\n  config: AuthClientConfig<MainThreadClientConfig>,\n  getAuthHelper: (\n    authClient: AsgardeoAuthClient<MainThreadClientConfig>,\n    spaHelper: SPAHelper<MainThreadClientConfig>,\n  ) => AuthenticationHelper<MainThreadClientConfig>,\n): Promise<MainThreadClientInterface> => {\n  const _store: Storage = initiateStore(config.storage as BrowserStorage);\n  const _cryptoUtils: SPACryptoUtils = new SPACryptoUtils();\n  const _authenticationClient = new AsgardeoAuthClient<MainThreadClientConfig>();\n  await _authenticationClient.initialize(config, _store, _cryptoUtils, instanceID);\n\n  const _spaHelper = new SPAHelper<MainThreadClientConfig>(_authenticationClient);\n  const _dataLayer = _authenticationClient.getStorageManager();\n  const _sessionManagementHelper = await SessionManagementHelper(\n    async () => _authenticationClient.getSignOutUrl(),\n    (config.storage as BrowserStorage) ?? BrowserStorage.SessionStorage,\n    (sessionState: string) =>\n      _dataLayer.setSessionDataParameter(\n        OIDCRequestConstants.Params.SESSION_STATE as keyof SessionData,\n        sessionState ?? '',\n      ),\n  );\n\n  const _authenticationHelper = getAuthHelper(_authenticationClient, _spaHelper);\n\n  let _getSignOutURLFromSessionStorage: boolean = false;\n\n  const _httpClient: HttpClientInstance = HttpClient.getInstance();\n  let _isHttpHandlerEnabled: boolean = true;\n  let _httpErrorCallback: (error: HttpError) => void | Promise<void>;\n  let _httpFinishCallback: () => void;\n\n  const attachToken = async (request: HttpRequestConfig): Promise<void> => {\n    await _authenticationHelper.attachTokenToRequestConfig(request);\n  };\n\n  _httpClient?.init && (await _httpClient.init(true, attachToken));\n\n  const setHttpRequestStartCallback = (callback: () => void): void => {\n    _httpClient?.setHttpRequestStartCallback && _httpClient.setHttpRequestStartCallback(callback);\n  };\n\n  const setHttpRequestSuccessCallback = (callback: (response: HttpResponse) => void): void => {\n    _httpClient?.setHttpRequestSuccessCallback && _httpClient.setHttpRequestSuccessCallback(callback);\n  };\n\n  const setHttpRequestFinishCallback = (callback: () => void): void => {\n    _httpClient?.setHttpRequestFinishCallback && _httpClient.setHttpRequestFinishCallback(callback);\n  };\n\n  const setHttpRequestErrorCallback = (callback: (error: HttpError) => void | Promise<void>): void => {\n    _httpErrorCallback = callback;\n  };\n\n  const httpRequest = async (requestConfig: HttpRequestConfig): Promise<HttpResponse> =>\n    _authenticationHelper.httpRequest(\n      _httpClient,\n      requestConfig,\n      _isHttpHandlerEnabled,\n      _httpErrorCallback,\n      _httpFinishCallback,\n    );\n\n  const httpRequestAll = async (requestConfigs: HttpRequestConfig[]): Promise<HttpResponse[] | undefined> =>\n    _authenticationHelper.httpRequestAll(\n      requestConfigs,\n      _httpClient,\n      _isHttpHandlerEnabled,\n      _httpErrorCallback,\n      _httpFinishCallback,\n    );\n\n  const getHttpClient = (): HttpClientInstance => _httpClient;\n\n  const enableHttpHandler = (): boolean => {\n    _authenticationHelper.enableHttpHandler(_httpClient);\n    _isHttpHandlerEnabled = true;\n\n    return true;\n  };\n\n  const disableHttpHandler = (): boolean => {\n    _authenticationHelper.disableHttpHandler(_httpClient);\n    _isHttpHandlerEnabled = false;\n\n    return true;\n  };\n\n  const checkSession = async (): Promise<void> => {\n    const oidcEndpoints: OIDCEndpoints = (await _authenticationClient.getOpenIDProviderEndpoints()) as OIDCEndpoints;\n    const config = await _dataLayer.getConfigData();\n\n    _authenticationHelper.initializeSessionManger(\n      config,\n      oidcEndpoints,\n      async () => (await _authenticationClient.getUserSession()).sessionState,\n      async (params?: ExtendedAuthorizeRequestUrlParams): Promise<string> => _authenticationClient.getSignInUrl(params),\n      _sessionManagementHelper,\n    );\n  };\n\n  const shouldStopAuthn = async (): Promise<boolean> =>\n    _sessionManagementHelper.receivePromptNoneResponse(async (sessionState: string | null) => {\n      await _dataLayer.setSessionDataParameter(\n        OIDCRequestConstants.Params.SESSION_STATE as keyof SessionData,\n        sessionState ?? '',\n      );\n    });\n\n  const setSessionStatus = async (sessionStatus: string): Promise<void> => {\n    await _dataLayer.setSessionStatus(sessionStatus);\n  };\n\n  const signIn = async (\n    signInConfig?: ExtendedAuthorizeRequestUrlParams,\n    authorizationCode?: string,\n    sessionState?: string,\n    state?: string,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<User> => {\n    const basicUserInfo = await _authenticationHelper.handleSignIn(shouldStopAuthn, checkSession, undefined);\n\n    if (basicUserInfo) {\n      return basicUserInfo;\n    }\n    let resolvedAuthorizationCode: string;\n    let resolvedSessionState: string;\n    let resolvedState: string;\n    let resolvedTokenRequestConfig: {\n      params: Record<string, unknown>;\n    } = {params: {}};\n\n    if (config?.responseMode === 'form_post' && authorizationCode) {\n      resolvedAuthorizationCode = authorizationCode;\n      resolvedSessionState = sessionState ?? '';\n      resolvedState = state ?? '';\n    } else {\n      resolvedAuthorizationCode =\n        new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.AUTHORIZATION_CODE) ?? '';\n      resolvedSessionState =\n        new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.SESSION_STATE) ?? '';\n      resolvedState = new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.STATE) ?? '';\n\n      SPAUtils.removeAuthorizationCode();\n    }\n\n    if (resolvedAuthorizationCode && resolvedState) {\n      setSessionStatus('true');\n      const storedTokenRequestConfig = await _dataLayer.getTemporaryDataParameter(TOKEN_REQUEST_CONFIG_KEY);\n      if (storedTokenRequestConfig && typeof storedTokenRequestConfig === 'string') {\n        resolvedTokenRequestConfig = JSON.parse(storedTokenRequestConfig);\n      }\n      return requestAccessToken(\n        resolvedAuthorizationCode,\n        resolvedSessionState,\n        resolvedState,\n        resolvedTokenRequestConfig,\n      );\n    }\n\n    return _authenticationClient.getSignInUrl(signInConfig).then(async (url: string) => {\n      if (config.storage === BrowserStorage.BrowserMemory && config.enablePKCE) {\n        const pkceKey: string = extractPkceStorageKeyFromState(resolvedState);\n\n        SPAUtils.setPKCE(pkceKey, (await _authenticationClient.getPKCECode(resolvedState)) as string);\n      }\n\n      if (tokenRequestConfig) {\n        _dataLayer.setTemporaryDataParameter(TOKEN_REQUEST_CONFIG_KEY, JSON.stringify(tokenRequestConfig));\n      }\n\n      // FIXME: This is a workaround to handle the `response_mode` as `direct` in the sign-in config.\n      if (signInConfig && signInConfig['response_mode'] === 'direct') {\n        const authorizeUrl: URL = new URL(url);\n\n        return initializeEmbeddedSignInFlow({\n          url: `${authorizeUrl.origin}${authorizeUrl.pathname}`,\n          payload: Object.fromEntries(authorizeUrl.searchParams.entries()),\n        });\n      }\n\n      location.href = url;\n\n      await SPAUtils.waitTillPageRedirect();\n\n      return Promise.resolve({\n        allowedScopes: '',\n        displayName: '',\n        email: '',\n        sessionState: '',\n        sub: '',\n        tenantDomain: '',\n        username: '',\n      });\n    });\n  };\n\n  const signOut = async (): Promise<boolean> => {\n    if ((await _authenticationClient.isSignedIn()) && !_getSignOutURLFromSessionStorage) {\n      location.href = await _authenticationClient.getSignOutUrl();\n    } else {\n      location.href = SPAUtils.getSignOutUrl(config.clientId, instanceID);\n    }\n\n    _spaHelper.clearRefreshTokenTimeout();\n\n    await _dataLayer.removeOIDCProviderMetaData();\n    await _dataLayer.removeTemporaryData();\n    await _dataLayer.removeSessionData();\n    await _dataLayer.removeSessionStatus();\n\n    await SPAUtils.waitTillPageRedirect();\n\n    return true;\n  };\n\n  const enableRetrievingSignOutURLFromSession = (config: SPACustomGrantConfig) => {\n    if (config.preventSignOutURLUpdate) {\n      _getSignOutURLFromSessionStorage = true;\n    }\n  };\n\n  const exchangeToken = async (config: SPACustomGrantConfig): Promise<User | Response> =>\n    _authenticationHelper.exchangeToken(config, enableRetrievingSignOutURLFromSession);\n\n  const refreshAccessToken = async (): Promise<User> => {\n    try {\n      return await _authenticationHelper.refreshAccessToken(enableRetrievingSignOutURLFromSession);\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const revokeAccessToken = async (): Promise<boolean> => {\n    const timer: number = await _spaHelper.getRefreshTimeoutTimer();\n\n    return _authenticationClient\n      .revokeAccessToken()\n      .then(() => {\n        _sessionManagementHelper.reset();\n        _spaHelper.clearRefreshTokenTimeout(timer);\n\n        return Promise.resolve(true);\n      })\n      .catch(error => Promise.reject(error));\n  };\n\n  const requestAccessToken = async (\n    resolvedAuthorizationCode: string,\n    resolvedSessionState: string,\n    resolvedState: string,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<User> =>\n    _authenticationHelper.requestAccessToken(\n      resolvedAuthorizationCode,\n      resolvedSessionState,\n      checkSession,\n      undefined,\n      resolvedState,\n      tokenRequestConfig,\n    );\n\n  const constructSilentSignInUrl = async (additionalParams: Record<string, string | boolean> = {}): Promise<string> => {\n    const config = await _dataLayer.getConfigData();\n    const urlString: string = await _authenticationClient.getSignInUrl({\n      prompt: 'none',\n      state: SILENT_SIGN_IN_STATE,\n      ...additionalParams,\n    });\n\n    // Replace form_post with query\n    const urlObject = new URL(urlString);\n    urlObject.searchParams.set('response_mode', 'query');\n    const url: string = urlObject.toString();\n\n    if (config.storage === BrowserStorage.BrowserMemory && config.enablePKCE) {\n      const state = urlObject.searchParams.get(OIDCRequestConstants.Params.STATE);\n\n      SPAUtils.setPKCE(\n        extractPkceStorageKeyFromState(state ?? ''),\n        (await _authenticationClient.getPKCECode(state ?? '')) as string,\n      );\n    }\n\n    return url;\n  };\n\n  /**\n   * This method checks if there is an active user session in the server by sending a prompt none request.\n   * If the user is signed in, this method sends a token request. Returns false otherwise.\n   *\n   * @return {Promise<User|boolean} Returns a Promise that resolves with the User\n   * if the user is signed in or with `false` if there is no active user session in the server.\n   */\n  const trySignInSilently = async (\n    additionalParams?: Record<string, string | boolean>,\n    tokenRequestConfig?: {params: Record<string, unknown>},\n  ): Promise<User | boolean> =>\n    _authenticationHelper.trySignInSilently(\n      constructSilentSignInUrl,\n      requestAccessToken,\n      _sessionManagementHelper,\n      additionalParams,\n      tokenRequestConfig,\n    );\n\n  const getUser = async (): Promise<User> => _authenticationHelper.getUser();\n\n  const getDecodedIdToken = async (sessionId?: string): Promise<IdToken> => _authenticationHelper.getDecodedIdToken(sessionId);\n\n  const getCrypto = async (): Promise<IsomorphicCrypto> => _authenticationHelper.getCrypto();\n\n  const getIdToken = async (): Promise<string> => _authenticationHelper.getIdToken();\n\n  const getOpenIDProviderEndpoints = async (): Promise<OIDCEndpoints> =>\n    _authenticationHelper.getOpenIDProviderEndpoints();\n\n  const getAccessToken = async (): Promise<string> => _authenticationHelper.getAccessToken();\n\n  const getStorageManager = async (): Promise<StorageManager<MainThreadClientConfig>> =>\n    _authenticationHelper.getStorageManager();\n\n  const getConfigData = async (): Promise<AuthClientConfig<MainThreadClientConfig>> => _dataLayer.getConfigData();\n\n  const isSignedIn = async (): Promise<boolean> => _authenticationHelper.isSignedIn();\n\n  const isSessionActive = async (): Promise<boolean> => (await _dataLayer.getSessionStatus()) === 'true';\n\n  const reInitialize = async (newConfig: Partial<AuthClientConfig<MainThreadClientConfig>>): Promise<void> => {\n    const existingConfig = await _dataLayer.getConfigData();\n    const isCheckSessionIframeDifferent: boolean = !(\n      existingConfig &&\n      existingConfig.endpoints &&\n      existingConfig.endpoints.checkSessionIframe &&\n      newConfig &&\n      newConfig.endpoints &&\n      newConfig.endpoints.checkSessionIframe &&\n      existingConfig.endpoints.checkSessionIframe === newConfig.endpoints.checkSessionIframe\n    );\n    const config = {...existingConfig, ...newConfig};\n    await _authenticationClient.reInitialize(config);\n\n    // Re-initiates check session if the check session endpoint is updated.\n    if (config.enableOIDCSessionManagement && isCheckSessionIframeDifferent) {\n      _sessionManagementHelper.reset();\n\n      checkSession();\n    }\n  };\n\n  return {\n    disableHttpHandler,\n    enableHttpHandler,\n    getAccessToken,\n    getUser,\n    getConfigData,\n    getCrypto,\n    getStorageManager,\n    getDecodedIdToken,\n    getHttpClient,\n    getIdToken,\n    getOpenIDProviderEndpoints,\n    httpRequest,\n    httpRequestAll,\n    isSignedIn,\n    isSessionActive,\n    refreshAccessToken,\n    exchangeToken,\n    revokeAccessToken,\n    setHttpRequestErrorCallback,\n    setHttpRequestFinishCallback,\n    setHttpRequestStartCallback,\n    setHttpRequestSuccessCallback,\n    signIn,\n    signOut,\n    trySignInSilently,\n    reInitialize,\n  };\n};\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const INIT = \"init\";\nexport const SIGN_IN = \"sign-in\";\nexport const AUTH_CODE = \"auth-code\";\nexport const SIGN_OUT = \"sign-out\";\nexport const HTTP_REQUEST = \"http-request\";\nexport const HTTP_REQUEST_ALL = \"http-request-all\";\nexport const REQUEST_CUSTOM_GRANT = \"request-custom-grant\";\nexport const REVOKE_ACCESS_TOKEN = \"revoke-access-token\";\nexport const END_USER_SESSION = \"end-user-session\";\nexport const REQUEST_START = \"request-start\";\nexport const REQUEST_SUCCESS = \"request-success\";\nexport const REQUEST_ERROR = \"request-error\";\nexport const REQUEST_FINISH = \"request-finish\";\nexport const GET_OIDC_SERVICE_ENDPOINTS = \"get-oidc-service-endpoints\";\nexport const GET_BASIC_USER_INFO = \"get-basic-user-info\";\nexport const GET_DECODED_ID_TOKEN = \"get-decoded-id-token\";\nexport const GET_DECODED_IDP_ID_TOKEN = \"get-decoded-idp-id-token\";\nexport const GET_CRYPTO_HELPER = \"get-crypto-helper\"\nexport const ENABLE_HTTP_HANDLER = \"enable_http_handler\";\nexport const DISABLE_HTTP_HANDLER = \"disable_http_handler\";\nexport const GET_AUTH_URL = \"get_auth_url\";\nexport const REQUEST_ACCESS_TOKEN = \"request_get_token\";\nexport const IS_AUTHENTICATED = \"is_authenticated\";\nexport const GET_SIGN_OUT_URL = \"get_sign_out_url\";\nexport const REFRESH_ACCESS_TOKEN = \"refresh_access-token\";\nexport const REFRESH_ACCESS_TOKEN_ERR0R = \"refresh-access-token-error\";\nexport const SET_SESSION_STATE = \"set_session_state\";\nexport const START_AUTO_REFRESH_TOKEN = \"start_auto_refresh_token\";\nexport const UPDATE_CONFIG = \"update_config\";\nexport const GET_ID_TOKEN = \"get_id_token\";\nexport const CHECK_SESSION_SIGNED_IN = \"check_session_signed_in\";\nexport const CHECK_SESSION_SIGNED_OUT = \"check_session_signed_out\";\nexport const GET_CONFIG_DATA = \"get_config_data\";\nexport const SET_SESSION_STATE_FROM_IFRAME = \"set_session_state_from_iframe\";\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const TOKEN_REQUEST_CONFIG_KEY = \"token_request_config\";\n", "/**\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport enum Hooks {\n    SignIn = \"sign-in\",\n    SignOut = \"sign-out\",\n    Initialize = \"initialize\",\n    HttpRequestStart = \"http-request-start\",\n    HttpRequestFinish = \"http-request-finish\",\n    HttpRequestError = \"http-request-error\",\n    HttpRequestSuccess = \"http-request-success\",\n    RevokeAccessToken = \"revoke-access-token\",\n    CustomGrant = \"custom-grant\",\n    SignOutFailed = \"sign-out-failed\"\n}\n", "/**\n* Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n*\n* WSO2 Inc. licenses this file to you under the Apache License,\n* Version 2.0 (the \"License\"); you may not use this file except\n* in compliance with the License.\n* You may obtain a copy of the License at\n*\n*     http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied. See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nexport const OP_IFRAME = \"opIFrame\";\nexport const RP_IFRAME = \"rpIFrame\";\nexport const PROMPT_NONE_IFRAME = \"promptNoneIFrame\";\nexport const STATE = \"Y2hlY2tTZXNzaW9u\";\nexport const SILENT_SIGN_IN_STATE = \"sign-in-silently\";\nexport const INITIALIZED_SIGN_IN = \"initialized-sign-in\";\nexport const INITIALIZED_SILENT_SIGN_IN = \"initialized-silent-sign-in\";\nexport const PROMPT_NONE_REQUEST_SENT = \"promptNoneRequestSent\";\n", "/**\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const ERROR = \"error\";\nexport const ERROR_DESCRIPTION = \"error_description\";\nexport const CUSTOM_GRANT_CONFIG = \"custom_grant_config\";\nexport const STATE_QUERY = \"state\";\n", "/**\n * Copyright (c) 2021, WSO2 Inc. (http://www.wso2.com) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport const ACCESS_TOKEN_INVALID = \"Access token is invalid\";\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoAuthClient, ExtendedAuthorizeRequestUrlParams, OIDCRequestConstants} from '@asgardeo/javascript';\nimport {\n  CHECK_SESSION_SIGNED_IN,\n  CHECK_SESSION_SIGNED_OUT,\n  INITIALIZED_SILENT_SIGN_IN,\n  OP_IFRAME,\n  PROMPT_NONE_IFRAME,\n  RP_IFRAME,\n  SET_SESSION_STATE_FROM_IFRAME,\n  SILENT_SIGN_IN_STATE,\n  STATE,\n  STATE_QUERY,\n} from '../constants';\nimport {AuthorizationInfo, Message, SessionManagementHelperInterface} from '../models';\nimport {BrowserStorage} from '../models/storage';\nimport {SPAUtils} from '../utils';\n\nexport const SessionManagementHelper = (() => {\n  let _clientID: string;\n  let _checkSessionEndpoint: string;\n  let _sessionState: () => Promise<string>;\n  let _interval: number;\n  let _redirectURL: string;\n  let _sessionRefreshInterval: number;\n  let _signOut: () => Promise<string>;\n  let _sessionRefreshIntervalTimeout: number;\n  let _checkSessionIntervalTimeout: number;\n  let _storage: BrowserStorage;\n  let _setSessionState: (sessionState: string) => void;\n  let _getSignInUrl: (params?: ExtendedAuthorizeRequestUrlParams) => Promise<string>;\n\n  const initialize = (\n    clientId: string,\n    checkSessionEndpoint: string,\n    getSessionState: () => Promise<string>,\n    interval: number,\n    sessionRefreshInterval: number,\n    redirectURL: string,\n    getSignInUrl: (params?: ExtendedAuthorizeRequestUrlParams) => Promise<string>,\n  ): void => {\n    _clientID = clientId;\n    _checkSessionEndpoint = checkSessionEndpoint;\n    _sessionState = getSessionState;\n    _interval = interval;\n    _redirectURL = redirectURL;\n    _sessionRefreshInterval = sessionRefreshInterval;\n    _getSignInUrl = getSignInUrl;\n\n    if (_interval > -1) {\n      initiateCheckSession();\n    }\n\n    if (_sessionRefreshInterval > -1) {\n      sessionRefreshInterval = setInterval(() => {\n        sendPromptNoneRequest();\n      }, _sessionRefreshInterval * 1000) as unknown as number;\n    }\n  };\n\n  const initiateCheckSession = async (): Promise<void> => {\n    if (!_checkSessionEndpoint || !_clientID || !_redirectURL) {\n      return;\n    }\n\n    const OP_IFRAME = 'opIFrame';\n\n    async function checkSession(): Promise<void> {\n      const sessionState = await _sessionState();\n      if (Boolean(_clientID) && Boolean(sessionState)) {\n        const message = `${_clientID} ${sessionState}`;\n        const rpIFrame = document.getElementById(RP_IFRAME) as HTMLIFrameElement;\n        const opIframe: HTMLIFrameElement = rpIFrame?.contentDocument?.getElementById(OP_IFRAME) as HTMLIFrameElement;\n        const win: Window | null = opIframe.contentWindow;\n        win?.postMessage(message, _checkSessionEndpoint);\n      }\n    }\n\n    const rpIFrame = document.getElementById(RP_IFRAME) as HTMLIFrameElement;\n    const opIframe: HTMLIFrameElement = rpIFrame?.contentDocument?.getElementById(OP_IFRAME) as HTMLIFrameElement;\n    opIframe.src = _checkSessionEndpoint + '?client_id=' + _clientID + '&redirect_uri=' + _redirectURL;\n\n    _checkSessionIntervalTimeout = setInterval(checkSession, _interval * 1000) as unknown as number;\n\n    listenToResponseFromOPIFrame();\n  };\n\n  /**\n   * Destroys session intervals.\n   */\n  const reset = (): void => {\n    clearInterval(_checkSessionIntervalTimeout);\n    clearInterval(_sessionRefreshIntervalTimeout);\n  };\n\n  const listenToResponseFromOPIFrame = (): void => {\n    async function receiveMessage(e: MessageEvent) {\n      const targetOrigin = _checkSessionEndpoint;\n\n      if (!targetOrigin || targetOrigin?.indexOf(e.origin) < 0 || e?.data?.type === SET_SESSION_STATE_FROM_IFRAME) {\n        return;\n      }\n\n      if (e.data === 'unchanged') {\n        // [RP] session state has not changed\n      } else if (e.data === 'error') {\n        window.location.href = await _signOut();\n      } else if (e.data === 'changed') {\n        // [RP] session state has changed. Sending prompt=none request...\n        sendPromptNoneRequest();\n      }\n    }\n\n    window?.addEventListener('message', receiveMessage, false);\n  };\n\n  const sendPromptNoneRequest = async () => {\n    const rpIFrame = document.getElementById(RP_IFRAME) as HTMLIFrameElement;\n\n    const promptNoneIFrame: HTMLIFrameElement = rpIFrame?.contentDocument?.getElementById(\n      PROMPT_NONE_IFRAME,\n    ) as HTMLIFrameElement;\n\n    if (SPAUtils.canSendPromptNoneRequest()) {\n      SPAUtils.setPromptNoneRequestSent(true);\n\n      const receiveMessageListener = (e: MessageEvent<Message<string>>) => {\n        if (e?.data?.type === SET_SESSION_STATE_FROM_IFRAME) {\n          _setSessionState(e?.data?.data ?? '');\n          window?.removeEventListener('message', receiveMessageListener);\n        }\n      };\n\n      if (_storage === BrowserStorage.BrowserMemory || _storage === BrowserStorage.WebWorker) {\n        window?.addEventListener('message', receiveMessageListener);\n      }\n\n      const promptNoneURL: string = await _getSignInUrl({\n        prompt: 'none',\n        response_mode: 'query',\n        state: STATE,\n      });\n\n      promptNoneIFrame.src = promptNoneURL;\n    }\n  };\n\n  /**\n   * This contains the logic to process the response of a prompt none request.\n   *\n   * @param setSessionState The method that sets the session state.\n   * on the output of the content of the redirect URL\n   */\n  const receivePromptNoneResponse = async (\n    setSessionState?: (sessionState: string | null) => Promise<void>,\n  ): Promise<boolean> => {\n    const state = new URL(window.location.href).searchParams.get(STATE_QUERY);\n    const sessionState = new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.SESSION_STATE);\n    const parent = window.parent.parent;\n\n    if (state !== null && (state.includes(STATE) || state.includes(SILENT_SIGN_IN_STATE))) {\n      // Prompt none response.\n      const code = new URL(window.location.href).searchParams.get('code');\n\n      if (code !== null && code.length !== 0) {\n        if (state.includes(SILENT_SIGN_IN_STATE)) {\n          const message: Message<AuthorizationInfo> = {\n            data: {\n              code,\n              sessionState: sessionState ?? '',\n              state,\n            },\n            type: CHECK_SESSION_SIGNED_IN,\n          };\n\n          sessionStorage.setItem(INITIALIZED_SILENT_SIGN_IN, 'false');\n          parent.postMessage(message, parent.origin);\n          SPAUtils.setPromptNoneRequestSent(false);\n\n          window.location.href = 'about:blank';\n\n          await SPAUtils.waitTillPageRedirect();\n\n          return true;\n        }\n\n        const newSessionState = new URL(window.location.href).searchParams.get('session_state');\n\n        if (_storage === BrowserStorage.LocalStorage || _storage === BrowserStorage.SessionStorage) {\n          setSessionState && (await setSessionState(newSessionState));\n        } else {\n          const message: Message<string> = {\n            data: newSessionState ?? '',\n            type: SET_SESSION_STATE_FROM_IFRAME,\n          };\n\n          window?.parent?.parent?.postMessage(message);\n        }\n\n        SPAUtils.setPromptNoneRequestSent(false);\n\n        window.location.href = 'about:blank';\n\n        await SPAUtils.waitTillPageRedirect();\n\n        return true;\n      } else {\n        if (state.includes(SILENT_SIGN_IN_STATE)) {\n          const message: Message<null> = {\n            type: CHECK_SESSION_SIGNED_OUT,\n          };\n\n          window.parent.parent.postMessage(message, parent.origin);\n          SPAUtils.setPromptNoneRequestSent(false);\n\n          window.location.href = 'about:blank';\n\n          await SPAUtils.waitTillPageRedirect();\n\n          return true;\n        }\n\n        SPAUtils.setPromptNoneRequestSent(false);\n\n        const signOutURL = await _signOut();\n        // Clearing user session data before redirecting to the signOutURL because user has been already logged\n        // out by the initial logout request in the single logout flow.\n        await AsgardeoAuthClient.clearSession();\n        parent.location.href = signOutURL;\n        window.location.href = 'about:blank';\n\n        await SPAUtils.waitTillPageRedirect();\n\n        return true;\n      }\n    }\n\n    return false;\n  };\n\n  return async (\n    signOut: () => Promise<string>,\n    storage: BrowserStorage,\n    setSessionState: (sessionState: string) => void,\n  ): Promise<SessionManagementHelperInterface> => {\n    let rpIFrame = document.createElement('iframe');\n    rpIFrame.setAttribute('id', RP_IFRAME);\n    rpIFrame.style.display = 'none';\n\n    let rpIframeLoaded: boolean = false;\n    rpIFrame.onload = () => {\n      rpIFrame = document.getElementById(RP_IFRAME) as HTMLIFrameElement;\n\n      const rpDoc = rpIFrame?.contentDocument;\n\n      const opIFrame = rpDoc?.createElement('iframe');\n      if (opIFrame) {\n        opIFrame.setAttribute('id', OP_IFRAME);\n        opIFrame.style.display = 'none';\n      }\n\n      const promptNoneIFrame = rpDoc?.createElement('iframe');\n      if (promptNoneIFrame) {\n        promptNoneIFrame.setAttribute('id', PROMPT_NONE_IFRAME);\n        promptNoneIFrame.style.display = 'none';\n      }\n\n      opIFrame && rpIFrame?.contentDocument?.body?.appendChild(opIFrame);\n      promptNoneIFrame && rpIFrame?.contentDocument?.body?.appendChild(promptNoneIFrame);\n\n      rpIframeLoaded = true;\n    };\n\n    document?.body?.appendChild(rpIFrame);\n\n    _signOut = signOut;\n\n    _storage = storage;\n    _setSessionState = setSessionState;\n\n    const sleep = (): Promise<any> => {\n      return new Promise(resolve => setTimeout(resolve, 1));\n    };\n\n    while (rpIframeLoaded === false) {\n      await sleep();\n    }\n\n    return {\n      initialize,\n      receivePromptNoneResponse,\n      reset,\n    };\n  };\n})();\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport { ResponseMessage } from \"../models\";\n\nexport class MessageUtils {\n\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    private constructor() { }\n\n    /**\n     * JSON stringifies the passed object.\n     *\n     * @param {any} data The data object.\n     *\n     * @return {ResponseMessage<string>} JSON string.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    public static generateSuccessMessage(data?: any): ResponseMessage<string>{\n        return {\n            blob: data?.data instanceof Blob ? data?.data : null,\n            data: JSON.stringify(data ?? \"\"),\n            success: true\n        };\n    }\n\n    /**\n     * JSON stringifies the passed object.\n     *\n     * @param {any} error The error object.\n     *\n     * @return {ResponseMessage<string>} JSON string.\n     */\n    // eslint-disable-next-line @typescript-eslint/explicit-module-boundary-types\n    public static generateFailureMessage(error?: any): ResponseMessage<string> {\n        if (error?.toJSON) {\n            delete error.toJSON;\n        }\n\n        return {\n            error: JSON.stringify(error ?? \"\"),\n            success: false\n        };\n    }\n}\n", "/**\n * Copyright (c) 2020-2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoAuthClient, OIDCRequestConstants} from '@asgardeo/javascript';\nimport {SignOutError} from '../..';\nimport {\n  ERROR,\n  ERROR_DESCRIPTION,\n  INITIALIZED_SILENT_SIGN_IN,\n  PROMPT_NONE_REQUEST_SENT,\n  SILENT_SIGN_IN_STATE,\n  STATE_QUERY,\n} from '../constants';\n\nexport class SPAUtils {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  private constructor() {}\n\n  public static removeAuthorizationCode(): void {\n    const url = location.href;\n\n    history.pushState({}, document.title, url.replace(/\\?code=.*$/, ''));\n  }\n\n  public static getPKCE(pkceKey: string): string {\n    return sessionStorage.getItem(pkceKey) ?? '';\n  }\n\n  public static setPKCE(pkceKey: string, pkce: string): void {\n    sessionStorage.setItem(pkceKey, pkce);\n  }\n\n  public static setSignOutURL(url: string, clientId: string, instanceID: number): void {\n    sessionStorage.setItem(\n      `${OIDCRequestConstants.SignOut.Storage.StorageKeys.SIGN_OUT_URL}-instance_${instanceID}-${clientId}`,\n      url,\n    );\n  }\n\n  public static getSignOutUrl(clientId: string, instanceID: number): string {\n    return (\n      sessionStorage.getItem(\n        `${OIDCRequestConstants.SignOut.Storage.StorageKeys.SIGN_OUT_URL}-instance_${instanceID}-${clientId}`,\n      ) ?? ''\n    );\n  }\n\n  public static removePKCE(pkceKey: string): void {\n    sessionStorage.removeItem(pkceKey);\n  }\n\n  /**\n   * This method is used to discontinue the execution of the `signIn` method if `callOnlyOnRedirect` is true and\n   * the method is not called on being redirected from the authorization server.\n   *\n   * This method can be used to allow the `signIn` method to be called only\n   * on being redirected from the authorization server.\n   *\n   * @param callOnlyOnRedirect {boolean} - True if the method should only be called on redirect.\n   * @param authorizationCode {string} - Authorization code.\n   *\n   * @returns {boolean} - True if the method should be called.\n   */\n  public static canContinueSignIn(callOnlyOnRedirect: boolean, authorizationCode?: string): boolean {\n    if (callOnlyOnRedirect && !SPAUtils.hasErrorInURL() && !SPAUtils.hasAuthSearchParamsInURL() && !authorizationCode) {\n      return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Specifies if `trySilentSignIn` has been called.\n   *\n   * @returns {boolean} True if the `trySilentSignIn` method has been called once.\n   */\n  public static isInitializedSilentSignIn(): boolean {\n    return SPAUtils.isSilentStatePresentInURL();\n  }\n\n  /**\n   * Specifies if the `signIn` method has been called.\n   *\n   * @returns {boolean} True if the `signIn` has been called.\n   */\n  public static wasSignInCalled(): boolean {\n    if (SPAUtils.hasErrorInURL() || SPAUtils.hasAuthSearchParamsInURL()) {\n      if (!this.isSilentStatePresentInURL()) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  public static wasSilentSignInCalled(): boolean {\n    const silentSignIsInitialized = sessionStorage.getItem(INITIALIZED_SILENT_SIGN_IN);\n    const isSilentSignInInitialized = silentSignIsInitialized ? JSON.parse(silentSignIsInitialized) : null;\n\n    return Boolean(isSilentSignInInitialized);\n  }\n\n  public static async isSignOutSuccessful(): Promise<boolean> {\n    if (AsgardeoAuthClient.isSignOutSuccessful(window.location.href)) {\n      const newUrl = window.location.href.split('?')[0];\n      history.pushState({}, document.title, newUrl);\n\n      await AsgardeoAuthClient.clearSession();\n\n      return true;\n    }\n    return false;\n  }\n\n  public static didSignOutFail(): boolean | SignOutError {\n    if (AsgardeoAuthClient.didSignOutFail(window.location.href)) {\n      const url: URL = new URL(window.location.href);\n      const error: string | null = url.searchParams.get(ERROR);\n      const description: string | null = url.searchParams.get(ERROR_DESCRIPTION);\n      const newUrl = window.location.href.split('?')[0];\n      history.pushState({}, document.title, newUrl);\n\n      return {\n        description: description ?? '',\n        error: error ?? '',\n      };\n    }\n\n    return false;\n  }\n\n  /**\n   * Checks if the URL the user agent is redirected to after an authorization request has the state parameter.\n   *\n   * @returns {boolean} True if there is a session-check state or a silent sign-in state.\n   */\n  public static isSilentStatePresentInURL(): boolean {\n    const state = new URL(window.location.href).searchParams.get('state');\n\n    return state?.includes(SILENT_SIGN_IN_STATE) ?? false;\n  }\n\n  /**\n   * Util function to test if `code` and `session_state` are available in the URL as search params.\n   * @since 0.2.0\n   * @deprecated Use `hasAuthParamsInUrl` from `@asgardeo/browser` instead.\n   *\n   * @param params - Search params.\n   * @return {boolean}\n   */\n  public static hasAuthSearchParamsInURL(params: string = window.location.search): boolean {\n    const AUTH_CODE_REGEXP: RegExp = /[?&]code=[^&]+/;\n\n    return AUTH_CODE_REGEXP.test(params);\n  }\n\n  /**\n   * Util function to check if the URL contains an error.\n   *\n   * @param url - URL to be checked.\n   *\n   * @returns {boolean} - True if the URL contains an error.\n   */\n  public static hasErrorInURL(url: string = window.location.href): boolean {\n    const urlObject: URL = new URL(url);\n    return (\n      !!urlObject.searchParams.get(ERROR) &&\n      urlObject.searchParams.get(STATE_QUERY) !== OIDCRequestConstants.Params.SIGN_OUT_SUCCESS\n    );\n  }\n\n  /**\n   * Checks if a prompt none can be sent by checking if a request has already been sent.\n   *\n   * @since 0.2.3\n   *\n   * @returns {boolean} - True if a prompt none request has not been sent.\n   */\n  public static canSendPromptNoneRequest(): boolean {\n    const promptNoneRequestSentRaw = sessionStorage.getItem(PROMPT_NONE_REQUEST_SENT);\n    const promptNoneRequestSent = promptNoneRequestSentRaw ? JSON.parse(promptNoneRequestSentRaw) : null;\n\n    return !promptNoneRequestSent;\n  }\n\n  /**\n   * Sets the status of prompt none request.\n   *\n   * @since 0.2.3\n   *\n   * @param canSend {boolean} - True if a prompt none request can be sent.\n   */\n  public static setPromptNoneRequestSent(canSend: boolean): void {\n    sessionStorage.setItem(PROMPT_NONE_REQUEST_SENT, JSON.stringify(canSend));\n  }\n\n  /**\n   * Waits for a specified amount of time to give the user agent enough time to redirect.\n   *\n   * @param time {number} - Time in seconds.\n   */\n  public static async waitTillPageRedirect(time?: number): Promise<void> {\n    const timeToWait = time ?? 3000;\n\n    await new Promise(resolve => setTimeout(resolve, timeToWait * 1000));\n  }\n\n  /**\n   * Waits for a condition before executing the rest of the code in non-blocking manner.\n   *\n   * @param condition {() => boolean} - Condition to be checked.\n   * @param timeout {number} - Time in miliseconds.\n   */\n  public static until = (condition: () => boolean, timeout: number = 500) => {\n    const poll = done => (condition() ? done() : setTimeout(() => poll(done), timeout));\n\n    return new Promise(poll);\n  };\n}\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoAuthClient, StorageManager, TokenConstants} from '@asgardeo/javascript';\n\nimport {AuthenticationHelper} from '../helpers/authentication-helper';\nimport {MainThreadClientConfig, WebWorkerClientConfig} from '../models/client-config';\n\nexport class SPAHelper<T extends MainThreadClientConfig | WebWorkerClientConfig> {\n  private _authenticationClient: AsgardeoAuthClient<T>;\n  private _storageManager: StorageManager<T>;\n\n  public constructor(authClient: AsgardeoAuthClient<T>) {\n    this._authenticationClient = authClient;\n    this._storageManager = this._authenticationClient.getStorageManager();\n  }\n\n  public async refreshAccessTokenAutomatically(\n    authenticationHelper: AuthenticationHelper<MainThreadClientConfig | WebWorkerClientConfig>,\n  ): Promise<void> {\n    const shouldRefreshAutomatically: boolean =\n      (await this._storageManager.getConfigData())?.periodicTokenRefresh ?? false;\n\n    if (!shouldRefreshAutomatically) {\n      return;\n    }\n\n    const sessionData = await this._storageManager.getSessionData();\n    if (sessionData.refresh_token) {\n      // Refresh 10 seconds before the expiry time\n      const expiryTime = parseInt(sessionData.expires_in);\n      const time = expiryTime <= 10 ? expiryTime : expiryTime - 10;\n\n      const timer = setTimeout(async () => {\n        await authenticationHelper.refreshAccessToken();\n      }, time * 1000);\n\n      await this._storageManager.setTemporaryDataParameter(\n        TokenConstants.Storage.StorageKeys.REFRESH_TOKEN_TIMER,\n        JSON.stringify(timer),\n      );\n    }\n  }\n\n  public async getRefreshTimeoutTimer(): Promise<number> {\n    if (await this._storageManager.getTemporaryDataParameter(TokenConstants.Storage.StorageKeys.REFRESH_TOKEN_TIMER)) {\n      return JSON.parse(\n        (await this._storageManager.getTemporaryDataParameter(\n          TokenConstants.Storage.StorageKeys.REFRESH_TOKEN_TIMER,\n        )) as string,\n      );\n    }\n\n    return -1;\n  }\n\n  public async clearRefreshTokenTimeout(timer?: number): Promise<void> {\n    if (timer) {\n      clearTimeout(timer);\n\n      return;\n    }\n\n    const refreshTimer: number = await this.getRefreshTimeoutTimer();\n\n    if (refreshTimer !== -1) {\n      clearTimeout(refreshTimer);\n    }\n  }\n}\n", "/**\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\nimport axios from 'axios';\nimport {HttpError, HttpRequestConfig, HttpResponse} from '../../..';\nimport {staticDecorator} from '../helpers';\nimport {HttpClientInstance, HttpClientInterface, HttpClientStatic} from '../models';\n\n/**\n * An Http Http client to perform Http requests.\n *\n * @remarks\n * Typescript doesn't support static functions in interfaces. Therefore,\n * a decorator i.e `staticDecorator` was written to add static support.\n * Follow {@link https://github.com/Microsoft/TypeScript/issues/13462}\n * for more info.\n *\n * @example\n * Example usage.\n * ```\n *\n * const httpClient = HttpClient.getInstance();\n * httpClient.init(true, onRequestStart, onRequestSuccess, onRequestError, onRequestFinish);\n * ```\n */\n@staticDecorator<HttpClientStatic<HttpClientInstance>>()\nexport class HttpClient implements HttpClientInterface<HttpRequestConfig, HttpResponse, HttpError> {\n  private static axiosInstance: HttpClientInstance;\n  private static clientInstance: HttpClient;\n  private static isHandlerEnabled: boolean;\n  private attachToken: (request: HttpRequestConfig) => Promise<void> = () => Promise.resolve();\n  private requestStartCallback: (request: HttpRequestConfig) => void = () => null;\n  private requestSuccessCallback: (response: HttpResponse) => void = () => null;\n  private requestErrorCallback: (error: HttpError) => void = () => null;\n  private requestFinishCallback: () => void = () => null;\n  private static readonly DEFAULT_HANDLER_DISABLE_TIMEOUT: number = 1000;\n\n  /**\n   * Private constructor to avoid object instantiation from outside\n   * the class.\n   *\n   * @hideconstructor\n   */\n  private constructor() {\n    this.init = this.init.bind(this);\n    this.setHttpRequestErrorCallback = this.setHttpRequestErrorCallback.bind(this);\n    this.setHttpRequestFinishCallback = this.setHttpRequestFinishCallback.bind(this);\n    this.setHttpRequestStartCallback = this.setHttpRequestStartCallback.bind(this);\n    this.setHttpRequestSuccessCallback = this.setHttpRequestSuccessCallback.bind(this);\n  }\n\n  /**\n   * Returns an aggregated instance of type `HttpInstance` of `HttpClient`.\n   *\n   * @return {any}\n   */\n  public static getInstance(): HttpClientInstance {\n    if (this.axiosInstance) {\n      return this.axiosInstance;\n    }\n\n    this.axiosInstance = axios.create({\n      withCredentials: true,\n    });\n\n    if (!this.clientInstance) {\n      this.clientInstance = new HttpClient();\n    }\n\n    // Register request interceptor\n    this.axiosInstance.interceptors.request.use(async request => await this.clientInstance.requestHandler(request));\n\n    // Register response interceptor\n    this.axiosInstance.interceptors.response.use(\n      response => this.clientInstance.successHandler(response),\n      error => this.clientInstance.errorHandler(error),\n    );\n\n    // Add the missing helper methods from axios\n    this.axiosInstance.all = axios.all;\n    this.axiosInstance.spread = axios.spread;\n\n    // Add the init method from the `HttpClient` instance.\n    this.axiosInstance.init = this.clientInstance.init;\n\n    // Add the handler enabling & disabling methods to the instance.\n    this.axiosInstance.enableHandler = this.clientInstance.enableHandler;\n    this.axiosInstance.disableHandler = this.clientInstance.disableHandler;\n    this.axiosInstance.disableHandlerWithTimeout = this.clientInstance.disableHandlerWithTimeout;\n    this.axiosInstance.setHttpRequestStartCallback = this.clientInstance.setHttpRequestStartCallback;\n    this.axiosInstance.setHttpRequestSuccessCallback = this.clientInstance.setHttpRequestSuccessCallback;\n    this.axiosInstance.setHttpRequestErrorCallback = this.clientInstance.setHttpRequestErrorCallback;\n    this.axiosInstance.setHttpRequestFinishCallback = this.clientInstance.setHttpRequestFinishCallback;\n    return this.axiosInstance;\n  }\n\n  /**\n   * Intercepts all the requests.\n   * If the `isHandlerEnabled` flag is set to true, fires the `requestStartCallback`\n   * and retrieves the access token from the server and attaches it to the request.\n   * Else, just returns the original request.\n   *\n   * @param {HttpRequestConfig} request - Original request.\n   * @return {HttpRequestConfig}\n   */\n  public async requestHandler(request: HttpRequestConfig): Promise<HttpRequestConfig> {\n    await this.attachToken(request);\n\n    if (request?.shouldEncodeToFormData) {\n      const data = request?.data;\n      const formData = new FormData();\n      Object.keys(data).forEach(key => {\n        formData.append(key, data[key]);\n      });\n\n      request.data = formData;\n    }\n\n    request.startTimeInMs = new Date().getTime();\n\n    if (HttpClient.isHandlerEnabled) {\n      if (this.requestStartCallback && typeof this.requestStartCallback === 'function') {\n        this.requestStartCallback(request);\n      }\n    }\n    return request;\n  }\n\n  /**\n   * Handles response errors.\n   * If the `isHandlerEnabled` flag is set to true, fires the `requestErrorCallback`\n   * and the `requestFinishCallback` functions. Else, just returns the original error.\n   *\n   * @param {HttpError} error - Original error.\n   * @return {HttpError}\n   */\n  public errorHandler(error: HttpError): HttpError {\n    if (HttpClient.isHandlerEnabled) {\n      if (this.requestErrorCallback && typeof this.requestErrorCallback === 'function') {\n        this.requestErrorCallback(error);\n      }\n      if (this.requestFinishCallback && typeof this.requestFinishCallback === 'function') {\n        this.requestFinishCallback();\n      }\n    }\n    throw error;\n  }\n\n  /**\n   * Handles response success.\n   * If the `isHandlerEnabled` flag is set to true, fires the `requestSuccessCallback`\n   * and the `requestFinishCallback` functions. Else, just returns the original response.\n   *\n   * @param {HttpResponse} response - Original response.\n   * @return {HttpResponse}\n   */\n  public successHandler(response: HttpResponse): HttpResponse {\n    if (HttpClient.isHandlerEnabled) {\n      if (this.requestSuccessCallback && typeof this.requestSuccessCallback === 'function') {\n        this.requestSuccessCallback(response);\n      }\n      if (this.requestFinishCallback && typeof this.requestFinishCallback === 'function') {\n        this.requestFinishCallback();\n      }\n    }\n    return response;\n  }\n\n  /**\n   * Initializes the Http client.\n   *\n   * @param isHandlerEnabled - Flag to toggle handler enablement.\n   * @param requestStartCallback - Callback function to be triggered on request start.\n   * @param requestSuccessCallback - Callback function to be triggered on request success.\n   * @param requestErrorCallback - Callback function to be triggered on request error.\n   * @param requestFinishCallback - Callback function to be triggered on request error.\n   */\n  public async init(\n    isHandlerEnabled = true,\n    attachToken: (request: HttpRequestConfig) => Promise<void>,\n  ): Promise<void> {\n    HttpClient.isHandlerEnabled = isHandlerEnabled;\n    this.attachToken = attachToken;\n  }\n\n  /**\n   * Enables the handler.\n   */\n  public enableHandler(): void {\n    HttpClient.isHandlerEnabled = true;\n  }\n\n  /**\n   * Disables the handler.\n   */\n  public disableHandler(): void {\n    HttpClient.isHandlerEnabled = false;\n  }\n\n  /**\n   * Disables the handler for a given period of time.\n   *\n   * @param {number} timeout - Timeout in milliseconds.\n   */\n  public disableHandlerWithTimeout(timeout: number = HttpClient.DEFAULT_HANDLER_DISABLE_TIMEOUT): void {\n    HttpClient.isHandlerEnabled = false;\n\n    setTimeout(() => {\n      HttpClient.isHandlerEnabled = true;\n    }, timeout);\n  }\n\n  public setHttpRequestStartCallback(callback: () => void): void {\n    this.requestStartCallback = callback;\n  }\n\n  public setHttpRequestSuccessCallback(callback: (response: HttpResponse) => void): void {\n    this.requestSuccessCallback = callback;\n  }\n  public setHttpRequestErrorCallback(callback: (error: HttpError) => void): void {\n    this.requestErrorCallback = callback;\n  }\n  public setHttpRequestFinishCallback(callback: () => void): void {\n    this.requestFinishCallback = callback;\n  }\n}\n", "/**\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n *\n */\n\n/* eslint-disable @typescript-eslint/no-empty-function */\n/* eslint-disable @typescript-eslint/no-unused-vars */\n\n/**\n * A decorator to supplement static interface support.\n *\n * @return {<U extends T>(constructor: U) => void}\n */\nexport function staticDecorator<T>() {\n    return <U extends T>(_constructor: U): any => {};\n}\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {Storage} from '@asgardeo/javascript';\n\nexport class LocalStore implements Storage {\n  public async setData(key: string, value: string): Promise<void> {\n    localStorage.setItem(key, value);\n  }\n\n  public async getData(key: string): Promise<string> {\n    return localStorage.getItem(key) ?? '{}';\n  }\n\n  public async removeData(key: string): Promise<void> {\n    localStorage.removeItem(key);\n  }\n}\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {Storage} from '@asgardeo/javascript';\n\nexport class MemoryStore implements Storage {\n  private _data: Map<string, string>;\n\n  public constructor() {\n    this._data = new Map();\n  }\n\n  public async setData(key: string, value: string): Promise<void> {\n    this._data.set(key, value);\n  }\n\n  public async getData(key: string): Promise<string> {\n    return this._data?.get(key) ?? '{}';\n  }\n\n  public async removeData(key: string): Promise<void> {\n    this._data.delete(key);\n  }\n}\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\nimport {Storage} from '@asgardeo/javascript';\n\nexport class SessionStore implements Storage {\n  public async setData(key: string, value: string): Promise<void> {\n    sessionStorage.setItem(key, value);\n  }\n\n  public async getData(key: string): Promise<string> {\n    return sessionStorage.getItem(key) ?? '{}';\n  }\n\n  public async removeData(key: string): Promise<void> {\n    sessionStorage.removeItem(key);\n  }\n}\n", "/**\n * Copyright (c) 2019, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {Buffer} from 'buffer';\nimport {AsgardeoAuthException, Crypto, JWKInterface} from '@asgardeo/javascript';\nimport base64url from 'base64url';\nimport sha256 from 'fast-sha256';\nimport {createLocalJWKSet, jwtVerify} from 'jose';\nimport randombytes from 'randombytes';\n\nexport class SPACryptoUtils implements Crypto<Buffer | string> {\n  /**\n   * Get URL encoded string.\n   *\n   * @returns {string} base 64 url encoded value.\n   */\n  public base64URLEncode(value: Buffer | string): string {\n    return base64url.encode(value).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n  }\n\n  public base64URLDecode(value: string): string {\n    return base64url.decode(value).toString();\n  }\n\n  public hashSha256(data: string): string | Buffer {\n    return Buffer.from(sha256(new TextEncoder().encode(data)));\n  }\n\n  public generateRandomBytes(length: number): string | Buffer {\n    return randombytes(length);\n  }\n\n  public verifyJwt(\n    idToken: string,\n    jwk: Partial<JWKInterface>,\n    algorithms: string[],\n    clientId: string,\n    issuer: string,\n    subject: string,\n    clockTolerance?: number,\n    validateJwtIssuer?: boolean,\n  ): Promise<boolean> {\n    const jwtVerifyOptions = {\n      algorithms: algorithms,\n      audience: clientId,\n      clockTolerance: clockTolerance,\n      subject: subject,\n    };\n\n    if (validateJwtIssuer ?? true) {\n      jwtVerifyOptions['issuer'] = issuer;\n    }\n\n    return jwtVerify(\n      idToken,\n      createLocalJWKSet({\n        keys: [jwk],\n      }),\n      jwtVerifyOptions,\n    )\n      .then(() => {\n        return Promise.resolve(true);\n      })\n      .catch(error => {\n        return Promise.reject(\n          new AsgardeoAuthException(\n            'SPA-CRYPTO-UTILS-VJ-IV01',\n            error?.reason ?? JSON.stringify(error),\n            `${error?.code} ${error?.claim}`,\n          ),\n        );\n      });\n  }\n}\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoAuthClient,\n  AsgardeoAuthException,\n  AuthClientConfig,\n  User,\n  IsomorphicCrypto,\n  TokenExchangeRequestConfig,\n  IdToken,\n  ExtendedAuthorizeRequestUrlParams,\n  OIDCEndpoints,\n  OIDCRequestConstants,\n  Storage,\n  extractPkceStorageKeyFromState,\n} from '@asgardeo/javascript';\nimport {\n  DISABLE_HTTP_HANDLER,\n  ENABLE_HTTP_HANDLER,\n  GET_AUTH_URL,\n  GET_BASIC_USER_INFO,\n  GET_CONFIG_DATA,\n  GET_CRYPTO_HELPER,\n  GET_DECODED_IDP_ID_TOKEN,\n  GET_DECODED_ID_TOKEN,\n  GET_ID_TOKEN,\n  GET_OIDC_SERVICE_ENDPOINTS,\n  GET_SIGN_OUT_URL,\n  HTTP_REQUEST,\n  HTTP_REQUEST_ALL,\n  INIT,\n  IS_AUTHENTICATED,\n  REFRESH_ACCESS_TOKEN,\n  REQUEST_ACCESS_TOKEN,\n  REQUEST_CUSTOM_GRANT,\n  REQUEST_FINISH,\n  REQUEST_START,\n  REQUEST_SUCCESS,\n  REVOKE_ACCESS_TOKEN,\n  SET_SESSION_STATE,\n  SIGN_OUT,\n  SILENT_SIGN_IN_STATE,\n  START_AUTO_REFRESH_TOKEN,\n  UPDATE_CONFIG,\n} from '../constants';\nimport {AuthenticationHelper, SPAHelper, SessionManagementHelper} from '../helpers';\nimport {\n  AuthorizationInfo,\n  AuthorizationResponse,\n  HttpClient,\n  HttpError,\n  HttpRequestConfig,\n  HttpResponse,\n  Message,\n  ResponseMessage,\n  WebWorkerClientConfig,\n  WebWorkerClientInterface,\n} from '../models';\nimport {SPACustomGrantConfig} from '../models/request-custom-grant';\nimport {BrowserStorage} from '../models/storage';\nimport {LocalStore, MemoryStore, SessionStore} from '../stores';\nimport {SPAUtils} from '../utils';\nimport {SPACryptoUtils} from '../utils/crypto-utils';\n\nconst initiateStore = (store: BrowserStorage | undefined): Storage => {\n  switch (store) {\n    case BrowserStorage.LocalStorage:\n      return new LocalStore();\n    case BrowserStorage.SessionStorage:\n      return new SessionStore();\n    case BrowserStorage.BrowserMemory:\n      return new MemoryStore();\n    default:\n      return new SessionStore();\n  }\n};\n\nexport const WebWorkerClient = async (\n  instanceID: number,\n  config: AuthClientConfig<WebWorkerClientConfig>,\n  webWorker: new () => Worker,\n  getAuthHelper: (\n    authClient: AsgardeoAuthClient<WebWorkerClientConfig>,\n    spaHelper: SPAHelper<WebWorkerClientConfig>,\n  ) => AuthenticationHelper<WebWorkerClientConfig>,\n): Promise<WebWorkerClientInterface> => {\n  /**\n   * HttpClient handlers\n   */\n  let httpClientHandlers: HttpClient;\n  /**\n   * API request time out.\n   */\n  const _requestTimeout: number = config?.requestTimeout ?? 60000;\n  let _isHttpHandlerEnabled: boolean = true;\n  let _getSignOutURLFromSessionStorage: boolean = false;\n\n  const _store: Storage = initiateStore(config.storage as BrowserStorage);\n  const _cryptoUtils: SPACryptoUtils = new SPACryptoUtils();\n  const _authenticationClient = new AsgardeoAuthClient<WebWorkerClientConfig>();\n  await _authenticationClient.initialize(config, _store, _cryptoUtils, instanceID);\n  const _spaHelper = new SPAHelper<WebWorkerClientConfig>(_authenticationClient);\n\n  const _sessionManagementHelper = await SessionManagementHelper(\n    async () => {\n      const message: Message<string> = {\n        type: SIGN_OUT,\n      };\n\n      try {\n        const signOutURL = await communicate<string, string>(message);\n\n        return signOutURL;\n      } catch {\n        return SPAUtils.getSignOutUrl(config.clientId, instanceID);\n      }\n    },\n    config.storage as BrowserStorage,\n    (sessionState: string) => setSessionState(sessionState),\n  );\n\n  const _authenticationHelper: AuthenticationHelper<WebWorkerClientConfig> = getAuthHelper(\n    _authenticationClient,\n    _spaHelper,\n  );\n\n  const worker: Worker = new webWorker();\n\n  const communicate = <T, R>(message: Message<T>): Promise<R> => {\n    const channel = new MessageChannel();\n\n    worker.postMessage(message, [channel.port2]);\n\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        reject(\n          new AsgardeoAuthException(\n            'SPA-WEB_WORKER_CLIENT-COM-TO01',\n            'Operation timed out.',\n            'No response was received from the web worker for ' +\n              _requestTimeout / 1000 +\n              ' since dispatching the request',\n          ),\n        );\n      }, _requestTimeout);\n\n      return (channel.port1.onmessage = ({data}: {data: ResponseMessage<string>}) => {\n        clearTimeout(timer);\n        channel.port1.close();\n        channel.port2.close();\n\n        if (data?.success) {\n          const responseData = data?.data ? JSON.parse(data?.data) : null;\n          if (data?.blob) {\n            responseData.data = data?.blob;\n          }\n\n          resolve(responseData);\n        } else {\n          reject(data.error ? JSON.parse(data.error) : null);\n        }\n      });\n    });\n  };\n\n  /**\n   * Allows using custom grant types.\n   *\n   * @param {CustomGrantRequestParams} requestParams Request Parameters.\n   *\n   * @returns {Promise<HttpResponse|boolean>} A promise that resolves with a boolean value or the request\n   * response if the the `returnResponse` attribute in the `requestParams` object is set to `true`.\n   */\n  const exchangeToken = (requestParams: SPACustomGrantConfig): Promise<Response | User> => {\n    const message: Message<TokenExchangeRequestConfig> = {\n      data: requestParams,\n      type: REQUEST_CUSTOM_GRANT,\n    };\n\n    return communicate<TokenExchangeRequestConfig, Response | User>(message)\n      .then(response => {\n        if (requestParams.preventSignOutURLUpdate) {\n          _getSignOutURLFromSessionStorage = true;\n        }\n\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  /**\n   *\n   * Send the API request to the web worker and returns the response.\n   *\n   * @param {HttpRequestConfig} config The Http Request Config object\n   *\n   * @returns {Promise<HttpResponse>} A promise that resolves with the response data.\n   */\n  const httpRequest = <T = any>(config: HttpRequestConfig): Promise<HttpResponse<T>> => {\n    /**\n     *\n     * Currently FormData is not supported to send to a web worker\n     *\n     * Below workaround will represent FormData object as a JSON.\n     * This workaround will not be needed once FormData object is made cloneable\n     * Reference: https://github.com/whatwg/xhr/issues/55\n     */\n    if (config?.data && config?.data instanceof FormData) {\n      config.data = {...Object.fromEntries((config?.data as any).entries()), formData: true};\n    }\n\n    const message: Message<HttpRequestConfig> = {\n      data: config,\n      type: HTTP_REQUEST,\n    };\n\n    return communicate<HttpRequestConfig, HttpResponse<T>>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(async error => {\n        if (_isHttpHandlerEnabled) {\n          if (typeof httpClientHandlers.requestErrorCallback === 'function') {\n            await httpClientHandlers.requestErrorCallback(error);\n          }\n          if (typeof httpClientHandlers.requestFinishCallback === 'function') {\n            httpClientHandlers.requestFinishCallback();\n          }\n        }\n\n        return Promise.reject(error);\n      });\n  };\n\n  /**\n   *\n   * Send multiple API requests to the web worker and returns the response.\n   * Similar `axios.spread` in functionality.\n   *\n   * @param {HttpRequestConfig[]} configs - The Http Request Config object\n   *\n   * @returns {Promise<HttpResponse<T>[]>} A promise that resolves with the response data.\n   */\n  const httpRequestAll = <T = any>(configs: HttpRequestConfig[]): Promise<HttpResponse<T>[]> => {\n    const message: Message<HttpRequestConfig[]> = {\n      data: configs,\n      type: HTTP_REQUEST_ALL,\n    };\n\n    return communicate<HttpRequestConfig[], HttpResponse<T>[]>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(async error => {\n        if (_isHttpHandlerEnabled) {\n          if (typeof httpClientHandlers.requestErrorCallback === 'function') {\n            await httpClientHandlers.requestErrorCallback(error);\n          }\n          if (typeof httpClientHandlers.requestFinishCallback === 'function') {\n            httpClientHandlers.requestFinishCallback();\n          }\n        }\n\n        return Promise.reject(error);\n      });\n  };\n\n  const enableHttpHandler = (): Promise<boolean> => {\n    const message: Message<null> = {\n      type: ENABLE_HTTP_HANDLER,\n    };\n    return communicate<null, null>(message)\n      .then(() => {\n        _isHttpHandlerEnabled = true;\n\n        return Promise.resolve(true);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const disableHttpHandler = (): Promise<boolean> => {\n    const message: Message<null> = {\n      type: DISABLE_HTTP_HANDLER,\n    };\n    return communicate<null, null>(message)\n      .then(() => {\n        _isHttpHandlerEnabled = false;\n\n        return Promise.resolve(true);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  /**\n   * Initializes the object with authentication parameters.\n   *\n   * @param {ConfigInterface} config The configuration object.\n   *\n   * @returns {Promise<boolean>} Promise that resolves when initialization is successful.\n   *\n   */\n  const initialize = (): Promise<boolean> => {\n    if (!httpClientHandlers) {\n      httpClientHandlers = {\n        requestErrorCallback: () => Promise.resolve(),\n        requestFinishCallback: () => null,\n        requestStartCallback: () => null,\n        requestSuccessCallback: () => null,\n      };\n    }\n\n    worker.onmessage = ({data}) => {\n      switch (data.type) {\n        case REQUEST_FINISH:\n          httpClientHandlers?.requestFinishCallback && httpClientHandlers?.requestFinishCallback();\n          break;\n        case REQUEST_START:\n          httpClientHandlers?.requestStartCallback && httpClientHandlers?.requestStartCallback();\n          break;\n        case REQUEST_SUCCESS:\n          httpClientHandlers?.requestSuccessCallback &&\n            httpClientHandlers?.requestSuccessCallback(data.data ? JSON.parse(data.data) : null);\n          break;\n      }\n    };\n\n    const message: Message<AuthClientConfig<WebWorkerClientConfig>> = {\n      data: config,\n      type: INIT,\n    };\n\n    return communicate<AuthClientConfig<WebWorkerClientConfig>, null>(message)\n      .then(() => {\n        return Promise.resolve(true);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const setSessionState = (sessionState: string | null): Promise<void> => {\n    const message: Message<string | null> = {\n      data: sessionState,\n      type: SET_SESSION_STATE,\n    };\n\n    return communicate<string | null, void>(message);\n  };\n\n  const startAutoRefreshToken = (): Promise<void> => {\n    const message: Message<null> = {\n      type: START_AUTO_REFRESH_TOKEN,\n    };\n\n    return communicate<null, void>(message);\n  };\n\n  const checkSession = async (): Promise<void> => {\n    const oidcEndpoints: OIDCEndpoints = await getOpenIDProviderEndpoints();\n    const config: AuthClientConfig<WebWorkerClientConfig> = await getConfigData();\n\n    _authenticationHelper.initializeSessionManger(\n      config,\n      oidcEndpoints,\n      async () => (await _authenticationClient.getUserSession()).sessionState,\n      async (params?: ExtendedAuthorizeRequestUrlParams): Promise<string> =>\n        (await getSignInUrl(params)).authorizationURL,\n      _sessionManagementHelper,\n    );\n  };\n\n  const constructSilentSignInUrl = async (additionalParams: Record<string, string | boolean> = {}): Promise<string> => {\n    const config: AuthClientConfig<WebWorkerClientConfig> = await getConfigData();\n    const message: Message<ExtendedAuthorizeRequestUrlParams> = {\n      data: {\n        prompt: 'none',\n        state: SILENT_SIGN_IN_STATE,\n        ...additionalParams,\n      },\n      type: GET_AUTH_URL,\n    };\n\n    const response: AuthorizationResponse = await communicate<ExtendedAuthorizeRequestUrlParams, AuthorizationResponse>(\n      message,\n    );\n\n    const pkceKey: string = extractPkceStorageKeyFromState(\n      new URL(response.authorizationURL).searchParams.get(OIDCRequestConstants.Params.STATE) ?? '',\n    );\n\n    response.pkce && config.enablePKCE && SPAUtils.setPKCE(pkceKey, response.pkce);\n\n    const urlString: string = response.authorizationURL;\n\n    // Replace form_post with query\n    const urlObject = new URL(urlString);\n    urlObject.searchParams.set('response_mode', 'query');\n    const url: string = urlObject.toString();\n\n    return url;\n  };\n\n  /**\n   * This method checks if there is an active user session in the server by sending a prompt none request.\n   * If the user is signed in, this method sends a token request. Returns false otherwise.\n   *\n   * @return {Promise<User|boolean} Returns a Promise that resolves with the User\n   * if the user is signed in or with `false` if there is no active user session in the server.\n   */\n  const trySignInSilently = async (\n    additionalParams?: Record<string, string | boolean>,\n    tokenRequestConfig?: {params: Record<string, unknown>},\n  ): Promise<User | boolean> => {\n    return await _authenticationHelper.trySignInSilently(\n      constructSilentSignInUrl,\n      requestAccessToken,\n      _sessionManagementHelper,\n      additionalParams,\n      tokenRequestConfig,\n    );\n  };\n\n  /**\n   * Generates an authorization URL.\n   *\n   * @param {ExtendedAuthorizeRequestUrlParams} params Authorization URL params.\n   * @returns {Promise<string>} Authorization URL.\n   */\n  const getSignInUrl = async (params?: ExtendedAuthorizeRequestUrlParams): Promise<AuthorizationResponse> => {\n    const config: AuthClientConfig<WebWorkerClientConfig> = await getConfigData();\n\n    const message: Message<ExtendedAuthorizeRequestUrlParams> = {\n      data: params,\n      type: GET_AUTH_URL,\n    };\n\n    return communicate<ExtendedAuthorizeRequestUrlParams, AuthorizationResponse>(message).then(\n      async (response: AuthorizationResponse) => {\n        if (response.pkce && config.enablePKCE) {\n          const pkceKey: string = extractPkceStorageKeyFromState(\n            new URL(response.authorizationURL).searchParams.get(OIDCRequestConstants.Params.STATE) ?? '',\n          );\n\n          SPAUtils.setPKCE(pkceKey, response.pkce);\n        }\n\n        return Promise.resolve(response);\n      },\n    );\n  };\n\n  const requestAccessToken = async (\n    resolvedAuthorizationCode: string,\n    resolvedSessionState: string,\n    resolvedState: string,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<User> => {\n    const config: AuthClientConfig<WebWorkerClientConfig> = await getConfigData();\n    const pkceKey: string = extractPkceStorageKeyFromState(resolvedState);\n\n    const message: Message<AuthorizationInfo> = {\n      data: {\n        code: resolvedAuthorizationCode,\n        pkce: config.enablePKCE ? SPAUtils.getPKCE(pkceKey) : undefined,\n        sessionState: resolvedSessionState,\n        state: resolvedState,\n        tokenRequestConfig,\n      },\n      type: REQUEST_ACCESS_TOKEN,\n    };\n\n    config.enablePKCE && SPAUtils.removePKCE(pkceKey);\n\n    return communicate<AuthorizationInfo, User>(message)\n      .then(response => {\n        const message: Message<null> = {\n          type: GET_SIGN_OUT_URL,\n        };\n\n        return communicate<null, string>(message)\n          .then((url: string) => {\n            SPAUtils.setSignOutURL(url, config.clientId, instanceID);\n\n            // Enable OIDC Sessions Management only if it is set to true in the config.\n            if (config.enableOIDCSessionManagement) {\n              checkSession();\n            }\n\n            startAutoRefreshToken();\n\n            return Promise.resolve(response);\n          })\n          .catch(error => {\n            return Promise.reject(error);\n          });\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const shouldStopAuthn = async (): Promise<boolean> => {\n    return await _sessionManagementHelper.receivePromptNoneResponse(async (sessionState: string | null) => {\n      return setSessionState(sessionState);\n    });\n  };\n\n  const tryRetrievingUserInfo = async (): Promise<User | undefined> => {\n    if (await isSignedIn()) {\n      await startAutoRefreshToken();\n\n      // Enable OIDC Sessions Management only if it is set to true in the config.\n      if (config.enableOIDCSessionManagement) {\n        checkSession();\n      }\n\n      return getUser();\n    }\n\n    return Promise.resolve(undefined);\n  };\n\n  /**\n   * Initiates the authentication flow.\n   *\n   * @returns {Promise<UserInfo>} A promise that resolves when authentication is successful.\n   */\n  const signIn = async (\n    params?: ExtendedAuthorizeRequestUrlParams,\n    authorizationCode?: string,\n    sessionState?: string,\n    state?: string,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<User> => {\n    const basicUserInfo = await _authenticationHelper.handleSignIn(\n      shouldStopAuthn,\n      checkSession,\n      tryRetrievingUserInfo,\n    );\n\n    if (basicUserInfo) {\n      return basicUserInfo;\n    } else {\n      let resolvedAuthorizationCode: string;\n      let resolvedSessionState: string;\n      let resolvedState: string;\n\n      if (config?.responseMode === 'form_post' && authorizationCode) {\n        resolvedAuthorizationCode = authorizationCode;\n        resolvedSessionState = sessionState ?? '';\n        resolvedState = state ?? '';\n      } else {\n        resolvedAuthorizationCode =\n          new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.AUTHORIZATION_CODE) ?? '';\n        resolvedSessionState =\n          new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.SESSION_STATE) ?? '';\n        resolvedState = new URL(window.location.href).searchParams.get(OIDCRequestConstants.Params.STATE) ?? '';\n\n        SPAUtils.removeAuthorizationCode();\n      }\n\n      if (resolvedAuthorizationCode && resolvedState) {\n        return requestAccessToken(resolvedAuthorizationCode, resolvedSessionState, resolvedState, tokenRequestConfig);\n      }\n\n      return getSignInUrl(params)\n        .then(async (response: AuthorizationResponse) => {\n          location.href = response.authorizationURL;\n\n          await SPAUtils.waitTillPageRedirect();\n\n          return Promise.resolve({\n            allowedScopes: '',\n            displayName: '',\n            email: '',\n            sessionState: '',\n            sub: '',\n            tenantDomain: '',\n            username: '',\n          });\n        })\n        .catch(error => {\n          return Promise.reject(error);\n        });\n    }\n  };\n\n  /**\n   * Initiates the sign out flow.\n   *\n   * @returns {Promise<boolean>} A promise that resolves when sign out is completed.\n   */\n  const signOut = (): Promise<boolean> => {\n    return new Promise((resolve, reject) => {\n      if (!_getSignOutURLFromSessionStorage) {\n        const message: Message<null> = {\n          type: SIGN_OUT,\n        };\n\n        return communicate<null, string>(message)\n          .then(async response => {\n            window.location.href = response;\n\n            await SPAUtils.waitTillPageRedirect();\n\n            return resolve(true);\n          })\n          .catch(error => {\n            return reject(error);\n          });\n      } else {\n        window.location.href = SPAUtils.getSignOutUrl(config.clientId, instanceID);\n\n        return SPAUtils.waitTillPageRedirect().then(() => {\n          return Promise.resolve(true);\n        });\n      }\n    });\n  };\n\n  /**\n   * Revokes token.\n   *\n   * @returns {Promise<boolean>} A promise that resolves when revoking is completed.\n   */\n  const revokeAccessToken = (): Promise<boolean> => {\n    const message: Message<null> = {\n      type: REVOKE_ACCESS_TOKEN,\n    };\n\n    return communicate<null, boolean>(message)\n      .then(response => {\n        _sessionManagementHelper.reset();\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getOpenIDProviderEndpoints = (): Promise<OIDCEndpoints> => {\n    const message: Message<null> = {\n      type: GET_OIDC_SERVICE_ENDPOINTS,\n    };\n\n    return communicate<null, OIDCEndpoints>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getConfigData = (): Promise<AuthClientConfig<WebWorkerClientConfig>> => {\n    const message: Message<null> = {\n      type: GET_CONFIG_DATA,\n    };\n\n    return communicate<null, AuthClientConfig<WebWorkerClientConfig>>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getUser = (): Promise<User> => {\n    const message: Message<null> = {\n      type: GET_BASIC_USER_INFO,\n    };\n\n    return communicate<null, User>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getDecodedIdToken = (sessionId?: string): Promise<IdToken> => {\n    const message: Message<null> = {\n      type: GET_DECODED_ID_TOKEN,\n    };\n\n    return communicate<null, IdToken>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getDecodedIDPIDToken = (): Promise<IdToken> => {\n    const message: Message<null> = {\n      type: GET_DECODED_IDP_ID_TOKEN,\n    };\n\n    return communicate<null, IdToken>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getCrypto = (): Promise<IsomorphicCrypto> => {\n    const message: Message<null> = {\n      type: GET_CRYPTO_HELPER,\n    };\n\n    return communicate<null, IsomorphicCrypto>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const getIdToken = (): Promise<string> => {\n    const message: Message<null> = {\n      type: GET_ID_TOKEN,\n    };\n\n    return communicate<null, string>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const isSignedIn = (): Promise<boolean> => {\n    const message: Message<null> = {\n      type: IS_AUTHENTICATED,\n    };\n\n    return communicate<null, boolean>(message)\n      .then(response => {\n        return Promise.resolve(response);\n      })\n      .catch(error => {\n        return Promise.reject(error);\n      });\n  };\n\n  const refreshAccessToken = (): Promise<User> => {\n    const message: Message<null> = {\n      type: REFRESH_ACCESS_TOKEN,\n    };\n\n    return communicate<null, User>(message);\n  };\n\n  const setHttpRequestSuccessCallback = (callback: (response: HttpResponse) => void): void => {\n    if (callback && typeof callback === 'function') {\n      httpClientHandlers.requestSuccessCallback = callback;\n    }\n  };\n\n  const setHttpRequestErrorCallback = (callback: (response: HttpError) => void | Promise<void>): void => {\n    if (callback && typeof callback === 'function') {\n      httpClientHandlers.requestErrorCallback = callback;\n    }\n  };\n\n  const setHttpRequestStartCallback = (callback: () => void): void => {\n    if (callback && typeof callback === 'function') {\n      httpClientHandlers.requestStartCallback = callback;\n    }\n  };\n\n  const setHttpRequestFinishCallback = (callback: () => void): void => {\n    if (callback && typeof callback === 'function') {\n      httpClientHandlers.requestFinishCallback = callback;\n    }\n  };\n\n  const reInitialize = async (newConfig: Partial<AuthClientConfig<WebWorkerClientConfig>>): Promise<void> => {\n    const existingConfig = await getConfigData();\n    const isCheckSessionIframeDifferent: boolean = !(\n      existingConfig &&\n      existingConfig.endpoints &&\n      existingConfig.endpoints.checkSessionIframe &&\n      newConfig &&\n      newConfig.endpoints &&\n      newConfig.endpoints.checkSessionIframe &&\n      existingConfig.endpoints.checkSessionIframe === newConfig.endpoints.checkSessionIframe\n    );\n    const config = {...existingConfig, ...newConfig};\n\n    const message: Message<Partial<AuthClientConfig<WebWorkerClientConfig>>> = {\n      data: config,\n      type: UPDATE_CONFIG,\n    };\n\n    await communicate<Partial<AuthClientConfig<WebWorkerClientConfig>>, void>(message);\n\n    // Re-initiates check session if the check session endpoint is updated.\n    if (config.enableOIDCSessionManagement && isCheckSessionIframeDifferent) {\n      _sessionManagementHelper.reset();\n\n      checkSession();\n    }\n  };\n\n  return {\n    disableHttpHandler,\n    enableHttpHandler,\n    getUser,\n    getConfigData,\n    getCrypto,\n    getDecodedIDPIDToken,\n    getDecodedIdToken,\n    getIdToken,\n    getOpenIDProviderEndpoints,\n    httpRequest,\n    httpRequestAll,\n    initialize,\n    isSignedIn,\n    refreshAccessToken,\n    exchangeToken,\n    revokeAccessToken,\n    setHttpRequestErrorCallback,\n    setHttpRequestFinishCallback,\n    setHttpRequestStartCallback,\n    setHttpRequestSuccessCallback,\n    signIn,\n    signOut,\n    trySignInSilently,\n    reInitialize,\n  };\n};\n", "/**\n * Copyright (c) 2022-2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoAuthClient,\n  AsgardeoAuthException,\n  AuthClientConfig,\n  User,\n  IsomorphicCrypto,\n  TokenExchangeRequestConfig,\n  StorageManager,\n  IdToken,\n  ExtendedAuthorizeRequestUrlParams,\n  OIDCEndpoints,\n  TokenResponse,\n  extractPkceStorageKeyFromState,\n} from '@asgardeo/javascript';\nimport {SPAHelper} from './spa-helper';\nimport {\n  ACCESS_TOKEN_INVALID,\n  CHECK_SESSION_SIGNED_IN,\n  CHECK_SESSION_SIGNED_OUT,\n  CUSTOM_GRANT_CONFIG,\n  ERROR,\n  ERROR_DESCRIPTION,\n  PROMPT_NONE_IFRAME,\n  REFRESH_ACCESS_TOKEN_ERR0R,\n  RP_IFRAME,\n} from '../constants';\nimport {\n  AuthorizationInfo,\n  HttpClientInstance,\n  HttpError,\n  HttpRequestConfig,\n  HttpRequestInterface,\n  HttpResponse,\n  MainThreadClientConfig,\n  Message,\n  SessionManagementHelperInterface,\n  WebWorkerClientConfig,\n} from '../models';\nimport {SPACustomGrantConfig} from '../models/request-custom-grant';\nimport {BrowserStorage} from '../models/storage';\nimport {SPAUtils} from '../utils';\n\nexport class AuthenticationHelper<T extends MainThreadClientConfig | WebWorkerClientConfig> {\n  protected _authenticationClient: AsgardeoAuthClient<T>;\n  protected _storageManager: StorageManager<T>;\n  protected _spaHelper: SPAHelper<T>;\n  protected _instanceID: number;\n  protected _isTokenRefreshing: boolean;\n\n  public constructor(authClient: AsgardeoAuthClient<T>, spaHelper: SPAHelper<T>) {\n    this._authenticationClient = authClient;\n    this._storageManager = this._authenticationClient.getStorageManager();\n    this._spaHelper = spaHelper;\n    this._instanceID = this._authenticationClient.getInstanceId();\n    this._isTokenRefreshing = false;\n  }\n\n  public enableHttpHandler(httpClient: HttpClientInstance): void {\n    httpClient?.enableHandler && httpClient.enableHandler();\n  }\n\n  public disableHttpHandler(httpClient: HttpClientInstance): void {\n    httpClient?.disableHandler && httpClient.disableHandler();\n  }\n\n  public initializeSessionManger(\n    config: AuthClientConfig<T>,\n    oidcEndpoints: OIDCEndpoints,\n    getSessionState: () => Promise<string>,\n    getAuthzURL: (params?: ExtendedAuthorizeRequestUrlParams) => Promise<string>,\n    sessionManagementHelper: SessionManagementHelperInterface,\n  ): void {\n    sessionManagementHelper.initialize(\n      config.clientId,\n      oidcEndpoints.checkSessionIframe ?? '',\n      getSessionState,\n      config.checkSessionInterval ?? 3,\n      config.sessionRefreshInterval ?? 300,\n      config.afterSignInUrl,\n      getAuthzURL,\n    );\n  }\n\n  public async exchangeToken(\n    config: SPACustomGrantConfig,\n    enableRetrievingSignOutURLFromSession?: (config: SPACustomGrantConfig) => void,\n  ): Promise<User | Response> {\n    let useDefaultEndpoint = true;\n    let matches = false;\n\n    // If the config does not contains a token endpoint, default token endpoint will be used.\n    if (config?.tokenEndpoint) {\n      useDefaultEndpoint = false;\n\n      for (const baseUrl of [\n        ...((await this._storageManager.getConfigData())?.resourceServerURLs ?? []),\n        (config as any).baseUrl,\n      ]) {\n        if (baseUrl && config.tokenEndpoint?.startsWith(baseUrl)) {\n          matches = true;\n          break;\n        }\n      }\n    }\n    if (config.shouldReplayAfterRefresh) {\n      this._storageManager.setTemporaryDataParameter(CUSTOM_GRANT_CONFIG, JSON.stringify(config));\n    }\n    if (useDefaultEndpoint || matches) {\n      return this._authenticationClient\n        .exchangeToken(config)\n        .then(async (response: Response | TokenResponse) => {\n          if (enableRetrievingSignOutURLFromSession && typeof enableRetrievingSignOutURLFromSession === 'function') {\n            enableRetrievingSignOutURLFromSession(config);\n          }\n\n          if (config.returnsSession) {\n            this._spaHelper.refreshAccessTokenAutomatically(this);\n\n            return this._authenticationClient.getUser();\n          } else {\n            return response as Response;\n          }\n        })\n        .catch(error => {\n          return Promise.reject(error);\n        });\n    } else {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-MAIN_THREAD_CLIENT-RCG-IV01',\n          'Request to the provided endpoint is prohibited.',\n          'Requests can only be sent to resource servers specified by the `resourceServerURLs`' +\n            ' attribute while initializing the SDK. The specified token endpoint in this request ' +\n            'cannot be found among the `resourceServerURLs`',\n        ),\n      );\n    }\n  }\n\n  public async getCustomGrantConfigData(): Promise<AuthClientConfig<TokenExchangeRequestConfig> | null> {\n    const configString = await this._storageManager.getTemporaryDataParameter(CUSTOM_GRANT_CONFIG);\n\n    if (configString) {\n      return JSON.parse(configString as string);\n    } else {\n      return null;\n    }\n  }\n\n  public async refreshAccessToken(\n    enableRetrievingSignOutURLFromSession?: (config: SPACustomGrantConfig) => void,\n  ): Promise<User> {\n    try {\n      await this._authenticationClient.refreshAccessToken();\n      const customGrantConfig = await this.getCustomGrantConfigData();\n      if (customGrantConfig) {\n        await this.exchangeToken(customGrantConfig, enableRetrievingSignOutURLFromSession);\n      }\n      this._spaHelper.refreshAccessTokenAutomatically(this);\n\n      return this._authenticationClient.getUser();\n    } catch (error) {\n      const refreshTokenError: Message<string> = {\n        type: REFRESH_ACCESS_TOKEN_ERR0R,\n      };\n\n      window.postMessage(refreshTokenError);\n      return Promise.reject(error);\n    }\n  }\n\n  protected async retryFailedRequests(failedRequest: HttpRequestInterface): Promise<HttpResponse> {\n    const httpClient = failedRequest.httpClient;\n    const requestConfig = failedRequest.requestConfig;\n    const isHttpHandlerEnabled = failedRequest.isHttpHandlerEnabled;\n    const httpErrorCallback = failedRequest.httpErrorCallback;\n    const httpFinishCallback = failedRequest.httpFinishCallback;\n\n    // Wait until the token is refreshed.\n    await SPAUtils.until(() => !this._isTokenRefreshing);\n\n    try {\n      const httpResponse = await httpClient.request(requestConfig);\n\n      return Promise.resolve(httpResponse);\n    } catch (error: any) {\n      if (isHttpHandlerEnabled) {\n        if (typeof httpErrorCallback === 'function') {\n          await httpErrorCallback(error);\n        }\n        if (typeof httpFinishCallback === 'function') {\n          httpFinishCallback();\n        }\n      }\n\n      return Promise.reject(error);\n    }\n  }\n\n  public async httpRequest(\n    httpClient: HttpClientInstance,\n    requestConfig: HttpRequestConfig,\n    isHttpHandlerEnabled?: boolean,\n    httpErrorCallback?: (error: HttpError) => void | Promise<void>,\n    httpFinishCallback?: () => void,\n    enableRetrievingSignOutURLFromSession?: (config: SPACustomGrantConfig) => void,\n  ): Promise<HttpResponse> {\n    let matches = false;\n    const config = await this._storageManager.getConfigData();\n\n    for (const baseUrl of [...((await config?.resourceServerURLs) ?? []), (config as any).baseUrl]) {\n      if (baseUrl && requestConfig?.url?.startsWith(baseUrl)) {\n        matches = true;\n\n        break;\n      }\n    }\n\n    if (matches) {\n      return httpClient\n        .request(requestConfig)\n        .then((response: HttpResponse) => {\n          return Promise.resolve(response);\n        })\n        .catch(async (error: HttpError) => {\n          if (error?.response?.status === 401 || !error?.response) {\n            if (this._isTokenRefreshing) {\n              return this.retryFailedRequests({\n                enableRetrievingSignOutURLFromSession,\n                httpClient,\n                httpErrorCallback,\n                httpFinishCallback,\n                isHttpHandlerEnabled,\n                requestConfig,\n              });\n            }\n\n            this._isTokenRefreshing = true;\n            // Try to refresh the token\n            let refreshAccessTokenResponse: User;\n            try {\n              refreshAccessTokenResponse = await this.refreshAccessToken(enableRetrievingSignOutURLFromSession);\n\n              this._isTokenRefreshing = false;\n            } catch (refreshError: any) {\n              this._isTokenRefreshing = false;\n\n              if (isHttpHandlerEnabled) {\n                if (typeof httpErrorCallback === 'function') {\n                  await httpErrorCallback({\n                    ...error,\n                    code: ACCESS_TOKEN_INVALID,\n                  });\n                }\n                if (typeof httpFinishCallback === 'function') {\n                  httpFinishCallback();\n                }\n              }\n\n              throw new AsgardeoAuthException(\n                'SPA-AUTH_HELPER-HR-SE01',\n                refreshError?.name ?? 'Refresh token request failed.',\n                refreshError?.message ??\n                  'An error occurred while trying to refresh the ' +\n                    'access token following a 401 response from the server.',\n              );\n            }\n\n            // Retry the request after refreshing the token\n            if (refreshAccessTokenResponse) {\n              try {\n                const httpResponse = await httpClient.request(requestConfig);\n                return Promise.resolve(httpResponse);\n              } catch (error: any) {\n                if (isHttpHandlerEnabled) {\n                  if (typeof httpErrorCallback === 'function') {\n                    await httpErrorCallback(error);\n                  }\n                  if (typeof httpFinishCallback === 'function') {\n                    httpFinishCallback();\n                  }\n                }\n                return Promise.reject(error);\n              }\n            }\n          }\n\n          if (isHttpHandlerEnabled) {\n            if (typeof httpErrorCallback === 'function') {\n              await httpErrorCallback(error);\n            }\n            if (typeof httpFinishCallback === 'function') {\n              httpFinishCallback();\n            }\n          }\n\n          return Promise.reject(error);\n        });\n    } else {\n      return Promise.reject(\n        new AsgardeoAuthException(\n          'SPA-AUTH_HELPER-HR-IV02',\n          'Request to the provided endpoint is prohibited.',\n          'Requests can only be sent to resource servers specified by the `resourceServerURLs`' +\n            ' attribute while initializing the SDK. The specified endpoint in this request ' +\n            'cannot be found among the `resourceServerURLs`',\n        ),\n      );\n    }\n  }\n\n  public async httpRequestAll(\n    requestConfigs: HttpRequestConfig[],\n    httpClient: HttpClientInstance,\n    isHttpHandlerEnabled?: boolean,\n    httpErrorCallback?: (error: HttpError) => void | Promise<void>,\n    httpFinishCallback?: () => void,\n  ): Promise<HttpResponse[] | undefined> {\n    let matches = true;\n    const config = await this._storageManager.getConfigData();\n\n    for (const requestConfig of requestConfigs) {\n      let urlMatches = false;\n\n      for (const baseUrl of [...((await config)?.resourceServerURLs ?? []), (config as any).baseUrl]) {\n        if (baseUrl && requestConfig.url?.startsWith(baseUrl)) {\n          urlMatches = true;\n\n          break;\n        }\n      }\n\n      if (!urlMatches) {\n        matches = false;\n\n        break;\n      }\n    }\n\n    const requests: Promise<HttpResponse<any>>[] = [];\n\n    if (matches) {\n      requestConfigs.forEach(request => {\n        requests.push(httpClient.request(request));\n      });\n\n      return (\n        httpClient?.all &&\n        httpClient\n          .all(requests)\n          .then((responses: HttpResponse[]) => {\n            return Promise.resolve(responses);\n          })\n          .catch(async (error: HttpError) => {\n            if (error?.response?.status === 401 || !error?.response) {\n              let refreshTokenResponse: TokenResponse | User;\n              try {\n                refreshTokenResponse = await this._authenticationClient.refreshAccessToken();\n              } catch (refreshError: any) {\n                if (isHttpHandlerEnabled) {\n                  if (typeof httpErrorCallback === 'function') {\n                    await httpErrorCallback({\n                      ...error,\n                      code: ACCESS_TOKEN_INVALID,\n                    });\n                  }\n                  if (typeof httpFinishCallback === 'function') {\n                    httpFinishCallback();\n                  }\n                }\n\n                throw new AsgardeoAuthException(\n                  'SPA-AUTH_HELPER-HRA-SE01',\n                  refreshError?.name ?? 'Refresh token request failed.',\n                  refreshError?.message ??\n                    'An error occurred while trying to refresh the ' +\n                      'access token following a 401 response from the server.',\n                );\n              }\n\n              if (refreshTokenResponse) {\n                return (\n                  httpClient.all &&\n                  httpClient\n                    .all(requests)\n                    .then(response => {\n                      return Promise.resolve(response);\n                    })\n                    .catch(async error => {\n                      if (isHttpHandlerEnabled) {\n                        if (typeof httpErrorCallback === 'function') {\n                          await httpErrorCallback(error);\n                        }\n                        if (typeof httpFinishCallback === 'function') {\n                          httpFinishCallback();\n                        }\n                      }\n\n                      return Promise.reject(error);\n                    })\n                );\n              }\n            }\n\n            if (isHttpHandlerEnabled) {\n              if (typeof httpErrorCallback === 'function') {\n                await httpErrorCallback(error);\n              }\n              if (typeof httpFinishCallback === 'function') {\n                httpFinishCallback();\n              }\n            }\n\n            return Promise.reject(error);\n          })\n      );\n    } else {\n      throw new AsgardeoAuthException(\n        'SPA-AUTH_HELPER-HRA-IV02',\n        'Request to the provided endpoint is prohibited.',\n        'Requests can only be sent to resource servers specified by the `resourceServerURLs`' +\n          ' attribute while initializing the SDK. The specified endpoint in this request ' +\n          'cannot be found among the `resourceServerURLs`',\n      );\n    }\n  }\n\n  public async requestAccessToken(\n    authorizationCode?: string,\n    sessionState?: string,\n    checkSession?: () => Promise<void>,\n    pkce?: string,\n    state?: string,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<User> {\n    const config = await this._storageManager.getConfigData();\n\n    if (config.storage === BrowserStorage.BrowserMemory && config.enablePKCE && sessionState) {\n      const pkce = SPAUtils.getPKCE(extractPkceStorageKeyFromState(sessionState));\n\n      await this._authenticationClient.setPKCECode(extractPkceStorageKeyFromState(sessionState), pkce);\n    } else if (config.storage === BrowserStorage.WebWorker && pkce) {\n      await this._authenticationClient.setPKCECode(pkce, state ?? '');\n    }\n\n    if (authorizationCode) {\n      return this._authenticationClient\n        .requestAccessToken(authorizationCode, sessionState ?? '', state ?? '', undefined, tokenRequestConfig)\n        .then(async () => {\n          // Disable this temporarily\n          /* if (config.storage === Storage.BrowserMemory) {\n                        SPAUtils.setSignOutURL(await _authenticationClient.getSignOutUrl());\n                    } */\n          if (config.storage !== BrowserStorage.WebWorker) {\n            SPAUtils.setSignOutURL(await this._authenticationClient.getSignOutUrl(), config.clientId, this._instanceID);\n\n            if (this._spaHelper) {\n              this._spaHelper.clearRefreshTokenTimeout();\n              this._spaHelper.refreshAccessTokenAutomatically(this);\n            }\n\n            // Enable OIDC Sessions Management only if it is set to true in the config.\n            if (checkSession && typeof checkSession === 'function' && config.enableOIDCSessionManagement) {\n              checkSession();\n            }\n          } else {\n            if (this._spaHelper) {\n              this._spaHelper.refreshAccessTokenAutomatically(this);\n            }\n          }\n\n          return this._authenticationClient.getUser();\n        })\n        .catch(error => {\n          return Promise.reject(error);\n        });\n    }\n\n    return Promise.reject(\n      new AsgardeoAuthException(\n        'SPA-AUTH_HELPER-RAT1-NF01',\n        'No authorization code.',\n        'No authorization code was found.',\n      ),\n    );\n  }\n\n  public async trySignInSilently(\n    constructSilentSignInUrl: (additionalParams?: Record<string, string | boolean>) => Promise<string>,\n    requestAccessToken: (\n      authzCode: string,\n      sessionState: string,\n      state: string,\n      tokenRequestConfig?: {params: Record<string, unknown>},\n    ) => Promise<User>,\n    sessionManagementHelper: SessionManagementHelperInterface,\n    additionalParams?: Record<string, string | boolean>,\n    tokenRequestConfig?: {params: Record<string, unknown>},\n  ): Promise<User | boolean> {\n    // This block is executed by the iFrame when the server redirects with the authorization code.\n    if (SPAUtils.isInitializedSilentSignIn()) {\n      await sessionManagementHelper.receivePromptNoneResponse();\n\n      return Promise.resolve({\n        allowedScopes: '',\n        displayName: '',\n        email: '',\n        sessionState: '',\n        sub: '',\n        tenantDomain: '',\n        username: '',\n      });\n    }\n\n    // This gets executed in the main thread and sends the prompt none request.\n    const rpIFrame = document.getElementById(RP_IFRAME) as HTMLIFrameElement;\n\n    const promptNoneIFrame: HTMLIFrameElement = rpIFrame?.contentDocument?.getElementById(\n      PROMPT_NONE_IFRAME,\n    ) as HTMLIFrameElement;\n\n    try {\n      const url = await constructSilentSignInUrl(additionalParams);\n\n      promptNoneIFrame.src = url;\n    } catch (error) {\n      return Promise.reject(error);\n    }\n\n    return new Promise((resolve, reject) => {\n      const timer = setTimeout(() => {\n        resolve(false);\n      }, 10000);\n\n      const listenToPromptNoneIFrame = async (e: MessageEvent) => {\n        const data: Message<AuthorizationInfo | null> = e.data;\n\n        if (data?.type == CHECK_SESSION_SIGNED_OUT) {\n          window.removeEventListener('message', listenToPromptNoneIFrame);\n          clearTimeout(timer);\n          resolve(false);\n        }\n\n        if (data?.type == CHECK_SESSION_SIGNED_IN && data?.data?.code) {\n          requestAccessToken(data?.data?.code, data?.data?.sessionState, data?.data?.state, tokenRequestConfig)\n            .then((response: User) => {\n              window.removeEventListener('message', listenToPromptNoneIFrame);\n              resolve(response);\n            })\n            .catch(error => {\n              window.removeEventListener('message', listenToPromptNoneIFrame);\n              reject(error);\n            })\n            .finally(() => {\n              clearTimeout(timer);\n            });\n        }\n      };\n\n      window.addEventListener('message', listenToPromptNoneIFrame);\n    });\n  }\n\n  public async handleSignIn(\n    shouldStopAuthn: () => Promise<boolean>,\n    checkSession: () => Promise<void>,\n    tryRetrievingUserInfo?: () => Promise<User | undefined>,\n  ): Promise<User | undefined> {\n    const config = await this._storageManager.getConfigData();\n\n    if (await shouldStopAuthn()) {\n      return Promise.resolve({\n        allowedScopes: '',\n        displayName: '',\n        email: '',\n        sessionState: '',\n        sub: '',\n        tenantDomain: '',\n        username: '',\n      });\n    }\n\n    if (config.storage !== BrowserStorage.WebWorker) {\n      if (await this._authenticationClient.isSignedIn()) {\n        this._spaHelper.clearRefreshTokenTimeout();\n        this._spaHelper.refreshAccessTokenAutomatically(this);\n\n        // Enable OIDC Sessions Management only if it is set to true in the config.\n        if (config.enableOIDCSessionManagement) {\n          checkSession();\n        }\n\n        return Promise.resolve(await this._authenticationClient.getUser());\n      }\n    }\n\n    const error = new URL(window.location.href).searchParams.get(ERROR);\n    const errorDescription = new URL(window.location.href).searchParams.get(ERROR_DESCRIPTION);\n\n    if (error) {\n      const url = new URL(window.location.href);\n      url.searchParams.delete(ERROR);\n      url.searchParams.delete(ERROR_DESCRIPTION);\n\n      history.pushState(null, document.title, url.toString());\n\n      throw new AsgardeoAuthException('SPA-AUTH_HELPER-SI-SE01', error, errorDescription ?? '');\n    }\n\n    if (config.storage === BrowserStorage.WebWorker && tryRetrievingUserInfo) {\n      const basicUserInfo = await tryRetrievingUserInfo();\n\n      if (basicUserInfo) {\n        return basicUserInfo;\n      }\n    }\n\n    return Promise.resolve(undefined);\n  }\n\n  public async attachTokenToRequestConfig(request: HttpRequestConfig): Promise<void> {\n    const requestConfig = {attachToken: true, ...request};\n    if (requestConfig.attachToken) {\n      if (requestConfig.shouldAttachIDPAccessToken) {\n        request.headers = {\n          ...request.headers,\n          Authorization: `Bearer ${await this.getIDPAccessToken()}`,\n        };\n      } else {\n        request.headers = {\n          ...request.headers,\n          Authorization: `Bearer ${await this.getAccessToken()}`,\n        };\n      }\n    }\n  }\n\n  public async getUser(): Promise<User> {\n    return this._authenticationClient.getUser();\n  }\n\n  public async getDecodedIdToken(sessionId?: string): Promise<IdToken> {\n    return this._authenticationClient.getDecodedIdToken(sessionId);\n  }\n\n  public async getDecodedIDPIDToken(): Promise<IdToken> {\n    return this._authenticationClient.getDecodedIdToken();\n  }\n\n  public async getCrypto(): Promise<IsomorphicCrypto> {\n    return this._authenticationClient.getCrypto();\n  }\n\n  public async getIdToken(): Promise<string> {\n    return this._authenticationClient.getIdToken();\n  }\n\n  public async getOpenIDProviderEndpoints(): Promise<OIDCEndpoints> {\n    return this._authenticationClient.getOpenIDProviderEndpoints() as any;\n  }\n\n  public async getAccessToken(): Promise<string> {\n    return this._authenticationClient.getAccessToken();\n  }\n\n  public async getIDPAccessToken(): Promise<string> {\n    return (await this._storageManager.getSessionData())?.access_token;\n  }\n\n  public getStorageManager(): StorageManager<T> {\n    return this._storageManager;\n  }\n\n  public async isSignedIn(): Promise<boolean> {\n    return this._authenticationClient.isSignedIn();\n  }\n}\n", "/**\n * Copyright (c) 2020-2024, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AxiosRequestConfig} from 'axios';\nimport {HttpClientInstance, HttpError, HttpResponse} from '.';\nimport {SPACustomGrantConfig} from '../..';\n\nexport interface HttpClient {\n  requestStartCallback: () => void;\n  requestSuccessCallback: (response: HttpResponse) => void;\n  requestErrorCallback: (error: HttpError) => void | Promise<void>;\n  requestFinishCallback: () => void;\n}\n\nexport interface HttpRequestInterface {\n  httpClient: HttpClientInstance;\n  requestConfig: HttpRequestConfig;\n  isHttpHandlerEnabled?: boolean;\n  httpErrorCallback?: (error: HttpError) => void | Promise<void>;\n  httpFinishCallback?: () => void;\n  enableRetrievingSignOutURLFromSession?: (config: SPACustomGrantConfig) => void;\n}\n\nexport interface HttpRequestConfig extends AxiosRequestConfig {\n  attachToken?: boolean;\n  shouldEncodeToFormData?: boolean;\n  shouldAttachIDPAccessToken?: boolean;\n  startTimeInMs?: number;\n}\n\nexport {\n  AxiosResponse as HttpResponse,\n  Method as HttpMethod,\n  AxiosRequestTransformer as HttpRequestTransformer,\n  AxiosResponseTransformer as HttpResponseTransformer,\n  AxiosAdapter as HttpAdapter,\n  AxiosBasicCredentials as HttpBasicCredentials,\n  ResponseType,\n  AxiosProxyConfig as HttpProxyConfig,\n  CancelToken,\n  AxiosError as HttpError,\n  AxiosPromise as HttpPromise,\n  AxiosInstance as HttpInstance,\n} from 'axios';\n\nexport {HttpClientInstance} from '../http-client';\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AuthClientConfig,\n  AuthorizeRequestUrlParams,\n  User,\n  IsomorphicCrypto,\n  TokenExchangeRequestConfig,\n  IdToken,\n  OIDCEndpoints,\n} from '@asgardeo/javascript';\nimport {HttpRequestConfig, HttpResponse, Message} from '.';\nimport {AuthorizationResponse, WebWorkerClientConfig} from '../..';\n\ninterface WebWorkerEvent<T> extends MessageEvent {\n  data: Message<T>;\n}\n\nexport class WebWorkerClass<T> {\n  onmessage: (this: Worker, event: WebWorkerEvent<T>) => any = () => null;\n  postMessage: (message: Message<T>) => void = () => null;\n}\n\nexport interface WebWorkerCoreInterface {\n  setHttpRequestStartCallback(callback: () => void): void;\n  setHttpRequestSuccessCallback(callback: (response: HttpResponse) => void): void;\n  setHttpRequestFinishCallback(callback: () => void): void;\n  httpRequest(config: HttpRequestConfig): Promise<HttpResponse>;\n  httpRequestAll(configs: HttpRequestConfig[]): Promise<HttpResponse[] | undefined>;\n  enableHttpHandler(): void;\n  disableHttpHandler(): void;\n  getSignInUrl(params?: AuthorizeRequestUrlParams, afterSignInUrl?: string): Promise<AuthorizationResponse>;\n  requestAccessToken(authorizationCode?: string, sessionState?: string, pkce?: string, state?: string): Promise<User>;\n  signOut(afterSignOutUrl?: string): Promise<string>;\n  getSignOutUrl(afterSignOutUrl?: string): Promise<string>;\n  exchangeToken(config: TokenExchangeRequestConfig): Promise<User | Response>;\n  refreshAccessToken(): Promise<User>;\n  revokeAccessToken(): Promise<boolean>;\n  getUser(): Promise<User>;\n  getDecodedIdToken(sessionId?: string): Promise<IdToken>;\n  getDecodedIDPIDToken(): Promise<IdToken>;\n  getCrypto(): Promise<IsomorphicCrypto>;\n  getIdToken(): Promise<string>;\n  getOpenIDProviderEndpoints(): Promise<OIDCEndpoints>;\n  getAccessToken(): Promise<string>;\n  isSignedIn(): Promise<boolean>;\n  startAutoRefreshToken(): Promise<void>;\n  setSessionState(sessionState: string): Promise<void>;\n  reInitialize(config: Partial<AuthClientConfig<WebWorkerClientConfig>>): Promise<void>;\n  getConfigData(): Promise<AuthClientConfig<WebWorkerClientConfig>>;\n}\n", "/**\n * Copyright (c) 2022, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoAuthClient, AsgardeoAuthException, AuthClientConfig, User} from '@asgardeo/javascript';\nimport {WebWorkerCore} from './worker-core';\nimport {\n  DISABLE_HTTP_HANDLER,\n  ENABLE_HTTP_HANDLER,\n  GET_AUTH_URL,\n  GET_BASIC_USER_INFO,\n  GET_CONFIG_DATA,\n  GET_CRYPTO_HELPER,\n  GET_DECODED_ID_TOKEN,\n  GET_ID_TOKEN,\n  GET_OIDC_SERVICE_ENDPOINTS,\n  GET_SIGN_OUT_URL,\n  HTTP_REQUEST,\n  HTTP_REQUEST_ALL,\n  INIT,\n  IS_AUTHENTICATED,\n  REFRESH_ACCESS_TOKEN,\n  REQUEST_ACCESS_TOKEN,\n  REQUEST_CUSTOM_GRANT,\n  REQUEST_FINISH,\n  REQUEST_START,\n  REQUEST_SUCCESS,\n  REVOKE_ACCESS_TOKEN,\n  SET_SESSION_STATE,\n  SIGN_OUT,\n  START_AUTO_REFRESH_TOKEN,\n  UPDATE_CONFIG,\n} from '../constants';\nimport {AuthenticationHelper, SPAHelper} from '../helpers';\nimport {\n  AuthorizationResponse,\n  HttpResponse,\n  WebWorkerClass,\n  WebWorkerClientConfig,\n  WebWorkerCoreInterface,\n} from '../models';\nimport {MessageUtils} from '../utils';\n\nexport const workerReceiver = (\n  getAuthHelper: (\n    authClient: AsgardeoAuthClient<WebWorkerClientConfig>,\n    spaHelper: SPAHelper<WebWorkerClientConfig>,\n  ) => AuthenticationHelper<WebWorkerClientConfig>,\n) => {\n  const ctx: WebWorkerClass<any> = self as any;\n\n  let webWorker: WebWorkerCoreInterface;\n\n  ctx.onmessage = async ({data, ports}) => {\n    const port = ports[0];\n    if (data.type !== INIT && !webWorker) {\n      port.postMessage(\n        MessageUtils.generateFailureMessage(\n          new AsgardeoAuthException(\n            'SPA-CLIENT_WORKER-ONMSG-NF01',\n            'The web worker has not been initialized yet.',\n            'The initialize method needs to be called before the specified operation can be carried out.',\n          ),\n        ),\n      );\n\n      return;\n    }\n\n    switch (data.type) {\n      case INIT:\n        try {\n          const config: AuthClientConfig<WebWorkerClientConfig> = {...data.data};\n          webWorker = await WebWorkerCore(config, getAuthHelper);\n          webWorker.setHttpRequestFinishCallback(onRequestFinishCallback);\n          webWorker.setHttpRequestStartCallback(onRequestStartCallback);\n          webWorker.setHttpRequestSuccessCallback(onRequestSuccessCallback);\n          port.postMessage(MessageUtils.generateSuccessMessage());\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_AUTH_URL:\n        webWorker\n          .getSignInUrl(data?.data)\n          .then((response: AuthorizationResponse) => {\n            port.postMessage(MessageUtils.generateSuccessMessage(response));\n          })\n          .catch(error => {\n            port.postMessage(MessageUtils.generateFailureMessage(error));\n          });\n\n        break;\n      case REQUEST_ACCESS_TOKEN:\n        webWorker\n          .requestAccessToken(data?.data?.code, data?.data?.sessionState, data?.data?.pkce, data?.data?.state)\n          .then((response: User) => {\n            port.postMessage(MessageUtils.generateSuccessMessage(response));\n          })\n          .catch(error => {\n            port.postMessage(MessageUtils.generateFailureMessage(error));\n          });\n\n        break;\n      case HTTP_REQUEST: {\n        const request = data.data;\n        const requestData = request?.data;\n        if (data.data?.data?.formData === true) {\n          const formData = new FormData();\n          for (const key in requestData) {\n            if (key === 'formData') {\n              continue;\n            }\n            formData.append(key, requestData[key]);\n          }\n          request.data = formData;\n        }\n        webWorker\n          .httpRequest(request)\n          .then(response => {\n            port.postMessage(MessageUtils.generateSuccessMessage(response));\n          })\n          .catch(error => {\n            port.postMessage(MessageUtils.generateFailureMessage(error));\n          });\n\n        break;\n      }\n      case HTTP_REQUEST_ALL:\n        webWorker\n          .httpRequestAll(data.data)\n          .then(response => {\n            port.postMessage(MessageUtils.generateSuccessMessage(response));\n          })\n          .catch(error => {\n            port.postMessage(MessageUtils.generateFailureMessage(error));\n          });\n\n        break;\n      case SIGN_OUT:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.signOut()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case REQUEST_CUSTOM_GRANT:\n        webWorker\n          .exchangeToken(data.data)\n          .then(response => {\n            port.postMessage(MessageUtils.generateSuccessMessage(response));\n          })\n          .catch(error => {\n            port.postMessage(MessageUtils.generateFailureMessage(error));\n          });\n\n        break;\n      case REVOKE_ACCESS_TOKEN:\n        webWorker\n          .revokeAccessToken()\n          .then(response => {\n            port.postMessage(MessageUtils.generateSuccessMessage(response));\n          })\n          .catch(error => {\n            port.postMessage(MessageUtils.generateFailureMessage(error));\n          });\n        break;\n      case GET_OIDC_SERVICE_ENDPOINTS:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getOpenIDProviderEndpoints()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_BASIC_USER_INFO:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getUser()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_DECODED_ID_TOKEN:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getDecodedIdToken()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_CRYPTO_HELPER:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getCrypto()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_ID_TOKEN:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getIdToken()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case ENABLE_HTTP_HANDLER:\n        webWorker.enableHttpHandler();\n        port.postMessage(MessageUtils.generateSuccessMessage());\n\n        break;\n      case DISABLE_HTTP_HANDLER:\n        webWorker.disableHttpHandler();\n        port.postMessage(MessageUtils.generateSuccessMessage());\n\n        break;\n      case IS_AUTHENTICATED:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.isSignedIn()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_SIGN_OUT_URL:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getSignOutUrl()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case REFRESH_ACCESS_TOKEN:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.refreshAccessToken()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case START_AUTO_REFRESH_TOKEN:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(webWorker.startAutoRefreshToken()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case SET_SESSION_STATE:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.setSessionState(data?.data)));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case UPDATE_CONFIG:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.reInitialize(data?.data)));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      case GET_CONFIG_DATA:\n        try {\n          port.postMessage(MessageUtils.generateSuccessMessage(await webWorker.getConfigData()));\n        } catch (error) {\n          port.postMessage(MessageUtils.generateFailureMessage(error));\n        }\n\n        break;\n      default:\n        port?.postMessage(\n          MessageUtils.generateFailureMessage(\n            new AsgardeoAuthException(\n              'SPA-CLIENT_WORKER-ONMSG-IV02',\n              'The message type is invalid.',\n              `The message type provided, ${data.type}, is invalid.`,\n            ),\n          ),\n        );\n    }\n  };\n\n  const onRequestStartCallback = (): void => {\n    ctx.postMessage({type: REQUEST_START});\n  };\n\n  const onRequestSuccessCallback = (response: HttpResponse): void => {\n    ctx.postMessage({data: JSON.stringify(response ?? ''), type: REQUEST_SUCCESS});\n  };\n\n  const onRequestFinishCallback = (): void => {\n    ctx.postMessage({type: REQUEST_FINISH});\n  };\n};\n", "/**\n * Copyright (c) 2020, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.\n *\n * WSO2 Inc. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoAuthClient,\n  AuthClientConfig,\n  AuthorizeRequestUrlParams,\n  User,\n  IsomorphicCrypto,\n  TokenExchangeRequestConfig,\n  IdToken,\n  OIDCEndpoints,\n  OIDCRequestConstants,\n  SessionData,\n  Storage,\n} from '@asgardeo/javascript';\nimport {AuthenticationHelper, SPAHelper} from '../helpers';\nimport {HttpClient, HttpClientInstance} from '../http-client';\nimport {\n  AuthorizationResponse,\n  HttpRequestConfig,\n  HttpResponse,\n  WebWorkerClientConfig,\n  WebWorkerCoreInterface,\n} from '../models';\nimport {MemoryStore} from '../stores';\nimport {SPACryptoUtils} from '../utils/crypto-utils';\n\nexport const WebWorkerCore = async (\n  config: AuthClientConfig<WebWorkerClientConfig>,\n  getAuthHelper: (\n    authClient: AsgardeoAuthClient<WebWorkerClientConfig>,\n    spaHelper: SPAHelper<WebWorkerClientConfig>,\n  ) => AuthenticationHelper<WebWorkerClientConfig>,\n): Promise<WebWorkerCoreInterface> => {\n  const _store: Storage = new MemoryStore();\n  const _cryptoUtils: SPACryptoUtils = new SPACryptoUtils();\n  const _authenticationClient = new AsgardeoAuthClient<WebWorkerClientConfig>();\n  await _authenticationClient.initialize(config, _store, _cryptoUtils);\n\n  const _spaHelper = new SPAHelper<WebWorkerClientConfig>(_authenticationClient);\n\n  const _authenticationHelper: AuthenticationHelper<WebWorkerClientConfig> = getAuthHelper(\n    _authenticationClient,\n    _spaHelper,\n  );\n\n  const _dataLayer = _authenticationClient.getStorageManager();\n\n  const _httpClient: HttpClientInstance = HttpClient.getInstance();\n\n  const attachToken = async (request: HttpRequestConfig): Promise<void> => {\n    await _authenticationHelper.attachTokenToRequestConfig(request);\n  };\n\n  _httpClient?.init && (await _httpClient.init(true, attachToken));\n\n  const setHttpRequestStartCallback = (callback: () => void): void => {\n    _httpClient?.setHttpRequestStartCallback && _httpClient.setHttpRequestStartCallback(callback);\n  };\n\n  const setHttpRequestSuccessCallback = (callback: (response: HttpResponse) => void): void => {\n    _httpClient?.setHttpRequestSuccessCallback && _httpClient.setHttpRequestSuccessCallback(callback);\n  };\n\n  const setHttpRequestFinishCallback = (callback: () => void): void => {\n    _httpClient?.setHttpRequestFinishCallback && _httpClient.setHttpRequestFinishCallback(callback);\n  };\n\n  const httpRequest = async (requestConfig: HttpRequestConfig): Promise<HttpResponse> => {\n    return await _authenticationHelper.httpRequest(_httpClient, requestConfig);\n  };\n\n  const httpRequestAll = async (requestConfigs: HttpRequestConfig[]): Promise<HttpResponse[] | undefined> => {\n    return await _authenticationHelper.httpRequestAll(requestConfigs, _httpClient);\n  };\n\n  const enableHttpHandler = (): void => {\n    _authenticationHelper.enableHttpHandler(_httpClient);\n  };\n\n  const disableHttpHandler = (): void => {\n    _authenticationHelper.disableHttpHandler(_httpClient);\n  };\n\n  const getSignInUrl = async (params?: AuthorizeRequestUrlParams): Promise<AuthorizationResponse> => {\n    return _authenticationClient\n      .getSignInUrl(params)\n      .then(async (url: string) => {\n        const urlObject: URL = new URL(url);\n        const state: string = urlObject.searchParams.get(OIDCRequestConstants.Params.STATE) ?? '';\n        const pkce: string = await _authenticationClient.getPKCECode(state);\n\n        return {authorizationURL: url, pkce: pkce};\n      })\n      .catch(error => Promise.reject(error));\n  };\n\n  const startAutoRefreshToken = async (): Promise<void> => {\n    _spaHelper.clearRefreshTokenTimeout();\n    _spaHelper.refreshAccessTokenAutomatically(_authenticationHelper);\n\n    return;\n  };\n\n  const requestAccessToken = async (\n    authorizationCode?: string,\n    sessionState?: string,\n    pkce?: string,\n    state?: string,\n  ): Promise<User> => {\n    return await _authenticationHelper.requestAccessToken(authorizationCode, sessionState, undefined, pkce, state);\n  };\n\n  const signOut = async (): Promise<string> => {\n    _spaHelper.clearRefreshTokenTimeout();\n\n    return await _authenticationClient.getSignOutUrl();\n  };\n\n  const getSignOutUrl = async (): Promise<string> => {\n    return await _authenticationClient.getSignOutUrl();\n  };\n\n  const exchangeToken = async (config: TokenExchangeRequestConfig): Promise<User | Response> => {\n    return await _authenticationHelper.exchangeToken(config);\n  };\n\n  const refreshAccessToken = async (): Promise<User> => {\n    try {\n      return await _authenticationHelper.refreshAccessToken();\n    } catch (error) {\n      return Promise.reject(error);\n    }\n  };\n\n  const revokeAccessToken = async (): Promise<boolean> => {\n    const timer: number = await _spaHelper.getRefreshTimeoutTimer();\n\n    return _authenticationClient\n      .revokeAccessToken()\n      .then(() => {\n        _spaHelper.clearRefreshTokenTimeout(timer);\n\n        return Promise.resolve(true);\n      })\n      .catch(error => Promise.reject(error));\n  };\n\n  const getUser = async (): Promise<User> => {\n    return _authenticationHelper.getUser();\n  };\n\n  const getDecodedIdToken = async (sessionId?: string): Promise<IdToken> => {\n    return _authenticationHelper.getDecodedIdToken(sessionId);\n  };\n\n  const getCrypto = async (): Promise<IsomorphicCrypto> => {\n    return _authenticationHelper.getCrypto();\n  };\n\n  const getDecodedIDPIDToken = async (): Promise<IdToken> => {\n    return _authenticationHelper.getDecodedIDPIDToken();\n  };\n\n  const getIdToken = async (): Promise<string> => {\n    return _authenticationHelper.getIdToken();\n  };\n  const getOpenIDProviderEndpoints = async (): Promise<OIDCEndpoints> => {\n    return _authenticationHelper.getOpenIDProviderEndpoints();\n  };\n\n  const getAccessToken = (): Promise<string> => {\n    return _authenticationHelper.getAccessToken();\n  };\n\n  const isSignedIn = (): Promise<boolean> => {\n    return _authenticationHelper.isSignedIn();\n  };\n\n  const setSessionState = async (sessionState: string): Promise<void> => {\n    await _dataLayer.setSessionDataParameter(\n      OIDCRequestConstants.Params.SESSION_STATE as keyof SessionData,\n      sessionState,\n    );\n\n    return;\n  };\n\n  const reInitialize = async (config: Partial<AuthClientConfig<WebWorkerClientConfig>>): Promise<void> => {\n    await _authenticationClient.reInitialize(config);\n\n    return;\n  };\n\n  const getConfigData = async (): Promise<AuthClientConfig<WebWorkerClientConfig>> => {\n    return _dataLayer.getConfigData();\n  };\n\n  return {\n    disableHttpHandler,\n    enableHttpHandler,\n    getAccessToken,\n    getSignInUrl,\n    getUser,\n    getConfigData,\n    getCrypto,\n    getDecodedIDPIDToken,\n    getDecodedIdToken,\n    getIdToken,\n    getOpenIDProviderEndpoints,\n    getSignOutUrl,\n    httpRequest,\n    httpRequestAll,\n    isSignedIn,\n    refreshAccessToken,\n    requestAccessToken,\n    exchangeToken,\n    revokeAccessToken,\n    setHttpRequestFinishCallback,\n    setHttpRequestStartCallback,\n    setHttpRequestSuccessCallback,\n    setSessionState,\n    signOut,\n    startAutoRefreshToken,\n    reInitialize,\n  };\n};\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Utility to check if `code` and `session_state` are available in the URL as search params.\n *\n * @param params - The URL search params to check. Defaults to `window.location.search`.\n * @return `true` if the URL contains `code` and `session_state` search params, otherwise `false`.\n */\nconst hasAuthParamsInUrl = (params: string = window.location.search): boolean => {\n  const MATCHER: RegExp = /[?&]code=[^&]+/;\n\n  return MATCHER.test(params);\n};\n\nexport default hasAuthParamsInUrl;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoJavaScriptClient} from '@asgardeo/javascript';\nimport {AsgardeoBrowserConfig} from './models/config';\n\n/**\n * Base class for implementing Asgardeo in browser-based applications.\n * This class provides the core functionality for managing user authentication and sessions.\n *\n * @typeParam T - Configuration type that extends AsgardeoBrowserConfig.\n */\nabstract class AsgardeoBrowserClient<T = AsgardeoBrowserConfig> extends AsgardeoJavaScriptClient<T> {}\n\nexport default AsgardeoBrowserClient;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\n/**\n * Entry point for all public APIs of this SDK.\n */\nexport * from './__legacy__/client';\nexport * from './__legacy__/models';\n\n// Utils\nexport * from './__legacy__/utils/spa-utils';\n\n// Constants\nexport * from './__legacy__/constants/storage';\nexport * from './__legacy__/constants/hooks';\n\n// clients\nexport * from './__legacy__/clients/main-thread-client';\nexport * from './__legacy__/clients/web-worker-client';\n\n// models\nexport * from './__legacy__/models/request-custom-grant';\n\n// helpers\nexport * from './__legacy__/helpers/authentication-helper';\nexport * from './__legacy__/helpers/spa-helper';\n\n// worker receiver\nexport * from './__legacy__/worker/worker-receiver';\n\nexport {AsgardeoBrowserConfig} from './models/config';\n\nexport {default as hasAuthParamsInUrl} from './utils/hasAuthParamsInUrl';\n\nexport {default as AsgardeoBrowserClient} from './AsgardeoBrowserClient';\n\n// Re-export everything from the JavaScript package\nexport * from '@asgardeo/javascript';\n\nexport {\n  detectThemeMode,\n  createClassObserver,\n  createMediaQueryListener,\n  BrowserThemeDetection,\n} from './theme/themeDetection';\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {ThemeDetection, ThemeMode} from '@asgardeo/javascript';\n\n/**\n * Extended theme detection config that includes DOM-specific options\n */\nexport interface BrowserThemeDetection extends ThemeDetection {\n  /**\n   * The element to observe for class changes\n   * @default document.documentElement (html element)\n   */\n  targetElement?: HTMLElement;\n}\n\n/**\n * Detects the current theme mode based on the specified method\n */\nexport const detectThemeMode = (mode: ThemeMode, config: BrowserThemeDetection = {}): 'light' | 'dark' => {\n  const {\n    darkClass = 'dark',\n    lightClass = 'light',\n    targetElement = typeof document !== 'undefined' ? document.documentElement : null,\n  } = config;\n\n  if (mode === 'light') return 'light';\n  if (mode === 'dark') return 'dark';\n\n  if (mode === 'system') {\n    if (typeof window !== 'undefined' && window.matchMedia) {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches ? 'dark' : 'light';\n    }\n    return 'light';\n  }\n\n  if (mode === 'class') {\n    if (!targetElement) {\n      console.warn('ThemeDetection: targetElement is required for class-based detection, falling back to light mode');\n      return 'light';\n    }\n\n    const classList = targetElement.classList;\n\n    // Check for explicit dark class first\n    if (classList.contains(darkClass)) {\n      return 'dark';\n    }\n\n    // Check for explicit light class\n    if (classList.contains(lightClass)) {\n      return 'light';\n    }\n\n    // If neither class is present, default to light\n    return 'light';\n  }\n\n  return 'light';\n};\n\n/**\n * Creates a MutationObserver to watch for class changes on the target element\n */\nexport const createClassObserver = (\n  targetElement: HTMLElement,\n  callback: (isDark: boolean) => void,\n  config: BrowserThemeDetection = {},\n): MutationObserver => {\n  const {darkClass = 'dark', lightClass = 'light'} = config;\n\n  const observer = new MutationObserver(mutations => {\n    mutations.forEach(mutation => {\n      if (mutation.type === 'attributes' && mutation.attributeName === 'class') {\n        const classList = targetElement.classList;\n\n        if (classList.contains(darkClass)) {\n          callback(true);\n        } else if (classList.contains(lightClass)) {\n          callback(false);\n        }\n        // If neither class is present, we don't trigger the callback\n        // to avoid unnecessary re-renders\n      }\n    });\n  });\n\n  observer.observe(targetElement, {\n    attributes: true,\n    attributeFilter: ['class'],\n  });\n\n  return observer;\n};\n\n/**\n * Creates a media query listener for system theme changes\n */\nexport const createMediaQueryListener = (callback: (isDark: boolean) => void): MediaQueryList | null => {\n  if (typeof window === 'undefined' || !window.matchMedia) {\n    return null;\n  }\n\n  const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');\n\n  const handleChange = (e: MediaQueryListEvent) => {\n    callback(e.matches);\n  };\n\n  // Modern browsers\n  if (mediaQuery.addEventListener) {\n    mediaQuery.addEventListener('change', handleChange);\n  } else {\n    // Fallback for older browsers\n    mediaQuery.addListener(handleChange);\n  }\n\n  return mediaQuery;\n};\n"],
  "mappings": "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",
  "names": ["len", "i", "len2", "Buffer", "i", "byteLength", "Buffer", "Buffer", "AsgardeoAuthException", "AsgardeoAuthClient", "OIDCRequestConstants", "Hooks", "AsgardeoAuthClient", "OIDCRequestConstants", "OP_IFRAME", "rpIFrame", "opIframe", "OIDCRequestConstants", "AsgardeoAuthClient", "randombytes", "AsgardeoAuthClient", "OIDCRequestConstants", "config", "AsgardeoAuthClient", "AsgardeoAuthException", "OIDCRequestConstants", "extractPkceStorageKeyFromState", "AsgardeoAuthException", "extractPkceStorageKeyFromState", "AsgardeoAuthException", "error", "pkce", "extractPkceStorageKeyFromState", "initiateStore", "AsgardeoAuthClient", "AsgardeoAuthException", "config", "extractPkceStorageKeyFromState", "OIDCRequestConstants", "message", "AsgardeoAuthException", "AsgardeoAuthException", "AsgardeoAuthClient", "OIDCRequestConstants", "AsgardeoAuthClient", "OIDCRequestConstants", "config", "AsgardeoAuthException"]
}
