{
  "version": 3,
  "sources": ["../../src/index.ts", "../../src/contexts/Asgardeo/AsgardeoProvider.tsx", "../../src/contexts/Asgardeo/AsgardeoContext.ts", "../../src/AsgardeoReactClient.ts", "../../src/__temp__/api.ts", "../../src/api/getMeOrganizations.ts", "../../src/api/getScim2Me.ts", "../../src/api/getSchemas.ts", "../../src/api/getAllOrganizations.ts", "../../src/hooks/useBrowserUrl.ts", "../../src/contexts/Flow/FlowProvider.tsx", "../../src/contexts/Flow/FlowContext.ts", "../../src/contexts/I18n/I18nProvider.tsx", "../../src/contexts/I18n/I18nContext.ts", "../../src/contexts/Organization/OrganizationProvider.tsx", "../../src/contexts/Organization/OrganizationContext.ts", "../../src/contexts/Theme/ThemeProvider.tsx", "../../src/contexts/Theme/ThemeContext.ts", "../../src/contexts/Branding/useBrandingContext.ts", "../../src/contexts/Branding/BrandingContext.ts", "../../src/contexts/Branding/BrandingProvider.tsx", "../../src/contexts/User/UserProvider.tsx", "../../src/contexts/User/UserContext.ts", "../../src/contexts/Asgardeo/useAsgardeo.ts", "../../src/contexts/User/useUser.ts", "../../src/contexts/Organization/useOrganization.ts", "../../src/contexts/Flow/useFlow.ts", "../../src/contexts/I18n/useI18n.ts", "../../src/contexts/Theme/useTheme.ts", "../../src/hooks/useTranslation.ts", "../../src/hooks/useForm.ts", "../../src/hooks/useBranding.ts", "../../src/components/actions/SignInButton/BaseSignInButton.tsx", "../../src/components/primitives/Button/Button.tsx", "../../src/components/primitives/Spinner/Spinner.tsx", "../../src/components/actions/SignInButton/SignInButton.tsx", "../../src/components/actions/SignOutButton/BaseSignOutButton.tsx", "../../src/components/actions/SignOutButton/SignOutButton.tsx", "../../src/components/actions/SignUpButton/BaseSignUpButton.tsx", "../../src/components/actions/SignUpButton/SignUpButton.tsx", "../../src/components/control/SignedIn.tsx", "../../src/components/control/SignedOut.tsx", "../../src/components/control/AsgardeoLoading.tsx", "../../src/components/presentation/SignIn/BaseSignIn.tsx", "../../src/components/presentation/SignIn/options/SignInOptionFactory.tsx", "../../src/components/presentation/SignIn/options/UsernamePassword.tsx", "../../src/components/primitives/TextField/TextField.tsx", "../../src/components/primitives/Typography/Typography.tsx", "../../src/components/primitives/FormControl/FormControl.tsx", "../../src/components/primitives/InputLabel/InputLabel.tsx", "../../src/components/primitives/Select/Select.tsx", "../../src/components/primitives/OtpField/OtpField.tsx", "../../src/components/primitives/PasswordField/PasswordField.tsx", "../../src/components/primitives/Icons/Eye.tsx", "../../src/components/primitives/Icons/EyeOff.tsx", "../../src/components/primitives/DatePicker/DatePicker.tsx", "../../src/components/primitives/Checkbox/Checkbox.tsx", "../../src/components/factories/FieldFactory.tsx", "../../src/components/presentation/SignIn/options/IdentifierFirst.tsx", "../../src/components/presentation/SignIn/options/GoogleButton.tsx", "../../src/components/presentation/SignIn/options/GitHubButton.tsx", "../../src/components/presentation/SignIn/options/MicrosoftButton.tsx", "../../src/components/presentation/SignIn/options/FacebookButton.tsx", "../../src/components/presentation/SignIn/options/LinkedInButton.tsx", "../../src/components/presentation/SignIn/options/SignInWithEthereumButton.tsx", "../../src/components/presentation/SignIn/options/EmailOtp.tsx", "../../src/components/presentation/SignIn/options/Totp.tsx", "../../src/components/presentation/SignIn/options/SmsOtp.tsx", "../../src/components/presentation/SignIn/options/SocialButton.tsx", "../../src/components/presentation/SignIn/options/MultiOptionButton.tsx", "../../src/components/primitives/Alert/Alert.tsx", "../../src/components/primitives/Icons/CircleCheck.tsx", "../../src/components/primitives/Icons/CircleAlert.tsx", "../../src/components/primitives/Icons/TriangleAlert.tsx", "../../src/components/primitives/Icons/Info.tsx", "../../src/components/primitives/Card/Card.tsx", "../../src/components/primitives/Divider/Divider.tsx", "../../src/components/primitives/Logo/Logo.tsx", "../../src/components/presentation/SignIn/SignIn.tsx", "../../src/components/presentation/SignUp/BaseSignUp.tsx", "../../src/components/presentation/SignUp/options/SignUpOptionFactory.tsx", "../../src/components/presentation/SignUp/options/CheckboxInput.tsx", "../../src/components/presentation/SignUp/options/DateInput.tsx", "../../src/components/presentation/SignUp/options/DividerComponent.tsx", "../../src/components/presentation/SignUp/options/EmailInput.tsx", "../../src/components/presentation/SignUp/options/FormContainer.tsx", "../../src/components/presentation/SignUp/options/GoogleButton.tsx", "../../src/components/presentation/SignUp/options/ImageComponent.tsx", "../../src/components/presentation/SignUp/options/NumberInput.tsx", "../../src/components/presentation/SignUp/options/PasswordInput.tsx", "../../src/components/presentation/SignUp/options/SubmitButton.tsx", "../../src/components/presentation/SignUp/options/TelephoneInput.tsx", "../../src/components/presentation/SignUp/options/TextInput.tsx", "../../src/components/presentation/SignUp/options/Typography.tsx", "../../src/components/presentation/SignUp/SignUp.tsx", "../../src/components/presentation/User/BaseUser.tsx", "../../src/components/presentation/User/User.tsx", "../../src/components/presentation/Organization/BaseOrganization.tsx", "../../src/components/presentation/Organization/Organization.tsx", "../../src/components/presentation/UserProfile/BaseUserProfile.tsx", "../../src/utils/getMappedUserProfileValue.ts", "../../src/components/primitives/Avatar/Avatar.tsx", "../../src/components/primitives/Popover/Popover.tsx", "../../src/components/primitives/Icons/LogOut.tsx", "../../src/components/primitives/Icons/Plus.tsx", "../../src/components/primitives/Icons/User.tsx", "../../src/components/primitives/Icons/X.tsx", "../../src/components/primitives/MultiInput/MultiInput.tsx", "../../src/api/updateMeProfile.ts", "../../src/components/presentation/UserProfile/UserProfile.tsx", "../../src/components/presentation/UserDropdown/BaseUserDropdown.tsx", "../../src/components/presentation/UserDropdown/UserDropdown.tsx", "../../src/components/presentation/OrganizationSwitcher/BaseOrganizationSwitcher.tsx", "../../src/components/primitives/Icons/Building.tsx", "../../src/components/primitives/Icons/Check.tsx", "../../src/components/primitives/Icons/ChevronDown.tsx", "../../src/components/presentation/OrganizationSwitcher/OrganizationSwitcher.tsx", "../../src/components/presentation/CreateOrganization/CreateOrganization.tsx", "../../src/components/presentation/CreateOrganization/BaseCreateOrganization.tsx", "../../src/api/createOrganization.ts", "../../src/components/presentation/OrganizationProfile/OrganizationProfile.tsx", "../../src/components/presentation/OrganizationProfile/BaseOrganizationProfile.tsx", "../../src/components/primitives/KeyValueInput/KeyValueInput.tsx", "../../src/api/getOrganization.ts", "../../src/api/updateOrganization.ts", "../../src/components/presentation/OrganizationList/OrganizationList.tsx", "../../src/components/presentation/OrganizationList/BaseOrganizationList.tsx", "../../src/components/primitives/Icons/BuildingAlt.tsx"],
  "sourcesContent": ["/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nexport {default as AsgardeoProvider} from './contexts/Asgardeo/AsgardeoProvider';\nexport * from './contexts/Asgardeo/AsgardeoProvider';\n\nexport {default as AsgardeoContext} from './contexts/Asgardeo/AsgardeoContext';\nexport * from './contexts/Asgardeo/AsgardeoContext';\n\nexport {default as useAsgardeo} from './contexts/Asgardeo/useAsgardeo';\nexport * from './contexts/Asgardeo/useAsgardeo';\n\nexport {default as UserContext} from './contexts/User/UserContext';\nexport * from './contexts/User/UserContext';\n\nexport {default as UserProvider} from './contexts/User/UserProvider';\nexport * from './contexts/User/UserProvider';\n\nexport {default as useUser} from './contexts/User/useUser';\nexport * from './contexts/User/useUser';\n\nexport {default as OrganizationContext} from './contexts/Organization/OrganizationContext';\nexport * from './contexts/Organization/OrganizationContext';\n\nexport {default as OrganizationProvider} from './contexts/Organization/OrganizationProvider';\nexport * from './contexts/Organization/OrganizationProvider';\n\nexport {default as useOrganization} from './contexts/Organization/useOrganization';\nexport * from './contexts/Organization/useOrganization';\n\nexport {default as FlowContext} from './contexts/Flow/FlowContext';\nexport * from './contexts/Flow/FlowContext';\n\nexport {default as FlowProvider} from './contexts/Flow/FlowProvider';\nexport * from './contexts/Flow/FlowProvider';\n\nexport {default as useFlow} from './contexts/Flow/useFlow';\nexport * from './contexts/Flow/useFlow';\n\nexport {default as I18nContext} from './contexts/I18n/I18nContext';\nexport * from './contexts/I18n/I18nContext';\n\nexport {default as I18nProvider} from './contexts/I18n/I18nProvider';\nexport * from './contexts/I18n/I18nProvider';\n\nexport {default as useI18n} from './contexts/I18n/useI18n';\nexport * from './contexts/I18n/useI18n';\n\nexport {default as ThemeContext} from './contexts/Theme/ThemeContext';\nexport * from './contexts/Theme/ThemeContext';\n\nexport {default as ThemeProvider} from './contexts/Theme/ThemeProvider';\nexport * from './contexts/Theme/ThemeProvider';\n\nexport {default as useTheme} from './contexts/Theme/useTheme';\nexport * from './contexts/Theme/useTheme';\n\nexport {default as BrandingContext} from './contexts/Branding/BrandingContext';\nexport * from './contexts/Branding/BrandingContext';\n\nexport {default as BrandingProvider} from './contexts/Branding/BrandingProvider';\nexport * from './contexts/Branding/BrandingProvider';\n\nexport {default as useBrandingContext} from './contexts/Branding/useBrandingContext';\nexport * from './contexts/Branding/useBrandingContext';\n\nexport {default as useBrowserUrl} from './hooks/useBrowserUrl';\nexport * from './hooks/useBrowserUrl';\n\nexport {default as useTranslation} from './hooks/useTranslation';\nexport * from './hooks/useTranslation';\n\nexport {default as useForm} from './hooks/useForm';\nexport * from './hooks/useForm';\n\nexport {default as useBranding} from './hooks/useBranding';\nexport * from './hooks/useBranding';\n\nexport {default as BaseSignInButton} from './components/actions/SignInButton/BaseSignInButton';\nexport * from './components/actions/SignInButton/BaseSignInButton';\n\nexport {default as SignInButton} from './components/actions/SignInButton/SignInButton';\nexport * from './components/actions/SignInButton/SignInButton';\n\nexport {default as BaseSignOutButton} from './components/actions/SignOutButton/BaseSignOutButton';\nexport * from './components/actions/SignOutButton/BaseSignOutButton';\n\nexport {default as SignOutButton} from './components/actions/SignOutButton/SignOutButton';\nexport * from './components/actions/SignOutButton/SignOutButton';\n\nexport {default as BaseSignUpButton} from './components/actions/SignUpButton/BaseSignUpButton';\nexport * from './components/actions/SignUpButton/BaseSignUpButton';\n\nexport {default as SignUpButton} from './components/actions/SignUpButton/SignUpButton';\nexport * from './components/actions/SignUpButton/SignUpButton';\n\nexport {default as SignedIn} from './components/control/SignedIn';\nexport * from './components/control/SignedIn';\n\nexport {default as SignedOut} from './components/control/SignedOut';\nexport * from './components/control/SignedOut';\n\nexport {default as AsgardeoLoading} from './components/control/AsgardeoLoading';\nexport * from './components/control/AsgardeoLoading';\n\nexport {default as BaseSignIn} from './components/presentation/SignIn/BaseSignIn';\nexport * from './components/presentation/SignIn/BaseSignIn';\n\nexport {default as SignIn} from './components/presentation/SignIn/SignIn';\nexport * from './components/presentation/SignIn/SignIn';\n\nexport {default as BaseSignUp} from './components/presentation/SignUp/BaseSignUp';\nexport * from './components/presentation/SignUp/BaseSignUp';\n\nexport {default as SignUp} from './components/presentation/SignUp/SignUp';\nexport * from './components/presentation/SignUp/SignUp';\n\n// Sign-In Options\nexport {default as IdentifierFirst} from './components/presentation/SignIn/options/IdentifierFirst';\nexport {default as UsernamePassword} from './components/presentation/SignIn/options/UsernamePassword';\nexport {default as GoogleButton} from './components/presentation/SignIn/options/GoogleButton';\nexport {default as GitHubButton} from './components/presentation/SignIn/options/GitHubButton';\nexport {default as MicrosoftButton} from './components/presentation/SignIn/options/MicrosoftButton';\nexport {default as FacebookButton} from './components/presentation/SignIn/options/FacebookButton';\nexport {default as LinkedInButton} from './components/presentation/SignIn/options/LinkedInButton';\nexport {default as SignInWithEthereumButton} from './components/presentation/SignIn/options/SignInWithEthereumButton';\nexport {default as EmailOtp} from './components/presentation/SignIn/options/EmailOtp';\nexport {default as Totp} from './components/presentation/SignIn/options/Totp';\nexport {default as SmsOtp} from './components/presentation/SignIn/options/SmsOtp';\nexport {default as SocialButton} from './components/presentation/SignIn/options/SocialButton';\nexport {default as MultiOptionButton} from './components/presentation/SignIn/options/MultiOptionButton';\nexport * from './components/presentation/SignIn/options/SignInOptionFactory';\n\nexport {default as BaseUser} from './components/presentation/User/BaseUser';\nexport * from './components/presentation/User/BaseUser';\n\nexport {default as User} from './components/presentation/User/User';\nexport * from './components/presentation/User/User';\n\nexport {default as BaseOrganization} from './components/presentation/Organization/BaseOrganization';\nexport * from './components/presentation/Organization/BaseOrganization';\n\nexport {default as Organization} from './components/presentation/Organization/Organization';\nexport * from './components/presentation/Organization/Organization';\n\nexport {default as BaseUserProfile} from './components/presentation/UserProfile/BaseUserProfile';\nexport * from './components/presentation/UserProfile/BaseUserProfile';\n\nexport {default as UserProfile} from './components/presentation/UserProfile/UserProfile';\nexport * from './components/presentation/UserProfile/UserProfile';\n\nexport {default as BaseUserDropdown} from './components/presentation/UserDropdown/BaseUserDropdown';\nexport * from './components/presentation/UserDropdown/BaseUserDropdown';\n\nexport {default as UserDropdown} from './components/presentation/UserDropdown/UserDropdown';\nexport * from './components/presentation/UserDropdown/UserDropdown';\n\nexport {default as BaseOrganizationSwitcher} from './components/presentation/OrganizationSwitcher/BaseOrganizationSwitcher';\nexport * from './components/presentation/OrganizationSwitcher/BaseOrganizationSwitcher';\n\nexport {default as OrganizationSwitcher} from './components/presentation/OrganizationSwitcher/OrganizationSwitcher';\nexport * from './components/presentation/OrganizationSwitcher/OrganizationSwitcher';\n\nexport {default as BaseOrganizationList} from './components/presentation/OrganizationList/BaseOrganizationList';\nexport * from './components/presentation/OrganizationList/BaseOrganizationList';\n\nexport {default as OrganizationList} from './components/presentation/OrganizationList/OrganizationList';\nexport * from './components/presentation/OrganizationList/OrganizationList';\n\nexport {default as BaseOrganizationProfile} from './components/presentation/OrganizationProfile/BaseOrganizationProfile';\nexport * from './components/presentation/OrganizationProfile/BaseOrganizationProfile';\n\nexport {default as OrganizationProfile} from './components/presentation/OrganizationProfile/OrganizationProfile';\nexport * from './components/presentation/OrganizationProfile/OrganizationProfile';\n\nexport {BaseCreateOrganization} from './components/presentation/CreateOrganization/BaseCreateOrganization';\nexport * from './components/presentation/CreateOrganization/BaseCreateOrganization';\n\nexport {CreateOrganization} from './components/presentation/CreateOrganization/CreateOrganization';\nexport * from './components/presentation/CreateOrganization/CreateOrganization';\n\nexport {default as Button} from './components/primitives/Button/Button';\nexport * from './components/primitives/Button/Button';\n\nexport {default as Card} from './components/primitives/Card/Card';\nexport * from './components/primitives/Card/Card';\n\nexport {default as Alert} from './components/primitives/Alert/Alert';\nexport * from './components/primitives/Alert/Alert';\n\nexport {default as OtpField} from './components/primitives/OtpField/OtpField';\nexport * from './components/primitives/OtpField/OtpField';\n\nexport {default as TextField} from './components/primitives/TextField/TextField';\nexport * from './components/primitives/TextField/TextField';\n\nexport {default as MultiInput} from './components/primitives/MultiInput/MultiInput';\nexport * from './components/primitives/MultiInput/MultiInput';\n\nexport {default as PasswordField} from './components/primitives/PasswordField/PasswordField';\nexport * from './components/primitives/PasswordField/PasswordField';\n\nexport {default as Select} from './components/primitives/Select/Select';\nexport * from './components/primitives/Select/Select';\n\nexport {default as DatePicker} from './components/primitives/DatePicker/DatePicker';\nexport * from './components/primitives/DatePicker/DatePicker';\n\nexport {default as Checkbox} from './components/primitives/Checkbox/Checkbox';\nexport * from './components/primitives/Checkbox/Checkbox';\n\nexport {default as FormControl} from './components/primitives/FormControl/FormControl';\nexport * from './components/primitives/FormControl/FormControl';\n\nexport {default as InputLabel} from './components/primitives/InputLabel/InputLabel';\nexport * from './components/primitives/InputLabel/InputLabel';\n\nexport {default as KeyValueInput} from './components/primitives/KeyValueInput/KeyValueInput';\nexport * from './components/primitives/KeyValueInput/KeyValueInput';\n\nexport {default as Typography} from './components/primitives/Typography/Typography';\nexport * from './components/primitives/Typography/Typography';\n\nexport {default as Divider} from './components/primitives/Divider/Divider';\nexport * from './components/primitives/Divider/Divider';\n\nexport {default as Logo} from './components/primitives/Logo/Logo';\nexport * from './components/primitives/Logo/Logo';\n\nexport {default as Spinner} from './components/primitives/Spinner/Spinner';\nexport * from './components/primitives/Spinner/Spinner';\n\nexport {default as Eye} from './components/primitives/Icons/Eye';\nexport {default as EyeOff} from './components/primitives/Icons/EyeOff';\nexport {default as CircleCheck} from './components/primitives/Icons/CircleCheck';\nexport {default as CircleAlert} from './components/primitives/Icons/CircleAlert';\nexport {default as TriangleAlert} from './components/primitives/Icons/TriangleAlert';\nexport {default as Info} from './components/primitives/Icons/Info';\nexport {default as UserIcon} from './components/primitives/Icons/User';\nexport {default as LogOut} from './components/primitives/Icons/LogOut';\n\nexport {createField, FieldFactory, validateFieldValue} from './components/factories/FieldFactory';\nexport * from './components/factories/FieldFactory';\n\nexport {default as BuildingAlt} from './components/primitives/Icons/BuildingAlt';\n\nexport type {FlowStep, FlowMessage, FlowContextValue} from './contexts/Flow/FlowContext';\n\nexport type {FlowProviderProps} from './contexts/Flow/FlowProvider';\n\nexport {default as getAllOrganizations, GetAllOrganizationsConfig} from './api/getAllOrganizations';\nexport {default as createOrganization, CreateOrganizationConfig} from './api/createOrganization';\nexport {default as getMeOrganizations, GetMeOrganizationsConfig} from './api/getMeOrganizations';\nexport {default as getOrganization, GetOrganizationConfig} from './api/getOrganization';\nexport {default as updateOrganization, createPatchOperations, UpdateOrganizationConfig} from './api/updateOrganization';\nexport {default as getSchemas, GetSchemasConfig} from './api/getSchemas';\nexport {default as updateMeProfile, UpdateMeProfileConfig} from './api/updateMeProfile';\nexport {default as getMeProfile} from './api/getScim2Me';\nexport * from './api/getScim2Me';\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoRuntimeError,\n  EmbeddedFlowExecuteRequestPayload,\n  EmbeddedFlowExecuteResponse,\n  generateFlattenedUserProfile,\n  Organization,\n  SignInOptions,\n  SignOutOptions,\n  User,\n  UserProfile,\n  getBrandingPreference,\n  GetBrandingPreferenceConfig,\n  BrandingPreference,\n} from '@asgardeo/browser';\nimport {FC, RefObject, PropsWithChildren, ReactElement, useEffect, useMemo, useRef, useState, useCallback} from 'react';\nimport AsgardeoContext from './AsgardeoContext';\nimport AsgardeoReactClient from '../../AsgardeoReactClient';\nimport useBrowserUrl from '../../hooks/useBrowserUrl';\nimport {AsgardeoReactConfig} from '../../models/config';\nimport FlowProvider from '../Flow/FlowProvider';\nimport I18nProvider from '../I18n/I18nProvider';\nimport OrganizationProvider from '../Organization/OrganizationProvider';\nimport ThemeProvider from '../Theme/ThemeProvider';\nimport BrandingProvider from '../Branding/BrandingProvider';\nimport UserProvider from '../User/UserProvider';\n\n/**\n * Props interface of {@link AsgardeoProvider}\n */\nexport type AsgardeoProviderProps = AsgardeoReactConfig;\n\nconst AsgardeoProvider: FC<PropsWithChildren<AsgardeoProviderProps>> = ({\n  afterSignInUrl = window.location.origin,\n  afterSignOutUrl = window.location.origin,\n  baseUrl: _baseUrl,\n  clientId,\n  children,\n  scopes,\n  preferences,\n  signInUrl,\n  signUpUrl,\n  organizationHandle,\n  applicationId,\n  ...rest\n}: PropsWithChildren<AsgardeoProviderProps>): ReactElement => {\n  const reRenderCheckRef: RefObject<boolean> = useRef(false);\n  const asgardeo: AsgardeoReactClient = useMemo(() => new AsgardeoReactClient(), []);\n  const {hasAuthParams} = useBrowserUrl();\n  const [user, setUser] = useState<any | null>(null);\n  const [currentOrganization, setCurrentOrganization] = useState<Organization | null>(null);\n\n  const [isSignedInSync, setIsSignedInSync] = useState<boolean>(false);\n  const [isInitializedSync, setIsInitializedSync] = useState<boolean>(false);\n\n  const [myOrganizations, setMyOrganizations] = useState<Organization[]>([]);\n  const [userProfile, setUserProfile] = useState<UserProfile | null>(null);\n  const [baseUrl, setBaseUrl] = useState<string>(_baseUrl);\n  const [config, setConfig] = useState<AsgardeoReactConfig>({\n    applicationId,\n    organizationHandle,\n    afterSignInUrl,\n    afterSignOutUrl,\n    baseUrl,\n    clientId,\n    scopes,\n    signUpUrl,\n    signInUrl,\n    ...rest,\n  });\n\n  // Branding state\n  const [brandingPreference, setBrandingPreference] = useState<BrandingPreference | null>(null);\n  const [isBrandingLoading, setIsBrandingLoading] = useState<boolean>(false);\n  const [brandingError, setBrandingError] = useState<Error | null>(null);\n  const [hasFetchedBranding, setHasFetchedBranding] = useState<boolean>(false);\n\n  useEffect(() => {\n    setBaseUrl(_baseUrl);\n    // Reset branding state when baseUrl changes\n    if (_baseUrl !== baseUrl) {\n      setHasFetchedBranding(false);\n      setBrandingPreference(null);\n      setBrandingError(null);\n    }\n  }, [_baseUrl, baseUrl]);\n\n  useEffect(() => {\n    (async (): Promise<void> => {\n      await asgardeo.initialize(config);\n      setConfig(await asgardeo.getConfiguration());\n    })();\n  }, []);\n\n  /**\n   * Try signing in when the component is mounted.\n   */\n  useEffect(() => {\n    // React 18.x Strict.Mode has a new check for `Ensuring reusable state` to facilitate an upcoming react feature.\n    // https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state\n    // This will remount all the useEffects to ensure that there are no unexpected side effects.\n    // When react remounts the signIn hook of the AuthProvider, it will cause a race condition. Hence, we have to\n    // prevent the re-render of this hook as suggested in the following discussion.\n    // https://github.com/reactwg/react-18/discussions/18#discussioncomment-795623\n    if (reRenderCheckRef.current) {\n      return;\n    }\n\n    reRenderCheckRef.current = true;\n\n    (async (): Promise<void> => {\n      // User is already authenticated. Skip...\n      if (await asgardeo.isSignedIn()) {\n        await updateSession();\n\n        return;\n      }\n\n      if (hasAuthParams(new URL(window.location.href), afterSignInUrl)) {\n        try {\n          await signIn(\n            {callOnlyOnRedirect: true},\n            // authParams?.authorizationCode,\n            // authParams?.sessionState,\n            // authParams?.state,\n          );\n\n          // setError(null);\n        } catch (error) {\n          if (error && Object.prototype.hasOwnProperty.call(error, 'code')) {\n            // setError(error);\n          }\n        }\n      }\n    })();\n  }, []);\n\n  /**\n   * Check if the user is signed in and update the state accordingly.\n   * This will also set an interval to check for the sign-in status every second\n   * until the user is signed in.\n   */\n  useEffect(() => {\n    let interval: NodeJS.Timeout;\n\n    (async (): Promise<void> => {\n      try {\n        const status: boolean = await asgardeo.isSignedIn();\n\n        setIsSignedInSync(status);\n\n        if (!status) {\n          interval = setInterval(async () => {\n            const newStatus: boolean = await asgardeo.isSignedIn();\n\n            if (newStatus) {\n              setIsSignedInSync(true);\n              clearInterval(interval);\n            }\n          }, 1000);\n        }\n      } catch (error) {\n        setIsSignedInSync(false);\n      }\n    })();\n\n    return (): void => {\n      if (interval) {\n        clearInterval(interval);\n      }\n    };\n  }, [asgardeo]);\n\n  useEffect(() => {\n    (async (): Promise<void> => {\n      try {\n        const status: boolean = await asgardeo.isInitialized();\n\n        setIsInitializedSync(status);\n      } catch (error) {\n        setIsInitializedSync(false);\n      }\n    })();\n  }, [asgardeo]);\n\n  const updateSession = async (): Promise<void> => {\n    let _baseUrl: string = baseUrl;\n\n    // If there's a `user_org` claim in the ID token,\n    // Treat this login as a organization login.\n    if ((await asgardeo.getDecodedIdToken())?.['user_org']) {\n      _baseUrl = `${(await asgardeo.getConfiguration()).baseUrl}/o`;\n      setBaseUrl(_baseUrl);\n    }\n\n    setUser(await asgardeo.getUser({baseUrl: _baseUrl}));\n    setUserProfile(await asgardeo.getUserProfile({baseUrl: _baseUrl}));\n    setCurrentOrganization(await asgardeo.getCurrentOrganization());\n    setMyOrganizations(await asgardeo.getMyOrganizations());\n  };\n\n  // Branding fetch function\n  const fetchBranding = useCallback(async (): Promise<void> => {\n    if (!baseUrl) {\n      return;\n    }\n\n    // Prevent multiple calls if already fetching\n    if (isBrandingLoading) {\n      return;\n    }\n\n    setIsBrandingLoading(true);\n    setBrandingError(null);\n\n    try {\n      const getBrandingConfig: GetBrandingPreferenceConfig = {\n        baseUrl,\n        locale: preferences?.i18n?.language,\n        // Add other branding config options as needed\n      };\n\n      const brandingData = await getBrandingPreference(getBrandingConfig);\n      setBrandingPreference(brandingData);\n      setHasFetchedBranding(true);\n    } catch (err) {\n      const errorMessage = err instanceof Error ? err : new Error('Failed to fetch branding preference');\n      setBrandingError(errorMessage);\n      setBrandingPreference(null);\n      setHasFetchedBranding(true); // Mark as fetched even on error to prevent retries\n    } finally {\n      setIsBrandingLoading(false);\n    }\n  }, [baseUrl, preferences?.i18n?.language]);\n\n  // Refetch branding function\n  const refetchBranding = useCallback(async (): Promise<void> => {\n    setHasFetchedBranding(false); // Reset the flag to allow refetching\n    await fetchBranding();\n  }, [fetchBranding]);\n\n  // Auto-fetch branding when initialized and configured\n  useEffect(() => {\n    // Enable branding by default or when explicitly enabled\n    const shouldFetchBranding = preferences?.theme?.inheritFromBranding !== false;\n\n    if (shouldFetchBranding && isInitializedSync && baseUrl && !hasFetchedBranding && !isBrandingLoading) {\n      fetchBranding();\n    }\n  }, [\n    preferences?.theme?.inheritFromBranding,\n    isInitializedSync,\n    baseUrl,\n    hasFetchedBranding,\n    isBrandingLoading,\n    fetchBranding,\n  ]);\n\n  const signIn = async (...args: any): Promise<User> => {\n    try {\n      const response: User = await asgardeo.signIn(...args);\n\n      if (await asgardeo.isSignedIn()) {\n        await updateSession();\n      }\n\n      return response;\n    } catch (error) {\n      throw new Error(`Error while signing in: ${error}`);\n    }\n  };\n\n  const signUp = async (payload?: EmbeddedFlowExecuteRequestPayload): Promise<void | EmbeddedFlowExecuteResponse> => {\n    try {\n      return await asgardeo.signUp(payload);\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Error while signing up: ${error.message || error}`,\n        'asgardeo-signUp-Error',\n        'react',\n        'An error occurred while trying to sign up.',\n      );\n    }\n  };\n\n  const signOut = async (options?: SignOutOptions, afterSignOut?: () => void): Promise<string> =>\n    asgardeo.signOut(options, afterSignOut);\n\n  const switchOrganization = async (organization: Organization): Promise<void> => {\n    try {\n      await asgardeo.switchOrganization(organization);\n\n      if (await asgardeo.isSignedIn()) {\n        await updateSession();\n      }\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Failed to switch organization: ${error.message || error}`,\n        'asgardeo-switchOrganization-Error',\n        'react',\n        'An error occurred while switching to the specified organization.',\n      );\n    }\n  };\n\n  const isDarkMode: boolean = useMemo(() => {\n    if (!preferences?.theme?.mode || preferences.theme.mode === 'system') {\n      return window.matchMedia('(prefers-color-scheme: dark)').matches;\n    }\n    return preferences.theme.mode === 'dark';\n  }, [preferences?.theme?.mode]);\n\n  const handleProfileUpdate = (payload: User): void => {\n    setUser(payload);\n    setUserProfile(prev => ({\n      ...prev,\n      profile: payload,\n      flattenedProfile: generateFlattenedUserProfile(payload, prev?.schemas),\n    }));\n  };\n\n  return (\n    <AsgardeoContext.Provider\n      value={{\n        applicationId,\n        organizationHandle: config?.organizationHandle,\n        signInUrl,\n        signUpUrl,\n        afterSignInUrl,\n        baseUrl,\n        isInitialized: isInitializedSync,\n        isLoading: asgardeo.isLoading(),\n        isSignedIn: isSignedInSync,\n        organization: currentOrganization,\n        signIn,\n        signOut,\n        signUp,\n        user,\n      }}\n    >\n      <I18nProvider preferences={preferences?.i18n}>\n        <BrandingProvider\n          brandingPreference={brandingPreference}\n          isLoading={isBrandingLoading}\n          error={brandingError}\n          enabled={preferences?.theme?.inheritFromBranding !== false}\n          refetch={refetchBranding}\n        >\n          <ThemeProvider\n            inheritFromBranding={preferences?.theme?.inheritFromBranding}\n            theme={preferences?.theme?.overrides}\n            mode={isDarkMode ? 'dark' : 'light'}\n          >\n            <FlowProvider>\n              <UserProvider profile={userProfile} onUpdateProfile={handleProfileUpdate}>\n                <OrganizationProvider\n                  getAllOrganizations={async () => await asgardeo.getAllOrganizations()}\n                  myOrganizations={myOrganizations}\n                  currentOrganization={currentOrganization}\n                  onOrganizationSwitch={switchOrganization}\n                  revalidateMyOrganizations={async () => await asgardeo.getMyOrganizations()}\n                >\n                  {children}\n                </OrganizationProvider>\n              </UserProvider>\n            </FlowProvider>\n          </ThemeProvider>\n        </BrandingProvider>\n      </I18nProvider>\n    </AsgardeoContext.Provider>\n  );\n};\n\nexport default AsgardeoProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {Context, createContext} from 'react';\nimport {Organization} from '@asgardeo/browser';\n\n/**\n * Props interface of {@link AsgardeoContext}\n */\nexport type AsgardeoContextProps = {\n  organizationHandle: string | undefined;\n  applicationId: string | undefined;\n  signInUrl: string | undefined;\n  signUpUrl: string | undefined;\n  afterSignInUrl: string | undefined;\n  baseUrl: string | undefined;\n  isInitialized: boolean;\n  /**\n   * Flag indicating whether the SDK is working in the background.\n   */\n  isLoading: boolean;\n  /**\n   * Flag indicating whether the user is signed in or not.\n   */\n  isSignedIn: boolean;\n  /**\n   * Sign-in function to initiate the authentication process.\n   * @remark This is the programmatic version of the `SignInButton` component.\n   * TODO: Fix the types.\n   */\n  signIn: any;\n  /**\n   * Sign-out function to terminate the authentication session.\n   * @remark This is the programmatic version of the `SignOutButton` component.\n   * FIXME: Fix the types.\n   */\n  signOut: any;\n  /**\n   * Sign-up function to initiate the registration process.\n   * @remark This is the programmatic version of the `SignUpButton` component.\n   * FIXME: Fix the types.\n   */\n  signUp: any;\n  user: any;\n  organization: Organization;\n};\n\n/**\n * Context object for managing the Authentication flow builder core context.\n */\nconst AsgardeoContext: Context<AsgardeoContextProps | null> = createContext<null | AsgardeoContextProps>({\n  organizationHandle: undefined,\n  applicationId: undefined,\n  signInUrl: undefined,\n  signUpUrl: undefined,\n  afterSignInUrl: undefined,\n  baseUrl: undefined,\n  isInitialized: false,\n  isLoading: true,\n  isSignedIn: false,\n  organization: null,\n  signIn: null,\n  signOut: null,\n  signUp: null,\n  user: null,\n});\n\nAsgardeoContext.displayName = 'AsgardeoContext';\n\nexport default AsgardeoContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoBrowserClient,\n  flattenUserSchema,\n  generateFlattenedUserProfile,\n  UserProfile,\n  SignInOptions,\n  SignOutOptions,\n  User,\n  generateUserProfile,\n  EmbeddedFlowExecuteResponse,\n  SignUpOptions,\n  EmbeddedFlowExecuteRequestPayload,\n  AsgardeoRuntimeError,\n  executeEmbeddedSignUpFlow,\n  EmbeddedSignInFlowHandleRequestPayload,\n  executeEmbeddedSignInFlow,\n  Organization,\n  IdToken,\n  EmbeddedFlowExecuteRequestConfig,\n  deriveOrganizationHandleFromBaseUrl,\n  AllOrganizationsApiResponse,\n  extractUserClaimsFromIdToken,\n  TokenResponse,\n} from '@asgardeo/browser';\nimport AuthAPI from './__temp__/api';\nimport getMeOrganizations from './api/getMeOrganizations';\nimport getScim2Me from './api/getScim2Me';\nimport getSchemas from './api/getSchemas';\nimport {AsgardeoReactConfig} from './models/config';\nimport getAllOrganizations from './api/getAllOrganizations';\n\n/**\n * Client for mplementing Asgardeo in React applications.\n * This class provides the core functionality for managing user authentication and sessions.\n *\n * @typeParam T - Configuration type that extends AsgardeoReactConfig.\n */\nclass AsgardeoReactClient<T extends AsgardeoReactConfig = AsgardeoReactConfig> extends AsgardeoBrowserClient<T> {\n  private asgardeo: AuthAPI;\n\n  constructor() {\n    super();\n\n    // FIXME: This has to be the browser client from `@asgardeo/browser` package.\n    this.asgardeo = new AuthAPI();\n  }\n\n  override initialize(config: AsgardeoReactConfig): Promise<boolean> {\n    let resolvedOrganizationHandle: string | undefined = config?.organizationHandle;\n\n    if (!resolvedOrganizationHandle) {\n      resolvedOrganizationHandle = deriveOrganizationHandleFromBaseUrl(config?.baseUrl);\n    }\n\n    return this.asgardeo.init({...config, organizationHandle: resolvedOrganizationHandle} as any);\n  }\n\n  override async updateUserProfile(payload: any, userId?: string): Promise<User> {\n    throw new Error('Not implemented');\n  }\n\n  override async getUser(options?: any): Promise<User> {\n    try {\n      let baseUrl = options?.baseUrl;\n\n      if (!baseUrl) {\n        const configData = await this.asgardeo.getConfigData();\n        baseUrl = configData?.baseUrl;\n      }\n\n      const profile = await getScim2Me({baseUrl});\n      const schemas = await getSchemas({baseUrl});\n\n      return generateUserProfile(profile, flattenUserSchema(schemas));\n    } catch (error) {\n      return extractUserClaimsFromIdToken(await this.getDecodedIdToken());\n    }\n  }\n\n  async getDecodedIdToken(sessionId?: string): Promise<IdToken> {\n    return this.asgardeo.getDecodedIdToken(sessionId);\n  }\n\n  async getUserProfile(options?: any): Promise<UserProfile> {\n    try {\n      let baseUrl = options?.baseUrl;\n\n      if (!baseUrl) {\n        const configData = await this.asgardeo.getConfigData();\n        baseUrl = configData?.baseUrl;\n      }\n\n      const profile = await getScim2Me({baseUrl});\n      const schemas = await getSchemas({baseUrl});\n\n      const processedSchemas = flattenUserSchema(schemas);\n\n      const output = {\n        schemas: processedSchemas,\n        flattenedProfile: generateFlattenedUserProfile(profile, processedSchemas),\n        profile,\n      };\n\n      return output;\n    } catch (error) {\n      return {\n        schemas: [],\n        flattenedProfile: extractUserClaimsFromIdToken(await this.getDecodedIdToken()),\n        profile: extractUserClaimsFromIdToken(await this.getDecodedIdToken()),\n      };\n    }\n  }\n\n  override async getMyOrganizations(options?: any, sessionId?: string): Promise<Organization[]> {\n    try {\n      let baseUrl = options?.baseUrl;\n\n      if (!baseUrl) {\n        const configData = await this.asgardeo.getConfigData();\n        baseUrl = configData?.baseUrl;\n      }\n\n      return getMeOrganizations({baseUrl});\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Failed to fetch the user's associated organizations: ${\n          error instanceof Error ? error.message : String(error)\n        }`,\n        'AsgardeoReactClient-getMyOrganizations-RuntimeError-001',\n        'react',\n        'An error occurred while fetching associated organizations of the signed-in user.',\n      );\n    }\n  }\n\n  override async getAllOrganizations(options?: any, sessionId?: string): Promise<AllOrganizationsApiResponse> {\n    try {\n      let baseUrl = options?.baseUrl;\n\n      if (!baseUrl) {\n        const configData = await this.asgardeo.getConfigData();\n        baseUrl = configData?.baseUrl;\n      }\n\n      return getAllOrganizations({baseUrl});\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Failed to fetch all organizations: ${error instanceof Error ? error.message : String(error)}`,\n        'AsgardeoReactClient-getAllOrganizations-RuntimeError-001',\n        'react',\n        'An error occurred while fetching all the organizations associated with the user.',\n      );\n    }\n  }\n\n  override async getCurrentOrganization(): Promise<Organization | null> {\n    const idToken: IdToken = await this.getDecodedIdToken();\n\n    return {\n      orgHandle: idToken?.org_handle,\n      name: idToken?.org_name,\n      id: idToken?.org_id,\n    };\n  }\n\n  override async switchOrganization(organization: Organization, sessionId?: string): Promise<TokenResponse | Response>  {\n    try {\n      const configData = await this.asgardeo.getConfigData();\n      const scopes = configData?.scopes;\n\n      if (!organization.id) {\n        throw new AsgardeoRuntimeError(\n          'Organization ID is required for switching organizations',\n          'react-AsgardeoReactClient-SwitchOrganizationError-001',\n          'react',\n          'The organization object must contain a valid ID to perform the organization switch.',\n        );\n      }\n\n      const exchangeConfig = {\n        attachToken: false,\n        data: {\n          client_id: '{{clientId}}',\n          grant_type: 'organization_switch',\n          scope: '{{scopes}}',\n          switching_organization: organization.id,\n          token: '{{accessToken}}',\n        },\n        id: 'organization-switch',\n        returnsSession: true,\n        signInRequired: true,\n      };\n\n      return await this.asgardeo.exchangeToken(\n        exchangeConfig,\n        (user: User) => {},\n        () => null,\n      ) as TokenResponse | Response;\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Failed to switch organization: ${error.message || error}`,\n        'react-AsgardeoReactClient-SwitchOrganizationError-003',\n        'react',\n        'An error occurred while switching to the specified organization. Please try again.',\n      );\n    }\n  }\n\n  override isLoading(): boolean {\n    return this.asgardeo.isLoading();\n  }\n\n  async isInitialized(): Promise<boolean> {\n    return this.asgardeo.isInitialized();\n  }\n\n  override isSignedIn(): Promise<boolean> {\n    return this.asgardeo.isSignedIn();\n  }\n\n  override getConfiguration(): T {\n    return this.asgardeo.getConfigData() as unknown as T;\n  }\n\n  override signIn(\n    options?: SignInOptions,\n    sessionId?: string,\n    onSignInSuccess?: (afterSignInUrl: string) => void,\n  ): Promise<User>;\n  override signIn(\n    payload: EmbeddedSignInFlowHandleRequestPayload,\n    request: EmbeddedFlowExecuteRequestConfig,\n    sessionId?: string,\n    onSignInSuccess?: (afterSignInUrl: string) => void,\n  ): Promise<User>;\n  override async signIn(...args: any[]): Promise<User> {\n    const arg1 = args[0];\n    const arg2 = args[1];\n\n    if (typeof arg1 === 'object' && 'flowId' in arg1 && typeof arg2 === 'object' && 'url' in arg2) {\n      return executeEmbeddedSignInFlow({\n        payload: arg1,\n        url: arg2.url,\n      });\n    }\n\n    return (await this.asgardeo.signIn(arg1 as any)) as unknown as Promise<User>;\n  }\n\n  override signOut(options?: SignOutOptions, afterSignOut?: (afterSignOutUrl: string) => void): Promise<string>;\n  override signOut(\n    options?: SignOutOptions,\n    sessionId?: string,\n    afterSignOut?: (afterSignOutUrl: string) => void,\n  ): Promise<string>;\n  override async signOut(...args: any[]): Promise<string> {\n    if (args[1] && typeof args[1] !== 'function') {\n      throw new Error('The second argument must be a function.');\n    }\n\n    const response: boolean = await this.asgardeo.signOut(args[1]);\n\n    return Promise.resolve(String(response));\n  }\n\n  override async signUp(options?: SignUpOptions): Promise<void>;\n  override async signUp(payload: EmbeddedFlowExecuteRequestPayload): Promise<EmbeddedFlowExecuteResponse>;\n  override async signUp(...args: any[]): Promise<void | EmbeddedFlowExecuteResponse> {\n    if (args.length === 0) {\n      throw new AsgardeoRuntimeError(\n        'No arguments provided for signUp method.',\n        'react-AsgardeoReactClient-ValidationError-001',\n        'react',\n        'The signUp method requires at least one argument, either a SignUpOptions object or an EmbeddedFlowExecuteRequestPayload.',\n      );\n    }\n\n    const firstArg = args[0];\n\n    if (typeof firstArg === 'object' && 'flowType' in firstArg) {\n      const configData = await this.asgardeo.getConfigData();\n      const baseUrl: string = configData?.baseUrl;\n\n      return executeEmbeddedSignUpFlow({\n        baseUrl,\n        payload: firstArg as EmbeddedFlowExecuteRequestPayload,\n      });\n    }\n    throw new AsgardeoRuntimeError(\n      'Not implemented',\n      'react-AsgardeoReactClient-ValidationError-002',\n      'react',\n      'The signUp method with SignUpOptions is not implemented in the React client.',\n    );\n  }\n}\n\nexport default AsgardeoReactClient;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoSPAClient,\n  AuthClientConfig,\n  User,\n  LegacyConfig as Config,\n  IdToken,\n  Hooks,\n  HttpClientInstance,\n  HttpRequestConfig,\n  HttpResponse,\n  OIDCEndpoints,\n  SignInConfig,\n  SPACustomGrantConfig,\n  initializeEmbeddedSignInFlow,\n  processOpenIDScopes,\n} from '@asgardeo/browser';\nimport {AuthStateInterface} from './models';\n\nclass AuthAPI {\n  static DEFAULT_STATE: AuthStateInterface;\n\n  private _authState = AuthAPI.DEFAULT_STATE;\n  private _client: AsgardeoSPAClient;\n\n  private _isLoading: boolean;\n\n  constructor(spaClient?: AsgardeoSPAClient) {\n    this._client = spaClient ?? AsgardeoSPAClient.getInstance();\n\n    this.getState = this.getState.bind(this);\n    this.init = this.init.bind(this);\n    this.signIn = this.signIn.bind(this);\n    this.signOut = this.signOut.bind(this);\n    this.updateState = this.updateState.bind(this);\n  }\n\n  public _setIsLoading(isLoading: boolean): void {\n    this._isLoading = isLoading;\n  }\n\n  public _getIsLoading(): boolean {\n    return this._isLoading;\n  }\n\n  public isLoading(): boolean {\n    return this._getIsLoading();\n  }\n\n  /**\n   * Method to return Auth Client instance authentication state.\n   *\n   * @return {AuthStateInterface} Authentication State.\n   */\n  public getState(): AuthStateInterface {\n    return this._authState;\n  }\n\n  /**\n   * Method to initialize the AuthClient instance.\n   *\n   * @param {Config} config - `dispatch` function from React Auth Context.\n   */\n  public async init(config: AuthClientConfig<Config>): Promise<boolean> {\n    return this._client.initialize(config);\n  }\n\n  /**\n   * Method to get the configuration data.\n   *\n   * @returns {Promise<AuthClientConfig<Config>>} - A promise that resolves with the configuration data.\n   */\n  public async getConfigData(): Promise<AuthClientConfig<Config>> {\n    return this._client.getConfigData();\n  }\n\n  /**\n   * Method to get the configuration data.\n   *\n   * @returns {Promise<AuthClientConfig<Config>>} - A promise that resolves with the configuration data.\n   */\n  public async isInitialized(): Promise<boolean> {\n    // Wait for initialization to complete\n    return this._client.isInitialized();\n  }\n\n  /**\n   * Method to handle user Sign In requests.\n   *\n   * @param {any} dispatch - `dispatch` function from React Auth Context.\n   * @param {AuthStateInterface} state - Current authentication state in React Auth Context.\n   * @param {any} callback - Action to trigger on successful sign in.\n   */\n  public async signIn(\n    // dispatch: (state: AuthStateInterface) => void,\n    // state: AuthStateInterface,\n    config: SignInConfig,\n    authorizationCode?: string,\n    sessionState?: string,\n    authState?: string,\n    callback?: (response: User) => void,\n    tokenRequestConfig?: {\n      params: Record<string, unknown>;\n    },\n  ): Promise<any> {\n    return this._client\n      .signIn(config, authorizationCode, sessionState, authState, tokenRequestConfig)\n      .then(async (response: User) => {\n        if (!response) {\n          return null; // FIXME: Validate this. Temp fix for: error TS7030: Not all code paths return a value.\n        }\n\n        if (await this._client.isSignedIn()) {\n          const stateToUpdate = {\n            displayName: response.displayName,\n            email: response.email,\n            isSignedIn: true,\n            isLoading: false,\n            isSigningOut: false,\n            username: response.username,\n          };\n\n          this.updateState(stateToUpdate);\n\n          // dispatch({...state, ...stateToUpdate});\n          this._setIsLoading(false);\n\n          if (callback) {\n            callback(response);\n          }\n        }\n\n        return response;\n      })\n      .catch(error => Promise.reject(error));\n  }\n\n  /**\n   * Method to handle user Sign Out requests.\n   *\n   * @param {any} dispatch - `dispatch` function from React Auth Context.\n   * @param {AuthStateInterface} state - Current authentication state in React Auth Context.\n   * @param {any} callback - Action to trigger on successful sign out.\n   */\n  public signOut(callback?: (response?: boolean) => void): Promise<boolean> {\n    return this._client\n      .signOut()\n      .then(response => {\n        if (callback) {\n          callback(response);\n        }\n\n        return response;\n      })\n      .catch(error => Promise.reject(error));\n  }\n\n  /**\n   * Method to update Auth Client instance authentication state.\n   *\n   * @param {AuthStateInterface} state - State values to update in authentication state.\n   */\n  public updateState(state: AuthStateInterface): void {\n    this._authState = {...this._authState, ...state};\n  }\n\n  /**\n   * This method returns a Promise that resolves with the basic user information obtained from the ID token.\n   *\n   * @return {Promise<User>} - A promise that resolves with the user information.\n   */\n  public async getUser(): Promise<User> {\n    return this._client.getUser();\n  }\n\n  /**\n   * This method sends an API request to a protected endpoint.\n   * The access token is automatically attached to the header of the request.\n   * This is the only way by which protected endpoints can be accessed\n   * when the web worker is used to store session information.\n   *\n   * @param {HttpRequestConfig} config -  The config object containing attributes necessary to send a request.\n   *\n   * @return {Promise<Response>} - Returns a Promise that resolves with the response to the request.\n   */\n  public async httpRequest(config: HttpRequestConfig): Promise<HttpResponse<any>> {\n    return this._client.httpRequest(config);\n  }\n\n  /**\n   * This method sends multiple API requests to a protected endpoint.\n   * The access token is automatically attached to the header of the request.\n   * This is the only way by which multiple requests can be sent to protected endpoints\n   * when the web worker is used to store session information.\n   *\n   * @param {HttpRequestConfig[]} config -  The config object containing attributes necessary to send a request.\n   *\n   * @return {Promise<Response>} - Returns a Promise that resolves with the responses to the requests.\n   */\n  public async httpRequestAll(configs: HttpRequestConfig[]): Promise<HttpResponse<any>[]> {\n    return this._client.httpRequestAll(configs);\n  }\n\n  /**\n   * This method allows you to send a request with a custom grant.\n   *\n   * @param {CustomGrantRequestParams} config - The request parameters.\n   *\n   * @return {Promise<Response | SignInResponse>} - A Promise that resolves with\n   * the value returned by the custom grant request.\n   */\n  public exchangeToken(\n    config: SPACustomGrantConfig,\n    callback: (response: User | Response) => void,\n    dispatch: (state: AuthStateInterface) => void,\n  ): Promise<User | Response> {\n    return this._client\n      .exchangeToken(config)\n      .then((response: User | Response) => {\n        if (!response) {\n          return null; // FIXME: Validate this. Temp fix for: error TS7030: Not all code paths return a value.\n        }\n\n        if (config.returnsSession) {\n          this.updateState({\n            ...this.getState(),\n            ...(response as User),\n            isSignedIn: true,\n            isLoading: false,\n          });\n\n          dispatch({...(response as User), isSignedIn: true, isLoading: false});\n        }\n\n        callback && callback(response);\n\n        return response;\n      })\n      .catch(error => Promise.reject(error));\n  }\n\n  /**\n   * This method ends a user session. The access token is revoked and the session information is destroyed.\n   *\n   * @return {Promise<boolean>} - A promise that resolves with `true` if the process is successful.\n   */\n  public async revokeAccessToken(dispatch: (state: AuthStateInterface) => void): Promise<boolean> {\n    return this._client\n      .revokeAccessToken()\n      .then(() => {\n        this.updateState({...AuthAPI.DEFAULT_STATE, isLoading: false});\n        dispatch(AuthAPI.DEFAULT_STATE);\n        return true;\n      })\n      .catch(error => Promise.reject(error));\n  }\n\n  /**\n   * This method returns a Promise that resolves with an object containing the service endpoints.\n   *\n   * @return {Promise<ServiceResourcesType} - A Promise that resolves with an object containing the service endpoints.\n   */\n  public async getOpenIDProviderEndpoints(): Promise<OIDCEndpoints> {\n    return this._client.getOpenIDProviderEndpoints();\n  }\n\n  /**\n   * This methods returns the Axios http client.\n   *\n   * @return {HttpClientInstance} - The Axios HTTP client.\n   */\n  public async getHttpClient(): Promise<HttpClientInstance> {\n    return this._client.getHttpClient();\n  }\n\n  /**\n   * This method decodes the payload of the id token and returns it.\n   *\n   * @return {Promise<DecodedIDTokenPayloadInterface>} - A Promise that resolves with\n   * the decoded payload of the id token.\n   */\n  public async getDecodedIdToken(sessionId?: string): Promise<IdToken> {\n    return this._client.getDecodedIdToken(sessionId);\n  }\n\n  /**\n   * This method decodes the payload of the idp id token and returns it.\n   *\n   * @return {Promise<DecodedIDTokenPayloadInterface>} - A Promise that resolves with\n   * the decoded payload of the idp id token.\n   */\n  public async getDecodedIDPIDToken(): Promise<IdToken> {\n    return this._client.getDecodedIdToken();\n  }\n\n  /**\n   * This method returns the ID token.\n   *\n   * @return {Promise<string>} - A Promise that resolves with the id token.\n   */\n  public async getIdToken(): Promise<string> {\n    return this._client.getIdToken();\n  }\n\n  /**\n   * This method return a Promise that resolves with the access token.\n   *\n   * **This method will not return the access token if the storage type is set to `webWorker`.**\n   *\n   * @return {Promise<string>} - A Promise that resolves with the access token.\n   */\n  public async getAccessToken(): Promise<string> {\n    return this._client.getAccessToken();\n  }\n\n  /**\n   * This method return a Promise that resolves with the idp access token.\n   *\n   * **This method will not return the idp access token if the storage type is set to `webWorker`.**\n   * **This can be used to access the IDP access token when custom auth grant functionalities are used**\n   *\n   * @return {Promise<string>} - A Promise that resolves with the idp access token.\n   */\n  public async getIDPAccessToken(): Promise<string> {\n    return this._client.getIDPAccessToken();\n  }\n\n  /**\n   * This method refreshes the access token.\n   *\n   * @return {TokenResponseInterface} - A Promise that resolves with an object containing\n   * information about the refreshed access token.\n   */\n  public async refreshAccessToken(): Promise<User> {\n    return this._client.refreshAccessToken();\n  }\n\n  /**\n   * This method specifies if the user is authenticated or not.\n   *\n   * @return {Promise<boolean>} - A Promise that resolves with `true` if teh user is authenticated.\n   */\n  public async isSignedIn(): Promise<boolean> {\n    return this._client.isSignedIn();\n  }\n\n  /**\n   * This method specifies if the session is active or not.\n   *\n   * @return {Promise<boolean>} - A Promise that resolves with `true` if there is an active session.\n   */\n  public async isSessionActive(): Promise<boolean> {\n    return this._client.isSessionActive();\n  }\n\n  /**\n   * This method enables callback functions attached to the http client.\n   *\n   * @return {Promise<boolean>} - A promise that resolves with True.\n   *\n   */\n  public async enableHttpHandler(): Promise<boolean> {\n    return this._client.enableHttpHandler();\n  }\n\n  /**\n   * This method disables callback functions attached to the http client.\n   *\n   * @return {Promise<boolean>} - A promise that resolves with True.\n   */\n  public async disableHttpHandler(): Promise<boolean> {\n    return this._client.disableHttpHandler();\n  }\n\n  /**\n   * This method updates the configuration that was passed into the constructor when instantiating this class.\n   *\n   * @param {Partial<AuthClientConfig<T>>} config - A config object to update the SDK configurations with.\n   */\n  public async reInitialize(config: Partial<AuthClientConfig<Config>>): Promise<void> {\n    return this._client.reInitialize(config);\n  }\n\n  /**\n   * This method attaches a callback function to an event hook that fires the callback when the event happens.\n   *\n   * @param {Hooks.CustomGrant} hook - The name of the hook.\n   * @param {(response?: any) => void} callback - The callback function.\n   * @param {string} id (optional) - The id of the hook. This is used when multiple custom grants are used.\n   *\n   */\n  public on(hook: Hooks.CustomGrant, callback: (response?: any) => void, id: string): Promise<void>;\n  public on(hook: Exclude<Hooks, Hooks.CustomGrant>, callback: (response?: any) => void): Promise<void>;\n  public on(hook: Hooks, callback: (response?: any) => void, id?: string): Promise<void> {\n    if (hook === Hooks.CustomGrant) {\n      return this._client.on(hook, callback, id);\n    }\n\n    return this._client.on(hook, callback);\n  }\n\n  /**\n   * This method allows you to sign in silently.\n   * First, this method sends a prompt none request to see if there is an active user session in the identity server.\n   * If there is one, then it requests the access token and stores it. Else, it returns false.\n   *\n   * @return {Promise<User | boolean>} - A Promise that resolves with the user information after signing in\n   * or with `false` if the user is not signed in.\n   *\n   * @example\n   *```\n   * client.trySignInSilently()\n   *```\n   */\n  public async trySignInSilently(\n    state: AuthStateInterface,\n    dispatch: (state: AuthStateInterface) => void,\n    additionalParams?: Record<string, string | boolean>,\n    tokenRequestConfig?: {params: Record<string, unknown>},\n  ): Promise<User | boolean | undefined> {\n    return this._client\n      .trySignInSilently(additionalParams, tokenRequestConfig)\n      .then(async (response: User | boolean) => {\n        if (!response) {\n          this.updateState({...this.getState(), isLoading: false});\n          dispatch({...state, isLoading: false});\n\n          return false;\n        }\n\n        if (await this._client.isSignedIn()) {\n          const basicUserInfo = response as User;\n          const stateToUpdate = {\n            displayName: basicUserInfo.displayName,\n            email: basicUserInfo.email,\n            isSignedIn: true,\n            isLoading: false,\n            isSigningOut: false,\n            username: basicUserInfo.username,\n          };\n\n          this.updateState(stateToUpdate);\n\n          dispatch({...state, ...stateToUpdate});\n        }\n\n        return response;\n      })\n      .catch(error => Promise.reject(error));\n  }\n}\n\nAuthAPI.DEFAULT_STATE = {\n  displayName: '',\n  email: '',\n  isSignedIn: false,\n  isLoading: true,\n  username: '',\n};\n\nexport default AuthAPI;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  Organization,\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  getMeOrganizations as baseGetMeOrganizations,\n  GetMeOrganizationsConfig as BaseGetMeOrganizationsConfig,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the getMeOrganizations request (React-specific)\n */\nexport interface GetMeOrganizationsConfig extends Omit<BaseGetMeOrganizationsConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Retrieves the organizations associated with the current user.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Configuration object containing baseUrl, optional query parameters, and request config.\n * @returns A promise that resolves with the organizations information.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * try {\n *   const organizations = await getMeOrganizations({\n *     baseUrl: \"https://api.asgardeo.io/t/<ORGANIZATION>\",\n *     after: \"\",\n *     before: \"\",\n *     filter: \"\",\n *     limit: 10,\n *     recursive: false\n *   });\n *   console.log(organizations);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get organizations:', error.message);\n *   }\n * }\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * try {\n *   const organizations = await getMeOrganizations({\n *     baseUrl: \"https://api.asgardeo.io/t/<ORGANIZATION>\",\n *     after: \"\",\n *     before: \"\",\n *     filter: \"\",\n *     limit: 10,\n *     recursive: false,\n *     fetcher: customFetchFunction\n *   });\n *   console.log(organizations);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get organizations:', error.message);\n *   }\n * }\n * ```\n */\nconst getMeOrganizations = async ({fetcher, ...requestConfig}: GetMeOrganizationsConfig): Promise<Organization[]> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'GET',\n      headers: config.headers as Record<string, string>,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseGetMeOrganizations({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default getMeOrganizations;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  User,\n  AsgardeoAPIError,\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  getScim2Me as baseGetScim2Me,\n  GetScim2MeConfig as BaseGetScim2MeConfig\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the getScim2Me request (React-specific)\n */\nexport interface GetScim2MeConfig extends Omit<BaseGetScim2MeConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Retrieves the user profile information from the specified SCIM2 /Me endpoint.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param requestConfig - Request configuration object.\n * @returns A promise that resolves with the user profile information.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * try {\n *   const userProfile = await getScim2Me({\n *     url: \"https://api.asgardeo.io/t/<ORGANIZATION>/scim2/Me\",\n *   });\n *   console.log(userProfile);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get user profile:', error.message);\n *   }\n * }\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * try {\n *   const userProfile = await getScim2Me({\n *     url: \"https://api.asgardeo.io/t/<ORGANIZATION>/scim2/Me\",\n *     fetcher: customFetchFunction\n *   });\n *   console.log(userProfile);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get user profile:', error.message);\n *   }\n * }\n * ```\n */\nconst getScim2Me = async ({fetcher, ...requestConfig}: GetScim2MeConfig): Promise<User> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'GET',\n      headers: config.headers as Record<string, string>,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseGetScim2Me({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default getScim2Me;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  Schema,\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  getSchemas as baseGetSchemas,\n  GetSchemasConfig as BaseGetSchemasConfig,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the getSchemas request (React-specific)\n */\nexport interface GetSchemasConfig extends Omit<BaseGetSchemasConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Retrieves the SCIM2 schemas from the specified endpoint.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Request configuration object.\n * @returns A promise that resolves with the SCIM2 schemas information.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * try {\n *   const schemas = await getSchemas({\n *     url: \"https://api.asgardeo.io/t/<ORGANIZATION>/scim2/Schemas\",\n *   });\n *   console.log(schemas);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get schemas:', error.message);\n *   }\n * }\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * try {\n *   const schemas = await getSchemas({\n *     url: \"https://api.asgardeo.io/t/<ORGANIZATION>/scim2/Schemas\",\n *     fetcher: customFetchFunction\n *   });\n *   console.log(schemas);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get schemas:', error.message);\n *   }\n * }\n * ```\n */\nconst getSchemas = async ({fetcher, ...requestConfig}: GetSchemasConfig): Promise<Schema[]> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'GET',\n      headers: config.headers as Record<string, string>,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseGetSchemas({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default getSchemas;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  getAllOrganizations as baseGetAllOrganizations,\n  GetAllOrganizationsConfig as BaseGetAllOrganizationsConfig,\n  AllOrganizationsApiResponse,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the getAllOrganizations request (React-specific)\n */\nexport interface GetAllOrganizationsConfig extends Omit<BaseGetAllOrganizationsConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Retrieves all organizations with pagination support.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Configuration object containing baseUrl, optional query parameters, and request config.\n * @returns A promise that resolves with the paginated organizations information.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * try {\n *   const response = await getAllOrganizations({\n *     baseUrl: \"https://api.asgardeo.io/t/<ORGANIZATION>\",\n *     filter: \"\",\n *     limit: 10,\n *     recursive: false\n *   });\n *   console.log(response.organizations);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get organizations:', error.message);\n *   }\n * }\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * try {\n *   const response = await getAllOrganizations({\n *     baseUrl: \"https://api.asgardeo.io/t/<ORGANIZATION>\",\n *     filter: \"\",\n *     limit: 10,\n *     recursive: false,\n *     fetcher: customFetchFunction\n *   });\n *   console.log(response.organizations);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get organizations:', error.message);\n *   }\n * }\n * ```\n */\nconst getAllOrganizations = async ({\n  fetcher,\n  ...requestConfig\n}: GetAllOrganizationsConfig): Promise<AllOrganizationsApiResponse> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'GET',\n      headers: config.headers as Record<string, string>,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseGetAllOrganizations({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default getAllOrganizations;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {hasAuthParamsInUrl} from '@asgardeo/browser';\n\n/**\n * Interface for the useBrowserUrl hook return value.\n */\nexport interface UseBrowserUrl {\n  /**\n   * Checks if the current URL contains authentication parameters.\n   *\n   * @param url - The URL object to check for authentication parameters\n   * @param afterSignInUrl - The URL where the authorization server should redirect after authentication\n   * @returns True if the URL contains authentication parameters and matches the afterSignInUrl, or if it contains an error parameter\n   */\n  hasAuthParams: (url: URL, afterSignInUrl: string) => boolean;\n}\n\n/**\n * Hook that provides utilities for handling browser URLs in authentication flows.\n *\n * @returns An object containing URL utility functions\n *\n * @example\n * ```tsx\n * const { hasAuthParams } = useBrowserUrl();\n * const url = new URL(window.location.href);\n *\n * if (hasAuthParams(url, \"/after-signin\")) {\n *   // Handle authentication callback\n * }\n * ```\n */\nconst useBrowserUrl = (): UseBrowserUrl => {\n  const hasAuthParams = (url: URL, afterSignInUrl: string): boolean =>\n    (hasAuthParamsInUrl() && new URL(url.origin + url.pathname).toString() === new URL(afterSignInUrl).toString()) ||\n    // authParams?.authorizationCode || // FIXME: These are sent externally. Need to see what we can do about this.\n    url.searchParams.get('error') !== null;\n\n  return {hasAuthParams};\n};\n\nexport default useBrowserUrl;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactElement, useCallback, useMemo, useState} from 'react';\nimport FlowContext, {FlowContextValue, FlowMessage, FlowStep} from './FlowContext';\n\n/**\n * Props for the FlowProvider component.\n */\nexport interface FlowProviderProps {\n  /**\n   * Initial step to start with.\n   */\n  initialStep?: FlowStep;\n\n  /**\n   * Initial title.\n   */\n  initialTitle?: string;\n\n  /**\n   * Initial subtitle.\n   */\n  initialSubtitle?: string;\n\n  /**\n   * Callback when flow type changes.\n   */\n  onFlowChange?: (step: FlowStep) => void;\n}\n\n/**\n * Provider component for flow context.\n * Manages shared UI state for authentication flows including titles, messages, and navigation.\n */\nconst FlowProvider: FC<PropsWithChildren<FlowProviderProps>> = ({\n  children,\n  initialStep = null,\n  initialTitle = '',\n  initialSubtitle,\n  onFlowChange,\n}: PropsWithChildren<FlowProviderProps>): ReactElement => {\n  const [currentStep, setCurrentStepState] = useState<FlowStep>(initialStep);\n  const [title, setTitle] = useState<string>(initialTitle);\n  const [subtitle, setSubtitle] = useState<string | undefined>(initialSubtitle);\n  const [messages, setMessages] = useState<FlowMessage[]>([]);\n  const [error, setError] = useState<string | null>(null);\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [showBackButton, setShowBackButton] = useState<boolean>(false);\n  const [onGoBack, setOnGoBack] = useState<(() => void) | undefined>(undefined);\n\n  /**\n   * Set the current flow step and notify listeners.\n   */\n  const setCurrentStep = useCallback(\n    (step: FlowStep) => {\n      setCurrentStepState(step);\n      if (step) {\n        setTitle(step.title);\n        setSubtitle(step.subtitle);\n        setShowBackButton(step.canGoBack ?? false);\n      }\n      onFlowChange?.(step);\n    },\n    [onFlowChange],\n  );\n\n  /**\n   * Add a message to the message list.\n   */\n  const addMessage = useCallback((message: FlowMessage) => {\n    const messageWithId = {\n      ...message,\n      id: message.id ?? `msg-${Date.now()}-${Math.random().toString(36).substr(2, 9)}`,\n    };\n\n    setMessages(prev => [...prev, messageWithId]);\n  }, []);\n\n  /**\n   * Remove a specific message by ID.\n   */\n  const removeMessage = useCallback((messageId: string) => {\n    setMessages(prev => prev.filter(msg => msg.id !== messageId));\n  }, []);\n\n  /**\n   * Clear all messages.\n   */\n  const clearMessages = useCallback(() => {\n    setMessages([]);\n  }, []);\n\n  /**\n   * Reset the flow context to initial state.\n   */\n  const reset = useCallback(() => {\n    setCurrentStepState(initialStep);\n    setTitle(initialTitle);\n    setSubtitle(initialSubtitle);\n    setMessages([]);\n    setError(null);\n    setIsLoading(false);\n    setShowBackButton(false);\n    setOnGoBack(undefined);\n  }, [initialStep, initialTitle, initialSubtitle]);\n\n  /**\n   * Navigate to a different authentication flow.\n   */\n  const navigateToFlow = useCallback(\n    (\n      flowType: NonNullable<FlowStep>['type'],\n      options?: {\n        title?: string;\n        subtitle?: string;\n        metadata?: Record<string, any>;\n      },\n    ) => {\n      const stepId = `${flowType}-${Date.now()}`;\n      const step: NonNullable<FlowStep> = {\n        id: stepId,\n        type: flowType,\n        title: options?.title,\n        subtitle: options?.subtitle,\n        canGoBack: flowType !== 'signin', // Usually allow going back except for main signin\n        metadata: options?.metadata,\n      };\n\n      setCurrentStep(step);\n      clearMessages();\n      setError(null);\n    },\n    [setCurrentStep, clearMessages],\n  );\n\n  const contextValue: FlowContextValue = useMemo(\n    () => ({\n      currentStep,\n      setCurrentStep,\n      title,\n      setTitle,\n      subtitle,\n      setSubtitle,\n      messages,\n      addMessage,\n      removeMessage,\n      clearMessages,\n      error,\n      setError,\n      isLoading,\n      setIsLoading,\n      showBackButton,\n      setShowBackButton,\n      onGoBack,\n      setOnGoBack,\n      reset,\n      navigateToFlow,\n    }),\n    [\n      currentStep,\n      setCurrentStep,\n      title,\n      subtitle,\n      messages,\n      addMessage,\n      removeMessage,\n      clearMessages,\n      error,\n      isLoading,\n      showBackButton,\n      onGoBack,\n      reset,\n      navigateToFlow,\n    ],\n  );\n\n  return <FlowContext.Provider value={contextValue}>{children}</FlowContext.Provider>;\n};\n\nexport default FlowProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {createContext} from 'react';\n\n/**\n * Types of authentication flows/steps that can be displayed.\n */\nexport type FlowStep = {\n  id: string;\n  type: 'signin' | 'signup' | 'organization-signin' | 'forgot-password' | 'reset-password' | 'verify-email' | 'mfa';\n  title: string;\n  subtitle?: string;\n  canGoBack?: boolean;\n  metadata?: Record<string, any>;\n} | null;\n\n/**\n * Message types for displaying in authentication flows.\n */\nexport interface FlowMessage {\n  id?: string;\n  type: 'success' | 'error' | 'warning' | 'info';\n  message: string;\n  dismissible?: boolean;\n}\n\n/**\n * Context value for managing authentication flow UI state.\n */\nexport interface FlowContextValue {\n  // Current step/flow\n  currentStep: FlowStep;\n  setCurrentStep: (step: FlowStep) => void;\n\n  // Title and subtitle\n  title: string;\n  setTitle: (title: string) => void;\n  subtitle?: string;\n  setSubtitle: (subtitle?: string) => void;\n\n  // Messages\n  messages: FlowMessage[];\n  addMessage: (message: FlowMessage) => void;\n  removeMessage: (messageId: string) => void;\n  clearMessages: () => void;\n\n  // Error state\n  error: string | null;\n  setError: (error: string | null) => void;\n\n  // Loading state\n  isLoading: boolean;\n  setIsLoading: (loading: boolean) => void;\n\n  // Navigation\n  showBackButton: boolean;\n  setShowBackButton: (show: boolean) => void;\n  onGoBack?: () => void;\n  setOnGoBack: (callback?: () => void) => void;\n\n  // Utilities\n  reset: () => void;\n  navigateToFlow: (\n    flowType: NonNullable<FlowStep>['type'],\n    options?: {\n      title?: string;\n      subtitle?: string;\n      metadata?: Record<string, any>;\n    },\n  ) => void;\n}\n\n/**\n * Context for managing authentication flow UI state.\n * This context handles titles, messages, navigation, and loading states\n * for authentication flows like SignIn, SignUp, organization signin, etc.\n */\nconst FlowContext = createContext<FlowContextValue | undefined>(undefined);\n\nFlowContext.displayName = 'FlowContext';\n\nexport default FlowContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactElement, useCallback, useEffect, useMemo, useState} from 'react';\nimport {I18nBundle, I18nPreferences, deepMerge} from '@asgardeo/browser';\nimport {getI18nBundles} from '@asgardeo/browser';\nimport I18nContext, {I18nContextValue} from './I18nContext';\n\nconst I18N_LANGUAGE_STORAGE_KEY = 'asgardeo-i18n-language';\n\nexport interface I18nProviderProps {\n  /**\n   * The i18n preferences from the AsgardeoProvider\n   */\n  preferences?: I18nPreferences;\n}\n\n/**\n * Detects the browser's default language or returns a fallback\n */\nconst detectBrowserLanguage = (): string => {\n  if (typeof window !== 'undefined' && window.navigator) {\n    return window.navigator.language || 'en-US';\n  }\n  return 'en-US';\n};\n\n/**\n * Gets the stored language from localStorage or returns null\n */\nconst getStoredLanguage = (): string | null => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    try {\n      return window.localStorage.getItem(I18N_LANGUAGE_STORAGE_KEY);\n    } catch (error) {\n      // localStorage might not be available or accessible\n      return null;\n    }\n  }\n  return null;\n};\n\n/**\n * Stores the language in localStorage\n */\nconst storeLanguage = (language: string): void => {\n  if (typeof window !== 'undefined' && window.localStorage) {\n    try {\n      window.localStorage.setItem(I18N_LANGUAGE_STORAGE_KEY, language);\n    } catch (error) {\n      // localStorage might not be available or accessible\n      console.warn('Failed to store language preference:', error);\n    }\n  }\n};\n\n/**\n * I18nProvider component that manages internationalization state and provides\n * translation functions to child components.\n */\nconst I18nProvider: FC<PropsWithChildren<I18nProviderProps>> = ({\n  children,\n  preferences,\n}: PropsWithChildren<I18nProviderProps>): ReactElement => {\n  // Get default bundles from the browser package\n  const defaultBundles = getI18nBundles();\n\n  // Determine the initial language based on preference order:\n  // 1. User preference from config\n  // 2. Stored language in localStorage\n  // 3. Browser's default language\n  // 4. Fallback language\n  const determineInitialLanguage = (): string => {\n    const configLanguage = preferences?.language;\n    const storedLanguage = getStoredLanguage();\n    const browserLanguage = detectBrowserLanguage();\n    const fallbackLanguage = preferences?.fallbackLanguage || 'en-US';\n\n    return configLanguage || storedLanguage || browserLanguage || fallbackLanguage;\n  };\n\n  const [currentLanguage, setCurrentLanguage] = useState<string>(determineInitialLanguage);\n\n  // Merge default bundles with user-provided bundles\n  const mergedBundles = useMemo(() => {\n    const merged: Record<string, I18nBundle> = {};\n\n    // Add default bundles\n    Object.entries(defaultBundles).forEach(([key, bundle]) => {\n      // Convert key format (e.g., 'en_US' to 'en-US')\n      const languageKey = key.replace('_', '-');\n      merged[languageKey] = bundle;\n    });\n\n    // Add user-provided bundles using deepMerge for better merging\n    if (preferences?.bundles) {\n      Object.entries(preferences.bundles).forEach(([key, userBundle]) => {\n        if (merged[key]) {\n          // Deep merge user bundle with existing default bundle\n          merged[key] = {\n            ...merged[key],\n            translations: deepMerge(merged[key].translations, userBundle.translations),\n            metadata: userBundle.metadata ? {...merged[key].metadata, ...userBundle.metadata} : merged[key].metadata,\n          };\n        } else {\n          // No default bundle for this language, use user bundle as-is\n          merged[key] = userBundle;\n        }\n      });\n    }\n\n    return merged;\n  }, [defaultBundles, preferences?.bundles]);\n\n  const fallbackLanguage = preferences?.fallbackLanguage || 'en-US';\n\n  // Update stored language when current language changes\n  useEffect(() => {\n    storeLanguage(currentLanguage);\n  }, [currentLanguage]);\n\n  // Translation function\n  const t = useCallback(\n    (key: string, params?: Record<string, string | number>): string => {\n      let translation: string | undefined;\n\n      // Try to get translation from current language bundle\n      const currentBundle = mergedBundles[currentLanguage];\n      if (currentBundle?.translations[key]) {\n        translation = currentBundle.translations[key];\n      }\n\n      // Fallback to fallback language if translation not found\n      if (!translation && currentLanguage !== fallbackLanguage) {\n        const fallbackBundle = mergedBundles[fallbackLanguage];\n        if (fallbackBundle?.translations[key]) {\n          translation = fallbackBundle.translations[key];\n        }\n      }\n\n      // If still no translation found, return the key itself\n      if (!translation) {\n        translation = key;\n      }\n\n      // Replace parameters if provided\n      if (params && Object.keys(params).length > 0) {\n        return Object.entries(params).reduce((acc, [paramKey, paramValue]) => {\n          return acc.replace(new RegExp(`\\\\{${paramKey}\\\\}`, 'g'), String(paramValue));\n        }, translation);\n      }\n\n      return translation;\n    },\n    [mergedBundles, currentLanguage, fallbackLanguage],\n  );\n\n  // Language setter function\n  const setLanguage = useCallback(\n    (language: string) => {\n      if (mergedBundles[language]) {\n        setCurrentLanguage(language);\n      } else {\n        console.warn(\n          `Language '${language}' is not available. Available languages: ${Object.keys(mergedBundles).join(', ')}`,\n        );\n      }\n    },\n    [mergedBundles],\n  );\n\n  const contextValue: I18nContextValue = useMemo(\n    () => ({\n      currentLanguage,\n      fallbackLanguage,\n      bundles: mergedBundles,\n      setLanguage,\n      t,\n    }),\n    [currentLanguage, fallbackLanguage, mergedBundles, setLanguage, t],\n  );\n\n  return <I18nContext.Provider value={contextValue}>{children}</I18nContext.Provider>;\n};\n\nexport default I18nProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {createContext} from 'react';\nimport {I18nBundle} from '@asgardeo/browser';\n\nexport interface I18nContextValue {\n  /**\n   * The current language code (e.g., 'en-US', 'fr-FR')\n   */\n  currentLanguage: string;\n  \n  /**\n   * The fallback language code\n   */\n  fallbackLanguage: string;\n  \n  /**\n   * All available i18n bundles (default + user provided)\n   */\n  bundles: Record<string, I18nBundle>;\n  \n  /**\n   * Function to change the current language\n   */\n  setLanguage: (language: string) => void;\n  \n  /**\n   * Function to get a translation by key with optional parameters\n   */\n  t: (key: string, params?: Record<string, string | number>) => string;\n}\n\nconst I18nContext = createContext<I18nContextValue | null>(null);\n\nI18nContext.displayName = 'I18nContext';\n\nexport default I18nContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  AsgardeoRuntimeError,\n  Organization,\n  AllOrganizationsApiResponse,\n  CreateOrganizationPayload,\n} from '@asgardeo/browser';\nimport {FC, PropsWithChildren, ReactElement, useCallback, useMemo, useState} from 'react';\nimport OrganizationContext, {OrganizationContextProps} from './OrganizationContext';\n\n/**\n * Props interface of {@link OrganizationProvider}\n */\nexport interface OrganizationProviderProps {\n  /**\n   * Whether to automatically fetch organizations on mount\n   */\n  autoFetch?: boolean;\n  /**\n   * Function to create a new organization.\n   */\n  createOrganization?: (payload: CreateOrganizationPayload, sessionId: string) => Promise<Organization>;\n  /**\n   * Initial current organization\n   */\n  currentOrganization?: Organization | null;\n  /**\n   * Initial list of organizations\n   */\n  getAllOrganizations?: () => Promise<AllOrganizationsApiResponse>;\n  /**\n   * List of organizations the signed-in user belongs to.\n   */\n  myOrganizations?: Organization[];\n  /**\n   * Callback function called when an error occurs\n   */\n  onError?: (error: string) => void;\n  /**\n   * Callback function called when switching organizations\n   */\n  onOrganizationSwitch?: (organization: Organization) => Promise<void>;\n  /**\n   * Refetch the my organizations list.\n   * @returns\n   */\n  revalidateMyOrganizations: () => Promise<Organization[]>;\n}\n\n/**\n * OrganizationProvider component that manages organization data and provides it through OrganizationContext.\n *\n * This provider:\n * - Fetches organization data from the organizations endpoint\n * - Manages current organization state\n * - Provides functions for switching organizations and refreshing data\n * - Handles loading states and errors\n *\n * @example\n * ```tsx\n * // Basic usage with auto-fetch (uses internal API)\n * <OrganizationProvider>\n *   <App />\n * </OrganizationProvider>\n *\n * // With custom error handling\n * <OrganizationProvider onError={(error) => console.error('Organization error:', error)}>\n *   <App />\n * </OrganizationProvider>\n *\n * // With custom organization switch handler\n * <OrganizationProvider\n *   onOrganizationSwitch={(org) => console.log('Switched to:', org.name)}\n * >\n *   <App />\n * </OrganizationProvider>\n *\n * // Disable auto-fetch (fetch manually using revalidateMyOrganizations)\n * <OrganizationProvider autoFetch={false}>\n *   <App />\n * </OrganizationProvider>\n * ```\n */\nconst OrganizationProvider: FC<PropsWithChildren<OrganizationProviderProps>> = ({\n  children,\n  currentOrganization,\n  onError,\n  myOrganizations,\n  onOrganizationSwitch,\n  revalidateMyOrganizations,\n  getAllOrganizations,\n  createOrganization,\n}: PropsWithChildren<OrganizationProviderProps>): ReactElement => {\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [error, setError] = useState<string | null>(null);\n\n  /**\n   * Switches to a different organization\n   */\n  const switchOrganization: (organization: Organization) => Promise<void> = useCallback(\n    async (organization: Organization): Promise<void> => {\n      if (!onOrganizationSwitch) {\n        throw new AsgardeoRuntimeError(\n          'onOrganizationSwitch callback is required',\n          'OrganizationProvider-SwitchError-001',\n          'react',\n          'The onOrganizationSwitch callback must be provided to handle organization switching.',\n        );\n      }\n\n      setIsLoading(true);\n      setError(null);\n\n      try {\n        await onOrganizationSwitch(organization);\n        // The organization state will be updated by the parent provider\n      } catch (switchError) {\n        const errorMessage: string =\n          switchError instanceof Error ? switchError.message : 'Failed to switch organization';\n        setError(errorMessage);\n        if (onError) {\n          onError(errorMessage);\n        }\n        throw switchError; // Re-throw so the UI can handle it\n      } finally {\n        setIsLoading(false);\n      }\n    },\n    [onOrganizationSwitch, onError],\n  );\n\n  const contextValue: OrganizationContextProps = useMemo(\n    () => ({\n      createOrganization,\n      currentOrganization,\n      error,\n      getAllOrganizations,\n      isLoading,\n      myOrganizations,\n      revalidateMyOrganizations,\n      switchOrganization,\n    }),\n    [\n      currentOrganization,\n      error,\n      isLoading,\n      myOrganizations,\n      switchOrganization,\n      revalidateMyOrganizations,\n      getAllOrganizations,\n      createOrganization,\n    ],\n  );\n\n  return <OrganizationContext.Provider value={contextValue}>{children}</OrganizationContext.Provider>;\n};\n\nexport default OrganizationProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AllOrganizationsApiResponse, Organization, CreateOrganizationPayload} from '@asgardeo/browser';\nimport {Context, createContext} from 'react';\n\n/**\n * Props interface of {@link OrganizationContext}\n */\nexport type OrganizationContextProps = {\n  /**\n   * Function to create a new organization.\n   */\n  createOrganization?: (payload: CreateOrganizationPayload, sessionId: string) => Promise<Organization>;\n  currentOrganization: Organization | null;\n  error: string | null;\n  getAllOrganizations: () => Promise<AllOrganizationsApiResponse>;\n  isLoading: boolean;\n  myOrganizations: Organization[];\n  revalidateMyOrganizations: () => Promise<Organization[]>;\n  switchOrganization: (organization: Organization) => Promise<void>;\n};\n\n/**\n * Context object for managing organization data and related operations.\n */\nconst OrganizationContext: Context<OrganizationContextProps | null> = createContext<null | OrganizationContextProps>({\n  createOrganization: () => null,\n  currentOrganization: null,\n  error: null,\n  getAllOrganizations: () =>\n    Promise.resolve({\n      count: 0,\n      organizations: [],\n    }),\n  isLoading: false,\n  myOrganizations: null,\n  revalidateMyOrganizations: () => Promise.resolve([]),\n  switchOrganization: () => Promise.resolve(),\n});\n\nOrganizationContext.displayName = 'OrganizationContext';\n\nexport default OrganizationContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactElement, useEffect, useMemo, useState, useCallback} from 'react';\nimport {\n  createTheme,\n  Theme,\n  ThemeConfig,\n  ThemeMode,\n  RecursivePartial,\n  detectThemeMode,\n  createClassObserver,\n  createMediaQueryListener,\n  BrowserThemeDetection,\n  ThemePreferences,\n} from '@asgardeo/browser';\nimport ThemeContext from './ThemeContext';\nimport useBrandingContext from '../Branding/useBrandingContext';\n\nexport interface ThemeProviderProps {\n  theme?: RecursivePartial<ThemeConfig>;\n  /**\n   * The theme mode to use for automatic detection\n   * - 'light': Always use light theme\n   * - 'dark': Always use dark theme\n   * - 'system': Use system preference (prefers-color-scheme media query)\n   * - 'class': Detect theme based on CSS classes on HTML element\n   * - 'branding': Use active theme from branding preference (requires inheritFromBranding=true)\n   */\n  mode?: ThemeMode | 'branding';\n  /**\n   * Configuration for theme detection when using 'class' or 'system' mode\n   */\n  detection?: BrowserThemeDetection;\n  /**\n   * Configuration for branding integration\n   */\n  inheritFromBranding?: ThemePreferences['inheritFromBranding'];\n}\n\nconst applyThemeToDOM = (theme: Theme) => {\n  Object.entries(theme.cssVariables).forEach(([key, value]) => {\n    document.documentElement.style.setProperty(key, value);\n  });\n};\n\n/**\n * ThemeProvider component that manages theme state and provides theme context to child components.\n *\n * This provider integrates with Asgardeo branding preferences to automatically apply\n * organization-specific themes while allowing for custom theme overrides.\n *\n * Features:\n * - Automatic theme mode detection (light/dark/system/class)\n * - Integration with Asgardeo branding API through useBranding hook\n * - Merging of branding themes with custom theme configurations\n * - CSS variable injection for easy styling\n * - Loading and error states for branding integration\n *\n * @example\n * Basic usage with branding integration:\n * ```tsx\n * <ThemeProvider inheritFromBranding={true}>\n *   <App />\n * </ThemeProvider>\n * ```\n *\n * @example\n * With custom theme overrides:\n * ```tsx\n * <ThemeProvider\n *   theme={{\n *     colors: {\n *       primary: { main: '#custom-color' }\n *     }\n *   }}\n *   inheritFromBranding={true}\n * >\n *   <App />\n * </ThemeProvider>\n * ```\n *\n * @example\n * With branding-driven theme mode:\n * ```tsx\n * <ThemeProvider\n *   mode=\"branding\"\n *   inheritFromBranding={true}\n * >\n *   <App />\n * </ThemeProvider>\n * ```\n */\nconst ThemeProvider: FC<PropsWithChildren<ThemeProviderProps>> = ({\n  children,\n  theme: themeConfig,\n  mode = 'system',\n  detection = {},\n  inheritFromBranding = true,\n}: PropsWithChildren<ThemeProviderProps>): ReactElement => {\n  const [colorScheme, setColorScheme] = useState<'light' | 'dark'>(() => {\n    // Initialize with detected theme mode or fallback to defaultMode\n    if (mode === 'light' || mode === 'dark') {\n      return mode;\n    }\n    // For 'branding' mode, start with system preference and update when branding loads\n    if (mode === 'branding') {\n      return detectThemeMode('system', detection);\n    }\n    return detectThemeMode(mode, detection);\n  });\n\n  // Use branding theme if inheritFromBranding is enabled\n  // Handle case where BrandingProvider might not be available\n  let brandingTheme = null;\n  let brandingActiveTheme = null;\n  let isBrandingLoading = false;\n  let brandingError = null;\n\n  try {\n    const brandingContext = useBrandingContext();\n    brandingTheme = brandingContext.theme;\n    brandingActiveTheme = brandingContext.activeTheme;\n    isBrandingLoading = brandingContext.isLoading;\n    brandingError = brandingContext.error;\n  } catch (error) {\n    // BrandingProvider not available, fall back to no branding\n    if (inheritFromBranding) {\n      console.warn(\n        'ThemeProvider: inheritFromBranding is enabled but BrandingProvider is not available. ' +\n          'Make sure to wrap your app with BrandingProvider or AsgardeoProvider with branding preferences.',\n      );\n    }\n  }\n\n  // Update color scheme based on branding active theme when available\n  useEffect(() => {\n    if (inheritFromBranding && brandingActiveTheme) {\n      // Update color scheme based on mode preference\n      if (mode === 'branding') {\n        // Always follow branding active theme\n        setColorScheme(brandingActiveTheme);\n      } else if (mode === 'system' && !isBrandingLoading) {\n        // For system mode, prefer branding but allow system override if no branding\n        setColorScheme(brandingActiveTheme);\n      }\n    }\n  }, [inheritFromBranding, brandingActiveTheme, mode, isBrandingLoading]);\n\n  // Merge user-provided theme config with branding theme\n  const finalThemeConfig = useMemo(() => {\n    if (!inheritFromBranding || !brandingTheme) {\n      return themeConfig;\n    }\n\n    // Convert branding theme to our theme config format\n    const brandingThemeConfig: RecursivePartial<ThemeConfig> = {\n      colors: brandingTheme.colors,\n      borderRadius: brandingTheme.borderRadius,\n      shadows: brandingTheme.shadows,\n      spacing: brandingTheme.spacing,\n      images: brandingTheme.images,\n    };\n\n    // Merge branding theme with user-provided theme config\n    // User-provided config takes precedence over branding\n    return {\n      ...brandingThemeConfig,\n      ...themeConfig,\n      colors: {\n        ...brandingThemeConfig.colors,\n        ...themeConfig?.colors,\n      },\n      borderRadius: {\n        ...brandingThemeConfig.borderRadius,\n        ...themeConfig?.borderRadius,\n      },\n      shadows: {\n        ...brandingThemeConfig.shadows,\n        ...themeConfig?.shadows,\n      },\n      spacing: {\n        ...brandingThemeConfig.spacing,\n        ...themeConfig?.spacing,\n      },\n      images: {\n        ...brandingThemeConfig.images,\n        ...themeConfig?.images,\n      },\n    };\n  }, [inheritFromBranding, brandingTheme, themeConfig]);\n\n  const theme = useMemo(() => createTheme(finalThemeConfig, colorScheme === 'dark'), [finalThemeConfig, colorScheme]);\n\n  const handleThemeChange = useCallback((isDark: boolean) => {\n    setColorScheme(isDark ? 'dark' : 'light');\n  }, []);\n\n  const toggleTheme = useCallback(() => {\n    setColorScheme(prev => (prev === 'light' ? 'dark' : 'light'));\n  }, []);\n\n  useEffect(() => {\n    let observer: MutationObserver | null = null;\n    let mediaQuery: MediaQueryList | null = null;\n\n    // Don't set up automatic theme detection for branding mode\n    if (mode === 'branding') {\n      return null;\n    }\n\n    if (mode === 'class') {\n      const targetElement = detection.targetElement || document.documentElement;\n      if (targetElement) {\n        observer = createClassObserver(targetElement, handleThemeChange, detection);\n      }\n    } else if (mode === 'system') {\n      // Only set up system listener if not using branding or branding hasn't loaded yet\n      if (!inheritFromBranding || !brandingActiveTheme) {\n        mediaQuery = createMediaQueryListener(handleThemeChange);\n      }\n    }\n\n    return () => {\n      if (observer) {\n        observer.disconnect();\n      }\n      if (mediaQuery) {\n        // Clean up media query listener\n        if (mediaQuery.removeEventListener) {\n          mediaQuery.removeEventListener('change', handleThemeChange as any);\n        } else {\n          // Fallback for older browsers\n          mediaQuery.removeListener(handleThemeChange as any);\n        }\n      }\n    };\n  }, [mode, detection, handleThemeChange, inheritFromBranding, brandingActiveTheme]);\n\n  useEffect(() => {\n    applyThemeToDOM(theme);\n  }, [theme]);\n\n  const value = {\n    theme,\n    colorScheme,\n    toggleTheme,\n    isBrandingLoading,\n    brandingError,\n    inheritFromBranding,\n  };\n\n  return <ThemeContext.Provider value={value}>{children}</ThemeContext.Provider>;\n};\n\nexport default ThemeProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {createContext} from 'react';\nimport {Theme} from '@asgardeo/browser';\n\nexport interface ThemeContextValue {\n  theme: Theme;\n  colorScheme: 'light' | 'dark';\n  toggleTheme: () => void;\n  /**\n   * Whether branding theme is currently loading\n   */\n  isBrandingLoading?: boolean;\n  /**\n   * Error from branding theme fetch, if any\n   */\n  brandingError?: Error | null;\n  /**\n   * Whether branding inheritance is enabled\n   */\n  inheritFromBranding?: boolean;\n}\n\nconst ThemeContext = createContext<ThemeContextValue | null>(null);\n\nThemeContext.displayName = 'ThemeContext';\n\nexport default ThemeContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport BrandingContext, {BrandingContextValue} from './BrandingContext';\n\n/**\n * Hook to access the branding context.\n * This hook provides access to branding preferences, theme data, and loading states.\n *\n * @returns The branding context value containing branding preference data, theme, and control functions\n * @throws Error if used outside of a BrandingProvider\n *\n * @example\n * ```tsx\n * function MyComponent() {\n *   const { theme, activeTheme, isLoading, error } = useBrandingContext();\n *\n *   if (isLoading) return <div>Loading branding...</div>;\n *   if (error) return <div>Error: {error.message}</div>;\n *\n *   return (\n *     <div style={{ color: theme?.colors?.primary?.main }}>\n *       <p>Active theme mode: {activeTheme}</p>\n *       <p>Styled with Asgardeo branding</p>\n *     </div>\n *   );\n * }\n * ```\n */\nconst useBrandingContext = (): BrandingContextValue => {\n  const context = useContext(BrandingContext);\n  if (!context) {\n    throw new Error('useBrandingContext must be used within a BrandingProvider');\n  }\n  return context;\n};\n\nexport default useBrandingContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {createContext} from 'react';\nimport {BrandingPreference, Theme} from '@asgardeo/browser';\n\nexport interface BrandingContextValue {\n  /**\n   * The raw branding preference data\n   */\n  brandingPreference: BrandingPreference | null;\n  /**\n   * The transformed theme object\n   */\n  theme: Theme | null;\n  /**\n   * The active theme mode from branding preference ('light' | 'dark')\n   */\n  activeTheme: 'light' | 'dark' | null;\n  /**\n   * Loading state\n   */\n  isLoading: boolean;\n  /**\n   * Error state\n   */\n  error: Error | null;\n  /**\n   * Function to manually fetch branding preference\n   */\n  fetchBranding: () => Promise<void>;\n  /**\n   * Function to refetch branding preference\n   * This bypasses the single-call restriction and forces a new API call\n   */\n  refetch: () => Promise<void>;\n}\n\nconst BrandingContext = createContext<BrandingContextValue | null>(null);\n\nBrandingContext.displayName = 'BrandingContext';\n\nexport default BrandingContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactElement, useCallback, useEffect, useState} from 'react';\nimport {BrandingPreference, Theme, transformBrandingPreferenceToTheme} from '@asgardeo/browser';\nimport BrandingContext from './BrandingContext';\n\n/**\n * Configuration options for the BrandingProvider\n */\nexport interface BrandingProviderProps {\n  /**\n   * The branding preference data passed from parent (typically AsgardeoProvider)\n   */\n  brandingPreference?: BrandingPreference | null;\n  /**\n   * Force a specific theme ('light' or 'dark')\n   * If not provided, will use the activeTheme from branding preference\n   */\n  forceTheme?: 'light' | 'dark';\n  /**\n   * Whether the branding provider is enabled\n   * @default true\n   */\n  enabled?: boolean;\n  /**\n   * Loading state passed from parent\n   */\n  isLoading?: boolean;\n  /**\n   * Error state passed from parent\n   */\n  error?: Error | null;\n  /**\n   * Function to refetch branding preference passed from parent\n   */\n  refetch?: () => Promise<void>;\n}\n\n/**\n * BrandingProvider component that manages branding state and provides branding context to child components.\n *\n * This provider receives branding preferences from a parent component (typically AsgardeoProvider)\n * and transforms them into theme objects, making them available to all child components.\n *\n * Features:\n * - Receives branding preferences as props\n * - Theme transformation from branding preferences\n * - Loading and error states\n * - Support for custom theme forcing\n *\n * @example\n * Basic usage (typically used within AsgardeoProvider):\n * ```tsx\n * <BrandingProvider\n *   brandingPreference={brandingData}\n *   isLoading={isFetching}\n *   error={fetchError}\n * >\n *   <App />\n * </BrandingProvider>\n * ```\n *\n * @example\n * With custom theme forcing:\n * ```tsx\n * <BrandingProvider\n *   brandingPreference={brandingData}\n *   forceTheme=\"dark\"\n *   enabled={true}\n * >\n *   <App />\n * </BrandingProvider>\n * ```\n */\nconst BrandingProvider: FC<PropsWithChildren<BrandingProviderProps>> = ({\n  children,\n  brandingPreference: externalBrandingPreference,\n  forceTheme,\n  enabled = true,\n  isLoading: externalIsLoading = false,\n  error: externalError = null,\n  refetch: externalRefetch,\n}: PropsWithChildren<BrandingProviderProps>): ReactElement => {\n  const [theme, setTheme] = useState<Theme | null>(null);\n  const [activeTheme, setActiveTheme] = useState<'light' | 'dark' | null>(null);\n\n  // Process branding preference when it changes\n  useEffect(() => {\n    if (!enabled || !externalBrandingPreference) {\n      setTheme(null);\n      setActiveTheme(null);\n      return;\n    }\n\n    // Extract active theme from branding preference\n    const activeThemeFromBranding = externalBrandingPreference?.preference?.theme?.activeTheme;\n    let extractedActiveTheme: 'light' | 'dark' | null = null;\n\n    if (activeThemeFromBranding) {\n      // Convert to lowercase and map to our expected values\n      const themeMode = activeThemeFromBranding.toLowerCase();\n      if (themeMode === 'light' || themeMode === 'dark') {\n        extractedActiveTheme = themeMode;\n      }\n    }\n\n    setActiveTheme(extractedActiveTheme);\n\n    // Transform branding preference to theme\n    const transformedTheme = transformBrandingPreferenceToTheme(externalBrandingPreference, forceTheme);\n    setTheme(transformedTheme);\n  }, [externalBrandingPreference, forceTheme, enabled]);\n\n  // Reset state when disabled\n  useEffect(() => {\n    if (!enabled) {\n      setTheme(null);\n      setActiveTheme(null);\n    }\n  }, [enabled]);\n\n  // Dummy fetchBranding for backward compatibility\n  const fetchBranding = useCallback(async (): Promise<void> => {\n    if (externalRefetch) {\n      await externalRefetch();\n    }\n  }, [externalRefetch]);\n\n  const value = {\n    brandingPreference: externalBrandingPreference || null,\n    theme,\n    activeTheme,\n    isLoading: externalIsLoading,\n    error: externalError,\n    fetchBranding,\n    refetch: externalRefetch || fetchBranding,\n  };\n\n  return <BrandingContext.Provider value={value}>{children}</BrandingContext.Provider>;\n};\n\nexport default BrandingProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {UpdateMeProfileConfig, User, UserProfile} from '@asgardeo/browser';\nimport {FC, PropsWithChildren, ReactElement, useEffect, useState, useCallback, useMemo} from 'react';\nimport UserContext from './UserContext';\n\n/**\n * Props interface of {@link UserProvider}\n */\nexport interface UserProviderProps {\n  profile: UserProfile;\n  revalidateProfile?: () => Promise<void>;\n  updateProfile?: (\n    requestConfig: UpdateMeProfileConfig,\n    sessionId?: string,\n  ) => Promise<{success: boolean; data: {user: User}; error: string}>;\n  onUpdateProfile?: (payload: User) => void;\n}\n\n/**\n * UserProvider component that manages user profile data and provides it through UserContext.\n *\n * This provider:\n * - Fetches user profile data from the ME endpoint\n * - Retrieves SCIM2 schemas for profile structure\n * - Generates both nested and flattened user profiles\n * - Provides functions for refreshing and updating user data\n * - Handles loading states and errors\n *\n * @example\n * ```tsx\n * // Basic usage\n * <UserProvider>\n *   <App />\n * </UserProvider>\n *\n * // With custom error handling\n * <UserProvider onError={(error) => console.error('User error:', error)}>\n *   <App />\n * </UserProvider>\n *\n * // Disable auto-fetch (fetch manually using refreshUser)\n * <UserProvider autoFetch={false}>\n *   <App />\n * </UserProvider>\n * ```\n */\nconst UserProvider: FC<PropsWithChildren<UserProviderProps>> = ({\n  children,\n  profile,\n  revalidateProfile,\n  onUpdateProfile,\n  updateProfile,\n}: PropsWithChildren<UserProviderProps>): ReactElement => {\n  const contextValue = useMemo(\n    () => ({\n      schemas: profile?.schemas,\n      profile: profile?.profile,\n      flattenedProfile: profile?.flattenedProfile,\n      revalidateProfile,\n      updateProfile,\n      onUpdateProfile,\n    }),\n    [profile, onUpdateProfile, revalidateProfile, updateProfile],\n  );\n\n  return <UserContext.Provider value={contextValue}>{children}</UserContext.Provider>;\n};\n\nexport default UserProvider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {User, Schema, UpdateMeProfileConfig, OrganizationDetails} from '@asgardeo/browser';\nimport {Context, createContext} from 'react';\n\n/**\n * Props interface of {@link UserContext}\n */\nexport type UserContextProps = {\n  flattenedProfile: User | null;\n  profile: User | null;\n  revalidateProfile: () => Promise<void>;\n  schemas: Schema[] | null;\n  updateProfile: (\n    requestConfig: UpdateMeProfileConfig,\n    sessionId?: string,\n  ) => Promise<{success: boolean; data: {user: User}; error: string}>;\n  onUpdateProfile: (payload: User) => void;\n};\n\n/**\n * Context object for managing user profile data and related operations.\n */\nconst UserContext: Context<UserContextProps | null> = createContext<null | UserContextProps>({\n  profile: null,\n  schemas: null,\n  flattenedProfile: null,\n  revalidateProfile: () => null,\n  updateProfile: () => null,\n  onUpdateProfile: () => null,\n});\n\nUserContext.displayName = 'UserContext';\n\nexport default UserContext;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport AsgardeoContext, {AsgardeoContextProps} from './AsgardeoContext';\n\nconst useAsgardeo = (): AsgardeoContextProps => {\n  const context: AsgardeoContextProps | null = useContext(AsgardeoContext);\n\n  if (!context) {\n    throw new Error('useAsgardeo must be used within an AsgardeoProvider');\n  }\n\n  return context;\n};\n\nexport default useAsgardeo;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport UserContext, {UserContextProps} from './UserContext';\n\n/**\n * Hook to access the User context.\n *\n * This hook provides access to user profile data including:\n * - Raw profile API response\n * - SCIM2 schemas\n * - Nested user object\n * - Flattened user profile\n * - Functions to refresh and update user data\n * - Loading states and error handling\n *\n * @returns {UserContextProps} The user context value containing all user-related data and functions\n * @throws {Error} Throws an error if used outside of UserProvider\n *\n * @example\n * ```tsx\n * import {useUser} from '@asgardeo/react';\n *\n * function ProfileComponent() {\n *   const {\n *     isLoading,\n *     profile,\n *     schemas,\n *     user,\n *     flattenedUser,\n *     refreshUser,\n *     updateUser,\n *     error\n *   } = useUser();\n *\n *   if (isLoading) {\n *     return <div>Loading user data...</div>;\n *   }\n *\n *   if (error) {\n *     return <div>Error: {error.message}</div>;\n *   }\n *\n *   return (\n *     <div>\n *       <h1>Welcome {user?.name?.givenName}!</h1>\n *       <p>Email: {flattenedUser?.emails}</p>\n *       <button onClick={refreshUser}>Refresh Profile</button>\n *     </div>\n *   );\n * }\n *\n * // Access specific user properties\n * function UserEmail() {\n *   const {flattenedUser} = useUser();\n *   return <span>{flattenedUser?.emails?.[0]}</span>;\n * }\n *\n * // Update user profile\n * function EditProfile() {\n *   const {updateUser, user} = useUser();\n *\n *   const handleUpdate = async () => {\n *     try {\n *       await updateUser({\n *         name: {\n *           givenName: 'John',\n *           familyName: 'Doe'\n *         }\n *       });\n *     } catch (error) {\n *       console.error('Update failed:', error);\n *     }\n *   };\n *\n *   return <button onClick={handleUpdate}>Update Name</button>;\n * }\n * ```\n */\nconst useUser = (): UserContextProps => {\n  const context = useContext(UserContext);\n\n  if (!context) {\n    throw new Error('useUser must be used within a UserProvider');\n  }\n\n  return context;\n};\n\nexport default useUser;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport OrganizationContext, {OrganizationContextProps} from './OrganizationContext';\n\n/**\n * Hook to access the Organization context.\n *\n * This hook provides access to organization data including:\n * - List of organizations the user belongs to\n * - Current organization\n * - Functions to switch organizations and refresh data\n * - Function to fetch organizations programmatically\n * - Loading states and error handling\n *\n * @returns {OrganizationContextProps} The organization context value containing all organization-related data and functions\n * @throws {Error} Throws an error if used outside of OrganizationProvider\n *\n * @example\n * ```tsx\n * import {useOrganization} from '@asgardeo/react';\n *\n * function OrganizationSelector() {\n *   const {\n *     organizations,\n *     currentOrganization,\n *     switchOrganization,\n *     revalidateMyOrganizations,\n *     getOrganizations,\n *     isLoading,\n *     error\n *   } = useOrganization();\n *\n *   if (isLoading) {\n *     return <div>Loading organizations...</div>;\n *   }\n *\n *   if (error) {\n *     return <div>Error: {error}</div>;\n *   }\n *\n *   return (\n *     <div>\n *       <h2>Current: {currentOrganization?.name}</h2>\n *       <select\n *         value={currentOrganization?.id || ''}\n *         onChange={(e) => {\n *           const org = organizations?.find(o => o.id === e.target.value);\n *           if (org) switchOrganization(org);\n *         }}\n *       >\n *         {organizations?.map(org => (\n *           <option key={org.id} value={org.id}>\n *             {org.name}\n *           </option>\n *         ))}\n *       </select>\n *       <button onClick={revalidateMyOrganizations}>\n *         Refresh Organizations\n *       </button>\n *       <button onClick={async () => {\n *         const fresh = await getOrganizations();\n *         console.log('Fresh organizations:', fresh);\n *       }}>\n *         Get Organizations Manually\n *       </button>\n *     </div>\n *   );\n * }\n *\n * // Switch to a specific organization\n * function SwitchOrgButton() {\n *   const {organizations, switchOrganization} = useOrganization();\n *\n *   const handleSwitch = (orgId: string) => {\n *     const org = organizations?.find(o => o.id === orgId);\n *     if (org) {\n *       switchOrganization(org);\n *     }\n *   };\n *\n *   return (\n *     <button onClick={() => handleSwitch('org-123')}>\n *       Switch to Organization\n *     </button>\n *   );\n * }\n * ```\n */\nconst useOrganization = (): OrganizationContextProps => {\n  const context: OrganizationContextProps | null = useContext(OrganizationContext);\n\n  if (!context) {\n    throw new Error('useOrganization must be used within an OrganizationProvider');\n  }\n\n  return context;\n};\n\nexport default useOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport FlowContext, {FlowContextValue} from './FlowContext';\n\n/**\n * Hook to access the flow context.\n * Must be used within a FlowProvider.\n *\n * @example\n * ```tsx\n * const MyAuthComponent = () => {\n *   const { title, setTitle, addMessage, isLoading } = useFlow();\n *\n *   const handleSuccess = () => {\n *     addMessage({\n *       type: 'success',\n *       message: 'Authentication successful!'\n *     });\n *   };\n *\n *   return (\n *     <div>\n *       <h1>{title}</h1>\n *       {isLoading && <p>Loading...</p>}\n *     </div>\n *   );\n * };\n * ```\n *\n * @returns The flow context value\n * @throws Error if used outside of FlowProvider\n */\nconst useFlow = (): FlowContextValue => {\n  const context = useContext(FlowContext);\n\n  if (!context) {\n    throw new Error('useFlow must be used within a FlowProvider');\n  }\n\n  return context;\n};\n\nexport default useFlow;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport I18nContext, {I18nContextValue} from './I18nContext';\n\n/**\n * Hook for accessing the I18n context directly.\n * Provides access to the full i18n context including bundles and all utilities.\n *\n * @returns The complete I18n context value\n * @throws Error if used outside of I18nProvider context\n */\nconst useI18n = (): I18nContextValue => {\n  const context = useContext(I18nContext);\n\n  if (!context) {\n    throw new Error(\n      'useI18n must be used within an I18nProvider. Make sure your component is wrapped with AsgardeoProvider which includes I18nProvider.',\n    );\n  }\n\n  return context;\n};\n\nexport default useI18n;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext} from 'react';\nimport ThemeContext, {ThemeContextValue} from './ThemeContext';\n\nconst useTheme = (): ThemeContextValue => {\n  const context = useContext(ThemeContext);\n  if (!context) {\n    throw new Error('useTheme must be used within a ThemeProvider');\n  }\n  return context;\n};\n\nexport default useTheme;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useContext, useMemo} from 'react';\nimport {deepMerge, I18nBundle, I18nPreferences} from '@asgardeo/browser';\nimport I18nContext, {I18nContextValue} from '../contexts/I18n/I18nContext';\n\nexport interface UseTranslation {\n  /**\n   * Translation function that returns a translated string for the given key\n   */\n  t: (key: string, params?: Record<string, string | number>) => string;\n\n  /**\n   * The current language code\n   */\n  currentLanguage: string;\n\n  /**\n   * Function to change the current language\n   */\n  setLanguage: (language: string) => void;\n\n  /**\n   * All available language codes\n   */\n  availableLanguages: string[];\n}\n\nexport interface UseTranslationWithPreferences extends UseTranslation {\n  /**\n   * Enhanced translation function that merges component-level preferences\n   */\n  t: (key: string, params?: Record<string, string | number>) => string;\n}\n\n/**\n * Hook for accessing translation functions and language management.\n * Must be used within an I18nProvider context.\n *\n * @param componentPreferences - Optional component-level i18n preferences to merge with global ones\n * @returns An object containing translation function and language management utilities\n * @throws Error if used outside of I18nProvider context\n */\nconst useTranslation = (componentPreferences?: I18nPreferences): UseTranslationWithPreferences => {\n  const context = useContext(I18nContext);\n\n  if (!context) {\n    throw new Error(\n      'useTranslation must be used within an I18nProvider. Make sure your component is wrapped with AsgardeoProvider which includes I18nProvider.',\n    );\n  }\n\n  const {t: globalT, currentLanguage, setLanguage, bundles: globalBundles, fallbackLanguage} = context;\n\n  // Merge global bundles with component-level bundles if provided\n  const mergedBundles = useMemo(() => {\n    if (!componentPreferences?.bundles) {\n      return globalBundles;\n    }\n\n    const merged: Record<string, I18nBundle> = {};\n\n    // Start with global bundles\n    Object.entries(globalBundles).forEach(([key, bundle]) => {\n      merged[key] = bundle;\n    });\n\n    // Merge component-level bundles using deepMerge for better merging\n    Object.entries(componentPreferences.bundles).forEach(([key, componentBundle]) => {\n      if (merged[key]) {\n        // Deep merge component bundle with existing global bundle\n        merged[key] = {\n          ...merged[key],\n          translations: deepMerge(merged[key].translations, componentBundle.translations),\n          metadata: componentBundle.metadata\n            ? {...merged[key].metadata, ...componentBundle.metadata}\n            : merged[key].metadata,\n        };\n      } else {\n        // No global bundle for this language, use component bundle as-is\n        merged[key] = componentBundle;\n      }\n    });\n\n    return merged;\n  }, [globalBundles, componentPreferences?.bundles]);\n\n  // Create enhanced translation function that uses merged bundles\n  const enhancedT = useMemo(() => {\n    if (!componentPreferences?.bundles) {\n      // No component preferences, use global translation function\n      return globalT;\n    }\n\n    return (key: string, params?: Record<string, string | number>): string => {\n      let translation: string | undefined;\n\n      // Try to get translation from current language bundle\n      const currentBundle = mergedBundles[currentLanguage];\n      if (currentBundle?.translations[key]) {\n        translation = currentBundle.translations[key];\n      }\n\n      // Fallback to fallback language if translation not found\n      if (!translation && currentLanguage !== fallbackLanguage) {\n        const fallbackBundle = mergedBundles[fallbackLanguage];\n        if (fallbackBundle?.translations[key]) {\n          translation = fallbackBundle.translations[key];\n        }\n      }\n\n      // If still no translation found, return the key itself\n      if (!translation) {\n        translation = key;\n      }\n\n      // Replace parameters if provided\n      if (params && Object.keys(params).length > 0) {\n        return Object.entries(params).reduce((acc, [paramKey, paramValue]) => {\n          return acc.replace(new RegExp(`\\\\{${paramKey}\\\\}`, 'g'), String(paramValue));\n        }, translation);\n      }\n\n      return translation;\n    };\n  }, [mergedBundles, currentLanguage, fallbackLanguage, globalT, componentPreferences?.bundles]);\n\n  return {\n    t: enhancedT,\n    currentLanguage,\n    setLanguage,\n    availableLanguages: Object.keys(mergedBundles),\n  };\n};\n\nexport default useTranslation;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {useState, useCallback} from 'react';\n\n/**\n * Generic form field configuration\n */\nexport interface FormField {\n  initialValue?: string;\n  name: string;\n  required?: boolean;\n  validator?: (value: string) => string | null;\n}\n\n/**\n * Form validation result\n */\nexport interface ValidationResult {\n  errors: Record<string, string>;\n  isValid: boolean;\n}\n\n/**\n * Configuration for the useForm hook\n */\nexport interface UseFormConfig<T extends Record<string, string>> {\n  /**\n   * Form field definitions\n   */\n  fields?: FormField[];\n  /**\n   * Initial form values\n   */\n  initialValues?: Partial<T>;\n  /**\n   * Custom required field validation message\n   */\n  requiredMessage?: string;\n  /**\n   * Whether to validate on blur (default: true)\n   */\n  validateOnBlur?: boolean;\n  /**\n   * Whether to validate on change (default: false)\n   */\n  validateOnChange?: boolean;\n  /**\n   * Global form validator function\n   */\n  validator?: (values: T) => Record<string, string>;\n}\n\n/**\n * Return type for the useForm hook\n */\nexport interface UseFormReturn<T extends Record<string, string>> {\n  /**\n   * Clear all errors\n   */\n  clearErrors: () => void;\n  /**\n   * Current validation errors\n   */\n  errors: Record<keyof T, string>;\n  /**\n   * Get field props for easy integration with form components\n   */\n  getFieldProps: (name: keyof T) => {\n    error: string | undefined;\n    name: keyof T;\n    onBlur: () => void;\n    onChange: (value: string) => void;\n    required: boolean;\n    touched: boolean;\n    value: string;\n  };\n  /**\n   * Handle form submission\n   */\n  handleSubmit: (onSubmit: (values: T) => void | Promise<void>) => (e?: React.FormEvent) => Promise<void>;\n  /**\n   * Whether the form has been submitted\n   */\n  isSubmitted: boolean;\n  /**\n   * Whether the form is currently valid\n   */\n  isValid: boolean;\n  /**\n   * Reset the form to initial values\n   */\n  reset: () => void;\n  /**\n   * Set a field error\n   */\n  setError: (name: keyof T, error: string) => void;\n  /**\n   * Set multiple field errors\n   */\n  setErrors: (errors: Partial<Record<keyof T, string>>) => void;\n  /**\n   * Mark a field as touched\n   */\n  setTouched: (name: keyof T, touched?: boolean) => void;\n  /**\n   * Mark multiple fields as touched\n   */\n  setTouchedFields: (touched: Partial<Record<keyof T, boolean>>) => void;\n  /**\n   * Set a single field value\n   */\n  setValue: (name: keyof T, value: string) => void;\n  /**\n   * Set multiple field values\n   */\n  setValues: (values: Partial<T>) => void;\n  /**\n   * Mark all fields as touched\n   */\n  touchAllFields: () => void;\n  /**\n   * Validate all fields\n   */\n  validateForm: () => ValidationResult;\n  /**\n   * Current form values\n   */\n  values: T;\n  /**\n   * Validate a single field\n   */\n  validateField: (name: keyof T) => string | null;\n  /**\n   * Fields that have been touched by the user\n   */\n  touched: Record<keyof T, boolean>;\n}\n\n/**\n * Generic form hook that provides comprehensive form state management and validation.\n *\n * @template T - The type of form values (must extend Record<string, string>)\n * @param config - Configuration options for the form\n * @returns Form state and methods\n *\n * @example\n * ```tsx\n * interface LoginForm {\n *   username: string;\n *   password: string;\n * }\n *\n * const {\n *   values,\n *   touched,\n *   errors,\n *   isValid,\n *   setValue,\n *   handleSubmit,\n *   getFieldProps\n * } = useForm<LoginForm>({\n *   initialValues: { username: '', password: '' },\n *   fields: [\n *     { name: 'username', required: true },\n *     { name: 'password', required: true }\n *   ]\n * });\n *\n * const onSubmit = handleSubmit((values) => {\n *   console.log('Form submitted:', values);\n * });\n *\n * return (\n *   <form onSubmit={onSubmit}>\n *     <input {...getFieldProps('username')} />\n *     <input {...getFieldProps('password')} type=\"password\" />\n *     <button type=\"submit\" disabled={!isValid}>Submit</button>\n *   </form>\n * );\n * ```\n */\nexport const useForm = <T extends Record<string, string>>(config: UseFormConfig<T> = {}): UseFormReturn<T> => {\n  const {\n    initialValues = {} as T,\n    fields = [],\n    validator,\n    validateOnChange = false,\n    validateOnBlur = true,\n    requiredMessage = 'This field is required',\n  } = config;\n\n  // Initialize form state\n  const [values, setFormValues] = useState<T>({...initialValues} as T);\n  const [touched, setFormTouched] = useState<Record<keyof T, boolean>>({} as Record<keyof T, boolean>);\n  const [errors, setFormErrors] = useState<Record<keyof T, string>>({} as Record<keyof T, string>);\n  const [isSubmitted, setIsSubmitted] = useState(false);\n\n  // Get field configuration by name\n  const getFieldConfig = useCallback(\n    (name: keyof T): FormField | undefined => fields.find(field => field.name === name),\n    [fields],\n  );\n\n  // Validate a single field\n  const validateField = useCallback(\n    (name: keyof T): string | null => {\n      const value = values[name] || '';\n      const fieldConfig = getFieldConfig(name);\n\n      // Check required validation\n      if (fieldConfig?.required && (!value || value.trim() === '')) {\n        return requiredMessage;\n      }\n\n      // Run custom field validator\n      if (fieldConfig?.validator) {\n        const fieldError = fieldConfig.validator(value);\n        if (fieldError) return fieldError;\n      }\n\n      return null;\n    },\n    [values, getFieldConfig, requiredMessage],\n  );\n\n  // Validate the entire form\n  const validateForm = useCallback((): ValidationResult => {\n    const newErrors: Record<keyof T, string> = {} as Record<keyof T, string>;\n\n    // Validate individual fields\n    fields.forEach(field => {\n      const error = validateField(field.name as keyof T);\n      if (error) {\n        newErrors[field.name as keyof T] = error;\n      }\n    });\n\n    // Run global validator if provided\n    if (validator) {\n      const globalErrors = validator(values);\n      Object.keys(globalErrors).forEach(key => {\n        if (globalErrors[key]) {\n          newErrors[key as keyof T] = globalErrors[key];\n        }\n      });\n    }\n\n    return {\n      isValid: Object.keys(newErrors).length === 0,\n      errors: newErrors,\n    };\n  }, [fields, validateField, validator, values]);\n\n  // Check if form is currently valid\n  const isValid = Object.keys(errors).length === 0;\n\n  // Set a single field value\n  const setValue = useCallback(\n    (name: keyof T, value: string): void => {\n      setFormValues((prev: T) => ({\n        ...prev,\n        [name]: value,\n      }));\n\n      // Validate on change if enabled\n      if (validateOnChange) {\n        const error = validateField(name);\n        setFormErrors((prev: Record<keyof T, string>) => {\n          const newErrors: Record<keyof T, string> = {...prev};\n          if (error) {\n            newErrors[name] = error;\n          } else {\n            delete newErrors[name];\n          }\n          return newErrors;\n        });\n      }\n    },\n    [validateField, validateOnChange],\n  );\n\n  // Set multiple field values\n  const setValues = useCallback((newValues: Partial<T>): void => {\n    setFormValues((prev: T) => ({\n      ...prev,\n      ...newValues,\n    }));\n  }, []);\n\n  // Mark a field as touched\n  const setTouched = useCallback(\n    (name: keyof T, isTouched: boolean = true): void => {\n      setFormTouched((prev: Record<keyof T, boolean>) => ({\n        ...prev,\n        [name]: isTouched,\n      }));\n\n      // Validate on blur if enabled and field is touched\n      if (validateOnBlur && isTouched) {\n        const error = validateField(name);\n        setFormErrors((prev: Record<keyof T, string>) => {\n          const newErrors: Record<keyof T, string> = {...prev};\n          if (error) {\n            newErrors[name] = error;\n          } else {\n            delete newErrors[name];\n          }\n          return newErrors;\n        });\n      }\n    },\n    [validateField, validateOnBlur],\n  );\n\n  // Set multiple touched fields\n  const setTouchedFields = useCallback((touchedFields: Partial<Record<keyof T, boolean>>): void => {\n    setFormTouched((prev: Record<keyof T, boolean>) => ({\n      ...prev,\n      ...touchedFields,\n    }));\n  }, []);\n\n  // Mark all fields as touched\n  const touchAllFields = useCallback((): void => {\n    const allTouched: Record<keyof T, boolean> = fields.reduce((acc: Record<keyof T, boolean>, field: FormField) => {\n      acc[field.name as keyof T] = true;\n      return acc;\n    }, {} as Record<keyof T, boolean>);\n\n    setFormTouched(allTouched);\n\n    // Validate all fields\n    const validation: ValidationResult = validateForm();\n    setFormErrors(validation.errors as Record<keyof T, string>);\n  }, [fields, validateForm]);\n\n  // Set a field error\n  const setError = useCallback((name: keyof T, error: string): void => {\n    setFormErrors((prev: Record<keyof T, string>) => ({\n      ...prev,\n      [name]: error,\n    }));\n  }, []);\n\n  // Set multiple field errors\n  const setErrors = useCallback((newErrors: Partial<Record<keyof T, string>>): void => {\n    setFormErrors((prev: Record<keyof T, string>) => ({\n      ...prev,\n      ...newErrors,\n    }));\n  }, []);\n\n  // Clear all errors\n  const clearErrors = useCallback((): void => {\n    setFormErrors({} as Record<keyof T, string>);\n  }, []);\n\n  // Reset form to initial state\n  const reset = useCallback((): void => {\n    setFormValues({...initialValues} as T);\n    setFormTouched({} as Record<keyof T, boolean>);\n    setFormErrors({} as Record<keyof T, string>);\n    setIsSubmitted(false);\n  }, [initialValues]);\n\n  // Handle form submission\n  const handleSubmit: (onSubmit: (values: T) => void | Promise<void>) => (e?: React.FormEvent) => Promise<void> =\n    useCallback(\n      (onSubmit: (values: T) => void | Promise<void>) =>\n        async (e?: React.FormEvent): Promise<void> => {\n          if (e) {\n            e.preventDefault();\n          }\n\n          setIsSubmitted(true);\n          touchAllFields();\n\n          const validation: ValidationResult = validateForm();\n\n          if (validation.isValid) {\n            await onSubmit(values);\n          }\n        },\n      [values, touchAllFields, validateForm],\n    );\n\n  // Get field props for easy integration\n  const getFieldProps = useCallback(\n    (name: keyof T) => {\n      const fieldConfig: FormField | undefined = getFieldConfig(name);\n\n      return {\n        error: touched[name] ? errors[name] : undefined,\n        name,\n        onBlur: (): void => setTouched(name, true),\n        onChange: (value: string): void => setValue(name, value),\n        required: fieldConfig?.required || false,\n        touched: touched[name] || false,\n        value: values[name] || '',\n      };\n    },\n    [values, errors, touched, setValue, setTouched, getFieldConfig],\n  );\n\n  return {\n    clearErrors,\n    errors,\n    getFieldProps,\n    handleSubmit,\n    isSubmitted,\n    isValid,\n    reset,\n    setError,\n    setErrors,\n    setTouched,\n    setTouchedFields,\n    setValue,\n    setValues,\n    touchAllFields,\n    touched,\n    validateField,\n    validateForm,\n    values,\n  };\n};\n\nexport default useForm;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {BrandingPreference, Theme} from '@asgardeo/browser';\nimport useBrandingContext from '../contexts/Branding/useBrandingContext';\n\n/**\n * Configuration options for the useBranding hook\n * @deprecated Use BrandingProvider instead for better performance and consistency\n */\nexport interface UseBrandingConfig {\n  /**\n   * @deprecated This configuration is now handled by BrandingProvider\n   */\n  locale?: string;\n  /**\n   * @deprecated This configuration is now handled by BrandingProvider\n   */\n  name?: string;\n  /**\n   * @deprecated This configuration is now handled by BrandingProvider\n   */\n  type?: string;\n  /**\n   * @deprecated This configuration is now handled by BrandingProvider\n   */\n  forceTheme?: 'light' | 'dark';\n  /**\n   * @deprecated This configuration is now handled by BrandingProvider\n   */\n  autoFetch?: boolean;\n  /**\n   * @deprecated This configuration is now handled by BrandingProvider\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Return type of the useBranding hook\n */\nexport interface UseBrandingReturn {\n  /**\n   * The raw branding preference data\n   */\n  brandingPreference: BrandingPreference | null;\n  /**\n   * The transformed theme object\n   */\n  theme: Theme | null;\n  /**\n   * The active theme mode from branding preference ('light' | 'dark')\n   */\n  activeTheme: 'light' | 'dark' | null;\n  /**\n   * Loading state\n   */\n  isLoading: boolean;\n  /**\n   * Error state\n   */\n  error: Error | null;\n  /**\n   * Function to manually fetch branding preference\n   */\n  fetchBranding: () => Promise<void>;\n  /**\n   * Function to refetch branding preference\n   * This bypasses the single-call restriction and forces a new API call\n   */\n  refetch: () => Promise<void>;\n}\n\n/**\n * React hook for accessing branding preferences from the BrandingProvider context.\n * This hook provides access to branding preferences, theme data, and loading states.\n *\n * @deprecated Consider using useBrandingContext directly for better performance.\n * This hook is maintained for backward compatibility.\n *\n * @param config - Configuration options (deprecated, use BrandingProvider props instead)\n * @returns Object containing branding preference data, theme, loading state, error, and refetch function\n *\n * @example\n * Basic usage:\n * ```tsx\n * function MyComponent() {\n *   const { theme, activeTheme, isLoading, error } = useBranding();\n *\n *   if (isLoading) return <div>Loading branding...</div>;\n *   if (error) return <div>Error: {error.message}</div>;\n *\n *   return (\n *     <div style={{ color: theme?.colors?.primary?.main }}>\n *       <p>Active theme mode: {activeTheme}</p>\n *       <p>Styled with Asgardeo branding</p>\n *     </div>\n *   );\n * }\n * ```\n *\n * @example\n * For new implementations, use BrandingProvider with useBrandingContext:\n * ```tsx\n * // In your root component\n * <BrandingProvider baseUrl=\"https://api.asgardeo.io/t/your-org\">\n *   <App />\n * </BrandingProvider>\n *\n * // In your component\n * function MyComponent() {\n *   const { theme, activeTheme, isLoading, error } = useBrandingContext();\n *   // ... rest of your component\n * }\n * ```\n */\nexport const useBranding = (config: UseBrandingConfig = {}): UseBrandingReturn => {\n  try {\n    return useBrandingContext();\n  } catch (error) {\n    console.warn(\n      'useBranding: BrandingProvider not available. ' +\n        'Make sure to wrap your app with BrandingProvider or AsgardeoProvider with branding preferences.',\n    );\n\n    return {\n      brandingPreference: null,\n      theme: null,\n      activeTheme: null,\n      isLoading: false,\n      error: new Error('BrandingProvider not available'),\n      fetchBranding: async () => {},\n      refetch: async () => {},\n    };\n  }\n};\n\nexport default useBranding;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {WithPreferences, withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {\n  ButtonHTMLAttributes,\n  forwardRef,\n  ForwardRefExoticComponent,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefAttributes,\n} from 'react';\nimport Button from '../../primitives/Button/Button';\n\n/**\n * Common props shared by all {@link BaseSignInButton} components.\n */\nexport interface CommonBaseSignInButtonProps {\n  /**\n   * Loading state during sign-in process\n   */\n  isLoading?: boolean;\n  /**\n   * Function to initiate the sign-in process\n   */\n  signIn: () => Promise<void>;\n}\n\n/**\n * Props passed to the render function of {@link BaseSignInButton}\n */\nexport type BaseSignInButtonRenderProps = CommonBaseSignInButtonProps;\n\n/**\n * Props interface of {@link BaseSignInButton}\n */\nexport interface BaseSignInButtonProps\n  extends Partial<CommonBaseSignInButtonProps>,\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'children'>,\n    WithPreferences {\n  /**\n   * Render prop function that receives sign-in props, or traditional ReactNode children\n   */\n  children?: ((props: BaseSignInButtonRenderProps) => ReactNode) | ReactNode;\n}\n\n/**\n * Base SignInButton component that supports both render props and traditional props patterns.\n *\n * @example Using render props\n * ```tsx\n * <BaseSignInButton>\n *   {({signIn, isLoading}) => (\n *     <button onClick={signIn} disabled={isLoading}>\n *       {isLoading ? 'Signing in...' : 'Sign In'}\n *     </button>\n *   )}\n * </BaseSignInButton>\n * ```\n *\n * @example Using traditional props\n * ```tsx\n * <BaseSignInButton className=\"custom-button\">Sign In</BaseSignInButton>\n * ```\n */\nconst BaseSignInButton: ForwardRefExoticComponent<BaseSignInButtonProps & RefAttributes<HTMLButtonElement>> =\n  forwardRef<HTMLButtonElement, BaseSignInButtonProps>(\n    (\n      {children, className, style, signIn, isLoading, preferences, ...rest}: BaseSignInButtonProps,\n      ref: Ref<HTMLButtonElement>,\n    ): ReactElement => {\n      if (typeof children === 'function') {\n        return <>{children({isLoading, signIn})}</>;\n      }\n\n      return (\n        <Button\n          ref={ref}\n          className={clsx(withVendorCSSClassPrefix('sign-in-button'), className)}\n          style={style}\n          disabled={isLoading}\n          loading={isLoading}\n          type=\"button\"\n          {...rest}\n        >\n          {children}\n        </Button>\n      );\n    },\n  );\n\nBaseSignInButton.displayName = 'BaseSignInButton';\n\nexport default BaseSignInButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, ButtonHTMLAttributes, forwardRef, useMemo} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport Spinner, {SpinnerSize} from '../Spinner/Spinner';\n\nexport type ButtonColor = 'primary' | 'secondary' | 'tertiary' | string;\nexport type ButtonVariant = 'solid' | 'outline' | 'text';\nexport type ButtonSize = 'small' | 'medium' | 'large';\n\nexport interface ButtonProps extends Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'color'> {\n  /**\n   * The button color that determines the color scheme\n   */\n  color?: ButtonColor;\n  /**\n   * The button variant that determines the visual style\n   */\n  variant?: ButtonVariant;\n  /**\n   * The size of the button\n   */\n  size?: ButtonSize;\n  /**\n   * Whether the button should take the full width of its container\n   */\n  fullWidth?: boolean;\n  /**\n   * Whether the button is in a loading state\n   */\n  loading?: boolean;\n  /**\n   * Icon to display before the button text\n   */\n  startIcon?: React.ReactNode;\n  /**\n   * Icon to display after the button text\n   */\n  endIcon?: React.ReactNode;\n}\n\nconst useButtonStyles = (\n  color: ButtonColor,\n  variant: ButtonVariant,\n  size: ButtonSize,\n  fullWidth: boolean,\n  disabled: boolean,\n  loading: boolean,\n) => {\n  const {theme} = useTheme();\n\n  return useMemo(() => {\n    // Size configurations\n    const sizeConfig = {\n      small: {\n        padding: `calc(${theme.vars.spacing.unit} * 0.5) calc(${theme.vars.spacing.unit} * 1)`,\n        fontSize: theme.vars.typography.fontSizes.sm,\n        minHeight: `calc(${theme.vars.spacing.unit} * 3)`,\n      },\n      medium: {\n        padding: `calc(${theme.vars.spacing.unit} * 1) calc(${theme.vars.spacing.unit} * 2)`,\n        fontSize: theme.vars.typography.fontSizes.md,\n        minHeight: `calc(${theme.vars.spacing.unit} * 4)`,\n      },\n      large: {\n        padding: `calc(${theme.vars.spacing.unit} * 1.5) calc(${theme.vars.spacing.unit} * 3)`,\n        fontSize: theme.vars.typography.fontSizes.lg,\n        minHeight: `calc(${theme.vars.spacing.unit} * 5)`,\n      },\n    };\n\n    // Color configurations based on color and variant\n    const getColorConfig = () => {\n      switch (color) {\n        case 'primary':\n          switch (variant) {\n            case 'solid':\n              return {\n                backgroundColor: theme.vars.colors.primary.main,\n                color: theme.vars.colors.primary.contrastText,\n                border: `1px solid ${theme.vars.colors.primary.main}`,\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.primary.main,\n                  opacity: 0.9,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.primary.main,\n                  opacity: 0.8,\n                },\n              };\n            case 'outline':\n              return {\n                backgroundColor: 'transparent',\n                color: theme.vars.colors.primary.main,\n                border: `1px solid ${theme.vars.colors.primary.main}`,\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.primary.main,\n                  color: theme.vars.colors.primary.contrastText,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.primary.main,\n                  color: theme.vars.colors.primary.contrastText,\n                  opacity: 0.9,\n                },\n              };\n            case 'text':\n              return {\n                backgroundColor: 'transparent',\n                color: theme.vars.colors.primary.main,\n                border: '1px solid transparent',\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.action.hover,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.action.selected,\n                },\n              };\n          }\n          break;\n        case 'secondary':\n          switch (variant) {\n            case 'solid':\n              return {\n                backgroundColor: theme.vars.colors.secondary.main,\n                color: theme.vars.colors.secondary.contrastText,\n                border: `1px solid ${theme.vars.colors.secondary.main}`,\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.secondary.main,\n                  opacity: 0.9,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.secondary.main,\n                  opacity: 0.8,\n                },\n              };\n            case 'outline':\n              return {\n                backgroundColor: 'transparent',\n                color: theme.vars.colors.secondary.main,\n                border: `1px solid ${theme.vars.colors.secondary.main}`,\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.secondary.main,\n                  color: theme.vars.colors.secondary.contrastText,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.secondary.main,\n                  color: theme.vars.colors.secondary.contrastText,\n                  opacity: 0.9,\n                },\n              };\n            case 'text':\n              return {\n                backgroundColor: 'transparent',\n                color: theme.vars.colors.secondary.main,\n                border: '1px solid transparent',\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.action.hover,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.action.selected,\n                },\n              };\n          }\n          break;\n        case 'tertiary':\n          switch (variant) {\n            case 'solid':\n              return {\n                backgroundColor: theme.vars.colors.text.secondary,\n                color: theme.vars.colors.background.surface,\n                border: `1px solid ${theme.vars.colors.text.secondary}`,\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.text.primary,\n                  color: theme.vars.colors.background.surface,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.text.primary,\n                  color: theme.vars.colors.background.surface,\n                  opacity: 0.9,\n                },\n              };\n            case 'outline':\n              return {\n                backgroundColor: 'transparent',\n                color: theme.vars.colors.text.secondary,\n                border: `1px solid ${theme.vars.colors.border}`,\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.action.hover,\n                  borderColor: theme.vars.colors.text.secondary,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.action.selected,\n                  borderColor: theme.vars.colors.text.primary,\n                },\n              };\n            case 'text':\n              return {\n                backgroundColor: 'transparent',\n                color: theme.vars.colors.text.secondary,\n                border: '1px solid transparent',\n                '&:hover': {\n                  backgroundColor: theme.vars.colors.action.hover,\n                  color: theme.vars.colors.text.primary,\n                },\n                '&:active': {\n                  backgroundColor: theme.vars.colors.action.selected,\n                  color: theme.vars.colors.text.primary,\n                },\n              };\n          }\n          break;\n        default:\n          return {};\n      }\n    };\n\n    const baseStyle: CSSProperties = {\n      display: 'inline-flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      gap: `calc(${theme.vars.spacing.unit} * 1)`,\n      borderRadius: theme.vars.borderRadius.medium,\n      fontWeight: 500,\n      cursor: disabled || loading ? 'not-allowed' : 'pointer',\n      transition: 'all 0.2s ease-in-out',\n      outline: 'none',\n      textDecoration: 'none',\n      whiteSpace: 'nowrap',\n      width: fullWidth ? '100%' : 'auto',\n      opacity: disabled || loading ? 0.6 : 1,\n      ...sizeConfig[size],\n      ...getColorConfig(),\n    };\n\n    return baseStyle;\n  }, [theme, color, variant, size, fullWidth, disabled, loading]);\n};\n\n/**\n * Button component with multiple variants and types.\n *\n * @example\n * ```tsx\n * // Primary solid button\n * <Button color=\"primary\" variant=\"solid\">\n *   Click me\n * </Button>\n *\n * // Secondary outline button\n * <Button color=\"secondary\" variant=\"outline\" size=\"large\">\n *   Cancel\n * </Button>\n *\n * // Text button with loading state\n * <Button color=\"tertiary\" variant=\"text\" loading>\n *   Loading...\n * </Button>\n *\n * // Button with icons\n * <Button\n *   color=\"primary\"\n *   startIcon={<Icon />}\n *   endIcon={<Arrow />}\n * >\n *   Save and Continue\n * </Button>\n * ```\n */\nconst Button = forwardRef<HTMLButtonElement, ButtonProps>(\n  (\n    {\n      color = 'primary',\n      variant = 'solid',\n      size = 'medium',\n      fullWidth = false,\n      loading = false,\n      startIcon,\n      endIcon,\n      children,\n      className,\n      disabled,\n      style,\n      ...rest\n    },\n    ref,\n  ) => {\n    const {theme} = useTheme();\n    const buttonStyle = useButtonStyles(color, variant, size, fullWidth, disabled || false, loading);\n\n    return (\n      <button\n        ref={ref}\n        style={{...buttonStyle, ...style}}\n        className={clsx(\n          withVendorCSSClassPrefix('button'),\n          withVendorCSSClassPrefix(`button-${color}`),\n          withVendorCSSClassPrefix(`button-${variant}`),\n          withVendorCSSClassPrefix(`button-${size}`),\n          {\n            [withVendorCSSClassPrefix('button-full-width')]: fullWidth,\n            [withVendorCSSClassPrefix('button-loading')]: loading,\n          },\n          className,\n        )}\n        disabled={disabled || loading}\n        {...rest}\n      >\n        {loading && (\n          <Spinner\n            size={size as SpinnerSize}\n            color=\"currentColor\"\n            style={{\n              width:\n                size === 'small'\n                  ? `calc(${theme.vars.spacing.unit} * 1.5)`\n                  : size === 'medium'\n                  ? `calc(${theme.vars.spacing.unit} * 2)`\n                  : `calc(${theme.vars.spacing.unit} * 2.5)`,\n              height:\n                size === 'small'\n                  ? `calc(${theme.vars.spacing.unit} * 1.5)`\n                  : size === 'medium'\n                  ? `calc(${theme.vars.spacing.unit} * 2)`\n                  : `calc(${theme.vars.spacing.unit} * 2.5)`,\n            }}\n          />\n        )}\n        {!loading && startIcon && <span>{startIcon}</span>}\n        {children && <>{children}</>}\n        {!loading && endIcon && <span>{endIcon}</span>}\n      </button>\n    );\n  },\n);\n\nButton.displayName = 'Button';\n\nexport default Button;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, CSSProperties} from 'react';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport {clsx} from 'clsx';\nimport useTheme from '../../../contexts/Theme/useTheme';\n\nexport type SpinnerSize = 'small' | 'medium' | 'large';\n\nexport interface SpinnerProps {\n  /**\n   * Size of the spinner\n   */\n  size?: SpinnerSize;\n  /**\n   * Custom color for the spinner\n   */\n  color?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Custom styles\n   */\n  style?: CSSProperties;\n}\n\n/**\n * Spinner component for loading states\n *\n * @example\n * ```tsx\n * // Basic spinner\n * <Spinner />\n *\n * // Large spinner with custom color\n * <Spinner size=\"large\" color=\"#3b82f6\" />\n *\n * // Small spinner\n * <Spinner size=\"small\" />\n * ```\n */\nconst Spinner: FC<SpinnerProps> = ({size = 'medium', color, className, style}) => {\n  const {theme} = useTheme();\n\n  const spinnerSize = {\n    small: '16px',\n    medium: '20px',\n    large: '32px',\n  }[size];\n\n  const spinnerColor = color || theme.vars.colors.primary.main;\n\n  const spinnerStyle: CSSProperties = {\n    width: spinnerSize,\n    height: spinnerSize,\n    border: '2px solid transparent',\n    borderTop: `2px solid ${spinnerColor}`,\n    borderRadius: '50%',\n    animation: 'asgardeo-spinner-spin 1s linear infinite',\n    ...style,\n  };\n\n  return (\n    <>\n      <style>\n        {`\n          @keyframes asgardeo-spinner-spin {\n            0% { transform: rotate(0deg); }\n            100% { transform: rotate(360deg); }\n          }\n        `}\n      </style>\n      <span\n        className={clsx(withVendorCSSClassPrefix('spinner'), className)}\n        style={spinnerStyle}\n        role=\"status\"\n        aria-label=\"Loading\"\n      />\n    </>\n  );\n};\n\nexport default Spinner;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoRuntimeError} from '@asgardeo/browser';\nimport {forwardRef, ForwardRefExoticComponent, MouseEvent, ReactElement, Ref, RefAttributes, useState} from 'react';\nimport BaseSignInButton, {BaseSignInButtonProps} from './BaseSignInButton';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useTranslation from '../../../hooks/useTranslation';\n\n/**\n * Props interface of {@link SignInButton}\n */\nexport type SignInButtonProps = BaseSignInButtonProps;\n\n/**\n * SignInButton component that supports both render props and traditional props patterns.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example Using render props\n * ```tsx\n * <SignInButton>\n *   {({signIn, isLoading}) => (\n *     <button onClick={signIn} disabled={isLoading}>\n *       {isLoading ? 'Signing in...' : 'Sign In'}\n *     </button>\n *   )}\n * </SignInButton>\n * ```\n *\n * @example Using traditional props\n * ```tsx\n * <SignInButton className=\"custom-button\">Sign In</SignInButton>\n * ```\n *\n * @example Using component-level preferences\n * ```tsx\n * <SignInButton\n *   preferences={{\n *     i18n: {\n *       bundles: {\n *         'en-US': {\n *           translations: {\n *             'buttons.signIn': 'Custom Sign In Text'\n *           }\n *         }\n *       }\n *     }\n *   }}\n * >\n *   Custom Sign In\n * </SignInButton>\n * ```\n */\nconst SignInButton: ForwardRefExoticComponent<SignInButtonProps & RefAttributes<HTMLButtonElement>> = forwardRef<\n  HTMLButtonElement,\n  SignInButtonProps\n>(({children, onClick, preferences, ...rest}: SignInButtonProps, ref: Ref<HTMLButtonElement>): ReactElement => {\n  const {signIn, signInUrl} = useAsgardeo();\n  const {t} = useTranslation(preferences?.i18n);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSignIn = async (e?: MouseEvent<HTMLButtonElement>): Promise<void> => {\n    try {\n      setIsLoading(true);\n\n      // If a custom `signInUrl` is provided, use it for navigation.\n      if (signInUrl) {\n        window.history.pushState(null, '', signInUrl);\n\n        window.dispatchEvent(new PopStateEvent('popstate', {state: null}));\n      } else {\n        await signIn();\n      }\n\n      if (onClick) {\n        onClick(e);\n      }\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Sign in failed: ${error instanceof Error ? error.message : String(error)}`,\n        'SignInButton-handleSignIn-RuntimeError-001',\n        'react',\n        'Something went wrong while trying to sign in. Please try again later.',\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <BaseSignInButton\n      ref={ref}\n      onClick={handleSignIn}\n      isLoading={isLoading}\n      signIn={handleSignIn}\n      preferences={preferences}\n      {...rest}\n    >\n      {children ?? t('elements.buttons.signIn')}\n    </BaseSignInButton>\n  );\n});\n\nSignInButton.displayName = 'SignInButton';\n\nexport default SignInButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {WithPreferences, withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {\n  forwardRef,\n  ForwardRefExoticComponent,\n  ButtonHTMLAttributes,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefAttributes,\n} from 'react';\nimport Button from '../../primitives/Button/Button';\n\n/**\n * Common props shared by all {@link BaseSignOutButton} components.\n */\nexport interface CommonBaseSignOutButtonProps {\n  /**\n   * Loading state during sign-out process\n   */\n  isLoading?: boolean;\n  /**\n   * Function to initiate the sign-out process\n   */\n  signOut: () => Promise<void>;\n}\n\n/**\n * Props passed to the render function of {@link BaseSignOutButton}\n */\nexport type BaseSignOutButtonRenderProps = CommonBaseSignOutButtonProps;\n\n/**\n * Props interface of {@link BaseSignOutButton}\n */\nexport interface BaseSignOutButtonProps\n  extends Partial<CommonBaseSignOutButtonProps>,\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'children'>,\n    WithPreferences {\n  /**\n   * Render prop function that receives sign-out props, or traditional ReactNode children\n   */\n  children?: ((props: BaseSignOutButtonRenderProps) => ReactNode) | ReactNode;\n}\n\n/**\n * Base SignOutButton component that supports both render props and traditional props patterns.\n *\n * @example Using render props\n * ```tsx\n * <BaseSignOutButton>\n *   {({signOut, isLoading}) => (\n *     <button onClick={signOut} disabled={isLoading}>\n *       {isLoading ? 'Signing out...' : 'Sign Out'}\n *     </button>\n *   )}\n * </BaseSignOutButton>\n * ```\n *\n * @example Using traditional props\n * ```tsx\n * <BaseSignOutButton className=\"custom-button\">Sign Out</BaseSignOutButton>\n * ```\n */\nconst BaseSignOutButton: ForwardRefExoticComponent<BaseSignOutButtonProps & RefAttributes<HTMLButtonElement>> =\n  forwardRef<HTMLButtonElement, BaseSignOutButtonProps>(\n    (\n      {children, className, style, signOut, isLoading, preferences, ...rest}: BaseSignOutButtonProps,\n      ref: Ref<HTMLButtonElement>,\n    ): ReactElement => {\n      if (typeof children === 'function') {\n        return <>{children({isLoading, signOut})}</>;\n      }\n\n      return (\n        <Button\n          ref={ref}\n          className={clsx(withVendorCSSClassPrefix('sign-out-button'), className)}\n          style={style}\n          disabled={isLoading}\n          loading={isLoading}\n          type=\"button\"\n          color=\"secondary\"\n          variant=\"outline\"\n          {...rest}\n        >\n          {children}\n        </Button>\n      );\n    },\n  );\n\nBaseSignOutButton.displayName = 'BaseSignOutButton';\n\nexport default BaseSignOutButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoRuntimeError} from '@asgardeo/browser';\nimport {forwardRef, ForwardRefExoticComponent, MouseEvent, ReactElement, Ref, RefAttributes, useState} from 'react';\nimport BaseSignOutButton, {BaseSignOutButtonProps} from './BaseSignOutButton';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useTranslation from '../../../hooks/useTranslation';\n\n/**\n * Props interface of {@link SignOutButton}\n */\nexport type SignOutButtonProps = BaseSignOutButtonProps;\n\n/**\n * SignOutButton component that supports both render props and traditional props patterns.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example Using render props pattern\n * ```tsx\n * <SignOutButton>\n *   {({signOut, isLoading}) => (\n *     <button onClick={signOut} disabled={isLoading}>\n *       {isLoading ? 'Signing out...' : 'Sign Out'}\n *     </button>\n *   )}\n * </SignOutButton>\n * ```\n *\n * @example Using traditional props pattern\n * ```tsx\n * <SignOutButton className=\"custom-button\">Sign Out</SignOutButton>\n * ```\n *\n * @example Using component-level preferences\n * ```tsx\n * <SignOutButton\n *   preferences={{\n *     i18n: {\n *       bundles: {\n *         'en-US': {\n *           translations: {\n *             'buttons.signOut': 'Custom Sign Out Text'\n *           }\n *         }\n *       }\n *     }\n *   }}\n * >\n *   Custom Sign Out\n * </SignOutButton>\n * ```\n */\nconst SignOutButton: ForwardRefExoticComponent<SignOutButtonProps & RefAttributes<HTMLButtonElement>> = forwardRef<\n  HTMLButtonElement,\n  SignOutButtonProps\n>(({children, onClick, preferences, ...rest}: SignOutButtonProps, ref: Ref<HTMLButtonElement>): ReactElement => {\n  const {signOut} = useAsgardeo();\n  const {t} = useTranslation(preferences?.i18n);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSignOut = async (e?: MouseEvent<HTMLButtonElement>): Promise<void> => {\n    try {\n      setIsLoading(true);\n\n      await signOut();\n\n      if (onClick) {\n        onClick(e);\n      }\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Sign out failed: ${error instanceof Error ? error.message : String(error)}`,\n        'SignOutButton-handleSignOut-RuntimeError-001',\n        'react',\n        'Something went wrong while trying to sign out. Please try again later.',\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <BaseSignOutButton\n      ref={ref}\n      onClick={handleSignOut}\n      isLoading={isLoading}\n      signOut={handleSignOut}\n      preferences={preferences}\n      {...rest}\n    >\n      {children ?? t('elements.buttons.signOut')}\n    </BaseSignOutButton>\n  );\n});\n\nSignOutButton.displayName = 'SignOutButton';\n\nexport default SignOutButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {WithPreferences, withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {\n  forwardRef,\n  ForwardRefExoticComponent,\n  ButtonHTMLAttributes,\n  ReactElement,\n  ReactNode,\n  Ref,\n  RefAttributes,\n} from 'react';\nimport Button from '../../primitives/Button/Button';\n\n/**\n * Common props shared by all {@link BaseSignUpButton} components.\n */\nexport interface CommonBaseSignUpButtonProps {\n  /**\n   * Loading state during sign-up process\n   */\n  isLoading?: boolean;\n  /**\n   * Function to initiate the sign-up process\n   */\n  signUp?: () => Promise<void>;\n}\n\n/**\n * Props passed to the render function of {@link BaseSignUpButton}\n */\nexport type BaseSignUpButtonRenderProps = CommonBaseSignUpButtonProps;\n\n/**\n * Props interface of {@link BaseSignUpButton}\n */\nexport interface BaseSignUpButtonProps\n  extends CommonBaseSignUpButtonProps,\n    Omit<ButtonHTMLAttributes<HTMLButtonElement>, 'children'>,\n    WithPreferences {\n  /**\n   * Render prop function that receives sign-up props, or traditional ReactNode children\n   */\n  children?: ((props: BaseSignUpButtonRenderProps) => ReactNode) | ReactNode;\n}\n\n/**\n * Base SignUpButton component that supports both render props and traditional props patterns.\n *\n * @example Using render props\n * ```tsx\n * <BaseSignUpButton>\n *   {({ signUp, isLoading }) => (\n *     <button onClick={signUp} disabled={isLoading}>\n *       {isLoading ? 'Creating account...' : 'Create Account'}\n *     </button>\n *   )}\n * </BaseSignUpButton>\n * ```\n *\n * @example Using traditional props\n * ```tsx\n * <BaseSignUpButton className=\"custom-button\">Create Account</BaseSignUpButton>\n * ```\n */\nconst BaseSignUpButton: ForwardRefExoticComponent<BaseSignUpButtonProps & RefAttributes<HTMLButtonElement>> =\n  forwardRef<HTMLButtonElement, BaseSignUpButtonProps>(\n    (\n      {children, className, style, signUp, isLoading, preferences, ...rest}: BaseSignUpButtonProps,\n      ref: Ref<HTMLButtonElement>,\n    ): ReactElement => {\n      if (typeof children === 'function') {\n        return <>{children({isLoading, signUp})}</>;\n      }\n\n      return (\n        <Button\n          ref={ref}\n          className={clsx(withVendorCSSClassPrefix('sign-up-button'), className)}\n          style={style}\n          disabled={isLoading}\n          loading={isLoading}\n          type=\"button\"\n          color=\"primary\"\n          variant=\"outline\"\n          {...rest}\n        >\n          {children}\n        </Button>\n      );\n    },\n  );\n\nBaseSignUpButton.displayName = 'BaseSignUpButton';\n\nexport default BaseSignUpButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AsgardeoRuntimeError} from '@asgardeo/browser';\nimport {forwardRef, ForwardRefExoticComponent, MouseEvent, ReactElement, Ref, RefAttributes, useState} from 'react';\nimport BaseSignUpButton, {BaseSignUpButtonProps} from './BaseSignUpButton';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useTranslation from '../../../hooks/useTranslation';\n\n/**\n * Props interface of {@link SignUpButton}\n */\nexport type SignUpButtonProps = BaseSignUpButtonProps;\n\n/**\n * SignUpButton component that supports both render props and traditional props patterns.\n * It redirects the user to the Asgardeo sign-up page configured for the application.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example Using render props pattern\n * ```tsx\n * <SignUpButton>\n *   {({ signUp, isLoading }) => (\n *     <button onClick={signUp} disabled={isLoading}>\n *       {isLoading ? 'Creating Account...' : 'Create Account'}\n *     </button>\n *   )}\n * </SignUpButton>\n * ```\n *\n * @example Using traditional props pattern\n * ```tsx\n * <SignUpButton className=\"custom-button\">Create Account</SignUpButton>\n * ```\n *\n * @example Using component-level preferences\n * ```tsx\n * <SignUpButton\n *   preferences={{\n *     i18n: {\n *       bundles: {\n *         'en-US': {\n *           translations: {\n *             'buttons.signUp': 'Custom Sign Up Text'\n *           }\n *         }\n *       }\n *     }\n *   }}\n * >\n *   Custom Sign Up\n * </SignUpButton>\n * ```\n */\nconst SignUpButton: ForwardRefExoticComponent<SignUpButtonProps & RefAttributes<HTMLButtonElement>> = forwardRef<\n  HTMLButtonElement,\n  SignUpButtonProps\n>(({children, onClick, preferences, ...rest}: SignUpButtonProps, ref: Ref<HTMLButtonElement>): ReactElement => {\n  const {signUp, signUpUrl} = useAsgardeo();\n  const {t} = useTranslation(preferences?.i18n);\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const handleSignUp = async (e?: MouseEvent<HTMLButtonElement>): Promise<void> => {\n    try {\n      setIsLoading(true);\n\n      // If a custom `signUpUrl` is provided, use it for navigation.\n      if (signUpUrl) {\n        window.history.pushState(null, '', signUpUrl);\n\n        window.dispatchEvent(new PopStateEvent('popstate', {state: null}));\n      } else {\n        await signUp();\n      }\n\n      if (onClick) {\n        onClick(e);\n      }\n    } catch (error) {\n      throw new AsgardeoRuntimeError(\n        `Sign up failed: ${error instanceof Error ? error.message : String(error)}`,\n        'SignUpButton-handleSignUp-RuntimeError-001',\n        'react',\n        'Something went wrong while trying to sign up. Please try again later.',\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <BaseSignUpButton\n      ref={ref}\n      onClick={handleSignUp}\n      isLoading={isLoading}\n      signUp={handleSignUp}\n      preferences={preferences}\n      {...rest}\n    >\n      {children ?? t('elements.buttons.signUp')}\n    </BaseSignUpButton>\n  );\n});\n\nSignUpButton.displayName = 'SignUpButton';\n\nexport default SignUpButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactNode} from 'react';\nimport useAsgardeo from '../../contexts/Asgardeo/useAsgardeo';\n\n/**\n * Props for the SignedIn component.\n */\nexport interface SignedInProps {\n  /**\n   * Content to show when the user is not signed in.\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * A component that only renders its children when the user is signed in.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example\n * ```tsx\n * import { SignedIn } from '@asgardeo/auth-react';\n *\n * const App = () => {\n *   return (\n *     <SignedIn fallback={<p>Please sign in to continue</p>}>\n *       <p>Welcome! You are signed in.</p>\n *     </SignedIn>\n *   );\n * }\n * ```\n */\nconst SignedIn: FC<PropsWithChildren<SignedInProps>> = ({\n  children,\n  fallback = null,\n}: PropsWithChildren<SignedInProps>) => {\n  const {isSignedIn} = useAsgardeo();\n\n  if (!isSignedIn) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n\nSignedIn.displayName = 'SignedIn';\n\nexport default SignedIn;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactNode} from 'react';\nimport useAsgardeo from '../../contexts/Asgardeo/useAsgardeo';\n\n/**\n * Props for the SignedOut component.\n */\nexport interface SignedOutProps {\n  /**\n   * Content to show when the user is signed in.\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * A component that only renders its children when the user is signed out.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example\n * ```tsx\n * import { SignedOut } from '@asgardeo/auth-react';\n *\n * const App = () => {\n *   return (\n *     <SignedOut fallback={<p>You are already signed in</p>}>\n *       <p>Please sign in to continue</p>\n *     </SignedOut>\n *   );\n * }\n * ```\n */\nconst SignedOut: FC<PropsWithChildren<SignedOutProps>> = ({\n  children,\n  fallback = null,\n}: PropsWithChildren<SignedOutProps>) => {\n  const {isSignedIn} = useAsgardeo();\n\n  if (!isSignedIn) {\n    return <>{children}</>;\n  }\n\n  return <>{fallback}</>;\n};\n\nSignedOut.displayName = 'SignedOut';\n\nexport default SignedOut;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, PropsWithChildren, ReactNode} from 'react';\nimport useAsgardeo from '../../contexts/Asgardeo/useAsgardeo';\n\n/**\n * Props for the Loading component.\n */\nexport interface AsgardeoLoadingProps {\n  /**\n   * Content to show when the user is not signed in.\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * A component that only renders its children when the Asgardeo is loading.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example\n * ```tsx\n * import { AsgardeoLoading } from '@asgardeo/auth-react';\n *\n * const App = () => {\n *   return (\n *     <AsgardeoLoading fallback={<p>Finished Loading...</p>}>\n *       <p>Loading...</p>\n *     </AsgardeoLoading>\n *   );\n * }\n * ```\n */\nconst AsgardeoLoading: FC<PropsWithChildren<AsgardeoLoadingProps>> = ({\n  children,\n  fallback = null,\n}: PropsWithChildren<AsgardeoLoadingProps>) => {\n  const {isLoading} = useAsgardeo();\n\n  if (!isLoading) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children}</>;\n};\n\nAsgardeoLoading.displayName = 'AsgardeoLoading';\n\nexport default AsgardeoLoading;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  EmbeddedSignInFlowAuthenticator,\n  EmbeddedSignInFlowInitiateResponse,\n  EmbeddedSignInFlowHandleResponse,\n  EmbeddedSignInFlowStepType,\n  EmbeddedSignInFlowStatus,\n  EmbeddedSignInFlowAuthenticatorPromptType,\n  ApplicationNativeAuthenticationConstants,\n  AsgardeoAPIError,\n  withVendorCSSClassPrefix,\n  EmbeddedSignInFlowHandleRequestPayload,\n  EmbeddedFlowExecuteRequestConfig,\n} from '@asgardeo/browser';\nimport {clsx} from 'clsx';\nimport {FC, ReactElement, FormEvent, useEffect, useState, useCallback, useRef, useMemo, CSSProperties} from 'react';\nimport {createSignInOptionFromAuthenticator} from './options/SignInOptionFactory';\nimport FlowProvider from '../../../contexts/Flow/FlowProvider';\nimport useFlow from '../../../contexts/Flow/useFlow';\nimport {useForm, FormField} from '../../../hooks/useForm';\nimport useTranslation from '../../../hooks/useTranslation';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport Alert from '../../primitives/Alert/Alert';\nimport Card, {CardProps} from '../../primitives/Card/Card';\nimport Divider from '../../primitives/Divider/Divider';\nimport Logo from '../../primitives/Logo/Logo';\nimport Spinner from '../../primitives/Spinner/Spinner';\nimport Typography from '../../primitives/Typography/Typography';\n\n/**\n * Utility functions for WebAuthn/Passkey operations\n */\n\n/**\n * Convert base64url string to ArrayBuffer\n */\nconst base64urlToArrayBuffer = (base64url: string): ArrayBuffer => {\n  // Add padding if needed\n  const padding = '='.repeat((4 - (base64url.length % 4)) % 4);\n  const base64 = base64url.replace(/-/g, '+').replace(/_/g, '/') + padding;\n\n  const binaryString = atob(base64);\n  const bytes = new Uint8Array(binaryString.length);\n  for (let i = 0; i < binaryString.length; i++) {\n    bytes[i] = binaryString.charCodeAt(i);\n  }\n  return bytes.buffer;\n};\n\n/**\n * Convert ArrayBuffer to base64url string\n */\nconst arrayBufferToBase64url = (buffer: ArrayBuffer): string => {\n  const bytes = new Uint8Array(buffer);\n  let binary = '';\n  for (let i = 0; i < bytes.byteLength; i++) {\n    binary += String.fromCharCode(bytes[i]);\n  }\n  return btoa(binary).replace(/\\+/g, '-').replace(/\\//g, '_').replace(/=/g, '');\n};\n\n/**\n * Handle WebAuthn authentication\n */\nconst handleWebAuthnAuthentication = async (challengeData: string): Promise<string> => {\n  // Check if WebAuthn is supported\n  if (!window.navigator.credentials || !window.navigator.credentials.get) {\n    throw new Error(\n      'WebAuthn is not supported in this browser. Please use a modern browser or try a different authentication method.',\n    );\n  }\n\n  // Check if we're on HTTPS (required for WebAuthn)\n  if (window.location.protocol !== 'https:' && window.location.hostname !== 'localhost') {\n    throw new Error(\n      'Passkey authentication requires a secure connection (HTTPS). Please ensure you are accessing this site over HTTPS.',\n    );\n  }\n\n  try {\n    // Decode the challenge data\n    const decodedChallenge = JSON.parse(atob(challengeData));\n    const {publicKeyCredentialRequestOptions} = decodedChallenge;\n\n    // Handle RP ID mismatch by checking domain compatibility\n    const currentDomain = window.location.hostname;\n    const challengeRpId = publicKeyCredentialRequestOptions.rpId;\n\n    let rpIdToUse = challengeRpId;\n\n    // Check if the challenge RP ID is compatible with current domain\n    if (challengeRpId && !currentDomain.endsWith(challengeRpId) && challengeRpId !== currentDomain) {\n      console.warn(`RP ID mismatch detected. Challenge RP ID: ${challengeRpId}, Current domain: ${currentDomain}`);\n      // Use current domain as fallback to avoid errors\n      rpIdToUse = currentDomain;\n    }\n\n    const adjustedOptions = {\n      ...publicKeyCredentialRequestOptions,\n      rpId: rpIdToUse,\n      challenge: base64urlToArrayBuffer(publicKeyCredentialRequestOptions.challenge),\n      // Convert user handle if present\n      ...(publicKeyCredentialRequestOptions.userVerification && {\n        userVerification: publicKeyCredentialRequestOptions.userVerification,\n      }),\n      // Convert allowCredentials if present\n      ...(publicKeyCredentialRequestOptions.allowCredentials && {\n        allowCredentials: publicKeyCredentialRequestOptions.allowCredentials.map((cred: any) => ({\n          ...cred,\n          id: base64urlToArrayBuffer(cred.id),\n        })),\n      }),\n    };\n\n    // Convert challenge from base64url to ArrayBuffer\n    const credential = (await navigator.credentials.get({\n      publicKey: adjustedOptions,\n    })) as PublicKeyCredential;\n\n    if (!credential) {\n      throw new Error('No credential returned from WebAuthn');\n    }\n\n    const authData = credential.response as AuthenticatorAssertionResponse;\n\n    // Create the token response for the server\n    const tokenResponse = {\n      requestId: decodedChallenge.requestId,\n      credential: {\n        id: credential.id,\n        rawId: arrayBufferToBase64url(credential.rawId),\n        response: {\n          authenticatorData: arrayBufferToBase64url(authData.authenticatorData),\n          clientDataJSON: arrayBufferToBase64url(authData.clientDataJSON),\n          signature: arrayBufferToBase64url(authData.signature),\n          ...(authData.userHandle && {\n            userHandle: arrayBufferToBase64url(authData.userHandle),\n          }),\n        },\n        type: credential.type,\n      },\n    };\n\n    return JSON.stringify(tokenResponse);\n  } catch (error) {\n    console.error('WebAuthn authentication failed:', error);\n\n    // Handle specific error cases\n    if (error instanceof Error) {\n      if (error.name === 'NotAllowedError') {\n        throw new Error('Passkey authentication was cancelled or timed out. Please try again.');\n      } else if (error.name === 'SecurityError') {\n        if (error.message.includes('relying party ID') || error.message.includes('RP ID')) {\n          throw new Error(\n            'Domain mismatch error. The passkey was registered for a different domain. Please contact support or try a different authentication method.',\n          );\n        } else {\n          throw new Error(\n            'Passkey authentication failed. Please ensure you are using HTTPS and that your browser supports passkeys.',\n          );\n        }\n      } else if (error.name === 'InvalidStateError') {\n        throw new Error(\n          'No valid passkey found for this account. Please register a passkey first or use a different authentication method.',\n        );\n      } else if (error.name === 'NotSupportedError') {\n        throw new Error(\n          'Passkey authentication is not supported on this device or browser. Please use a different authentication method.',\n        );\n      } else if (error.name === 'NetworkError') {\n        throw new Error('Network error during passkey authentication. Please check your connection and try again.');\n      } else if (error.name === 'UnknownError') {\n        throw new Error(\n          'An unknown error occurred during passkey authentication. Please try again or use a different authentication method.',\n        );\n      }\n    }\n\n    throw new Error(`Passkey authentication failed: ${error instanceof Error ? error.message : 'Unknown error'}`);\n  }\n};\n\n/**\n * Check if the authenticator is a passkey/FIDO authenticator\n */\nconst isPasskeyAuthenticator = (authenticator: EmbeddedSignInFlowAuthenticator): boolean =>\n  authenticator.authenticatorId === ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Passkey &&\n  authenticator.metadata?.promptType === EmbeddedSignInFlowAuthenticatorPromptType.InternalPrompt &&\n  (authenticator.metadata as any)?.additionalData?.challengeData;\n\n/**\n * Props for the BaseSignIn component.\n */\nexport interface BaseSignInProps {\n  afterSignInUrl?: string;\n\n  /**\n   * Custom CSS class name for the submit button.\n   */\n  buttonClassName?: string;\n\n  /**\n   * Custom CSS class name for the form container.\n   */\n  className?: string;\n\n  /**\n   * Custom CSS class name for error messages.\n   */\n  errorClassName?: string;\n\n  /**\n   * Custom CSS class name for form inputs.\n   */\n  inputClassName?: string;\n\n  /**\n   * Custom CSS class name for info messages.\n   */\n  messageClassName?: string;\n\n  /**\n   * Callback function called when authentication fails.\n   * @param error - The error that occurred during authentication.\n   */\n  onError?: (error: Error) => void;\n\n  /**\n   * Callback function called when authentication flow status changes.\n   * @param response - The current authentication response.\n   */\n  onFlowChange?: (response: EmbeddedSignInFlowInitiateResponse | EmbeddedSignInFlowHandleResponse) => void;\n\n  /**\n   * Flag to determine the component is ready to be rendered.\n   */\n  isLoading?: boolean;\n\n  /**\n   * Function to initialize authentication flow.\n   * @returns Promise resolving to the initial authentication response.\n   */\n  onInitialize?: () => Promise<EmbeddedSignInFlowInitiateResponse>;\n\n  /**\n   * Function to handle authentication steps.\n   * @param payload - The authentication payload.\n   * @returns Promise resolving to the authentication response.\n   */\n  onSubmit?: (\n    payload: EmbeddedSignInFlowHandleRequestPayload,\n    request: EmbeddedFlowExecuteRequestConfig,\n  ) => Promise<EmbeddedSignInFlowHandleResponse>;\n\n  /**\n   * Callback function called when authentication is successful.\n   * @param authData - The authentication data returned upon successful completion.\n   */\n  onSuccess?: (authData: Record<string, any>) => void;\n\n  /**\n   * Size variant for the component.\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Theme variant for the component.\n   */\n  variant?: CardProps['variant'];\n}\n\n/**\n * Custom hook for managing component styles\n */\nconst useStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    () => ({\n      card: {\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n        minWidth: '420px',\n      } as CSSProperties,\n      header: {\n        gap: 0,\n      } as CSSProperties,\n      subtitle: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 1)`,\n      } as CSSProperties,\n      messagesContainer: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      messageItem: {\n        marginBottom: `calc(${theme.vars.spacing.unit} * 1)`,\n      } as CSSProperties,\n      errorContainer: {\n        marginBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      contentContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      loadingContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n      } as CSSProperties,\n      loadingText: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      divider: {\n        margin: `calc(${theme.vars.spacing.unit} * 1) 0`,\n      } as CSSProperties,\n      logoContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: `calc(${theme.vars.spacing.unit} * 3)`,\n      } as CSSProperties,\n      centeredContainer: {\n        textAlign: 'center',\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n      } as CSSProperties,\n      passkeyContainer: {\n        marginBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      passkeyText: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 1)`,\n        color: theme.vars.colors.text.secondary,\n      } as CSSProperties,\n    }),\n    [theme.vars.spacing.unit, theme.vars.colors.text.secondary],\n  );\n};\n\n/**\n * Base SignIn component that provides native authentication flow.\n * This component handles both the presentation layer and authentication flow logic.\n * It accepts API functions as props to maintain framework independence.\n *\n * @example\n * ```tsx\n * import { BaseSignIn } from '@asgardeo/react';\n *\n * const MySignIn = () => {\n *   return (\n *     <BaseSignIn\n *       onInitialize={async () => {\n *         // Your API call to initialize authentication\n *         return await initializeAuth();\n *       }}\n *       onSubmit={async (payload) => {\n *         // Your API call to handle authentication\n *         return await handleAuth(payload);\n *       }}\n *       onSuccess={(authData) => {\n *         console.log('Success:', authData);\n *       }}\n *       onError={(error) => {\n *         console.error('Error:', error);\n *       }}\n *       className=\"max-w-md mx-auto\"\n *     />\n *   );\n * };\n * ```\n */\nconst BaseSignIn: FC<BaseSignInProps> = props => {\n  const {theme} = useTheme();\n  const styles = useStyles();\n\n  return (\n    <div>\n      <div style={styles.logoContainer}>\n        <Logo size=\"large\" />\n      </div>\n      <FlowProvider>\n        <BaseSignInContent {...props} />\n      </FlowProvider>\n    </div>\n  );\n};\n\n/**\n * Internal component that consumes FlowContext and renders the sign-in UI.\n */\nconst BaseSignInContent: FC<BaseSignInProps> = ({\n  afterSignInUrl,\n  onInitialize,\n  isLoading: externalIsLoading,\n  onSubmit,\n  onSuccess,\n  onError,\n  onFlowChange,\n  className = '',\n  inputClassName = '',\n  buttonClassName = '',\n  errorClassName = '',\n  messageClassName = '',\n  size = 'medium',\n  variant = 'outlined',\n}: BaseSignInProps) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation();\n  const {subtitle: flowSubtitle, title: flowTitle, messages: flowMessages} = useFlow();\n  const styles = useStyles();\n\n  const [isSignInInitializationRequestLoading, setIsSignInInitializationRequestLoading] = useState(false);\n  const [isInitialized, setIsInitialized] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState<EmbeddedSignInFlowInitiateResponse | null>(null);\n  const [currentAuthenticator, setCurrentAuthenticator] = useState<EmbeddedSignInFlowAuthenticator | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [messages, setMessages] = useState<Array<{message: string; type: string}>>([]);\n\n  const isLoading = externalIsLoading || isSignInInitializationRequestLoading;\n\n  const reRenderCheckRef = useRef(false);\n\n  const formFields: FormField[] =\n    currentAuthenticator?.metadata?.params?.map(param => ({\n      name: param.param,\n      required: currentAuthenticator.requiredParams.includes(param.param),\n      initialValue: '',\n      validator: (value: string) => {\n        if (currentAuthenticator.requiredParams.includes(param.param) && (!value || value.trim() === '')) {\n          return t('field.required');\n        }\n        return null;\n      },\n    })) || [];\n\n  const form = useForm<Record<string, string>>({\n    initialValues: {},\n    fields: formFields,\n    validateOnBlur: true,\n    validateOnChange: false,\n    requiredMessage: t('field.required'),\n  });\n\n  const {\n    values: formValues,\n    touched: touchedFields,\n    errors: formErrors,\n    isValid: isFormValid,\n    setValue: setFormValue,\n    setTouched: setFormTouched,\n    clearErrors: clearFormErrors,\n    validateField: validateFormField,\n    validateForm,\n    touchAllFields,\n    reset: resetForm,\n  } = form;\n\n  /**\n   * Setup form fields based on the current authenticator.\n   */\n  const setupFormFields = useCallback(\n    (authenticator: EmbeddedSignInFlowAuthenticator) => {\n      const initialValues: Record<string, string> = {};\n      authenticator.metadata?.params?.forEach(param => {\n        initialValues[param.param] = '';\n      });\n\n      // Reset form with new values\n      resetForm();\n\n      // Set initial values for all fields\n      Object.keys(initialValues).forEach(key => {\n        setFormValue(key, initialValues[key]);\n      });\n    },\n    [resetForm, setFormValue],\n  );\n\n  /**\n   * Mark all fields as touched for validation purposes.\n   */\n  const markAllFieldsAsTouched = () => {\n    touchAllFields();\n  };\n\n  /**\n   * Check if the response contains a redirection URL and perform the redirect if necessary.\n   * @param response - The authentication response\n   * @returns true if a redirect was performed, false otherwise\n   */\n  const handleRedirectionIfNeeded = (response: EmbeddedSignInFlowHandleResponse): boolean => {\n    if (\n      response &&\n      'nextStep' in response &&\n      response.nextStep &&\n      (response.nextStep as any).stepType === EmbeddedSignInFlowStepType.AuthenticatorPrompt &&\n      (response.nextStep as any).authenticators &&\n      (response.nextStep as any).authenticators.length === 1\n    ) {\n      const responseAuthenticator = (response.nextStep as any).authenticators[0];\n      if (\n        responseAuthenticator.metadata?.promptType === EmbeddedSignInFlowAuthenticatorPromptType.RedirectionPrompt &&\n        (responseAuthenticator.metadata as any)?.additionalData?.redirectUrl\n      ) {\n        /**\n         * Open a popup window to handle redirection prompts\n         */\n        const redirectUrl = (responseAuthenticator.metadata as any)?.additionalData?.redirectUrl;\n        const popup = window.open(redirectUrl, 'oauth_popup', 'width=500,height=600,scrollbars=yes,resizable=yes');\n\n        if (!popup) {\n          console.error('Failed to open popup window');\n          return false;\n        }\n\n        /**\n         * Add an event listener to the window to capture the message from the popup\n         */\n        const messageHandler = async function messageEventHandler(event: MessageEvent) {\n          /**\n           * Check if the message is from our popup window\n           */\n          if (event.source !== popup) {\n            // Don't log every message rejection to reduce noise\n            if (event.source !== window && event.source !== window.parent) {\n              // TODO: Add logs\n            }\n            return;\n          }\n\n          /**\n           * Check the origin of the message to ensure it's from a trusted source\n           */\n          const expectedOrigin = afterSignInUrl ? new URL(afterSignInUrl).origin : window.location.origin;\n          if (event.origin !== expectedOrigin && event.origin !== window.location.origin) {\n            return;\n          }\n\n          const {code, state} = event.data;\n\n          if (code && state) {\n            const payload = {\n              flowId: currentFlow.flowId,\n              selectedAuthenticator: {\n                authenticatorId: responseAuthenticator.authenticatorId,\n                params: {\n                  code,\n                  state,\n                },\n              },\n            };\n\n            await onSubmit(payload, {\n              method: currentFlow?.links[0].method,\n              url: currentFlow?.links[0].href,\n            });\n\n            popup.close();\n            cleanup();\n          } else {\n            // TODO: Add logs\n          }\n        };\n\n        const cleanup = () => {\n          window.removeEventListener('message', messageHandler);\n          if (popupMonitor) {\n            clearInterval(popupMonitor);\n          }\n        };\n\n        window.addEventListener('message', messageHandler);\n\n        /**\n         * Monitor popup for closure and URL changes\n         */\n        let hasProcessedCallback = false; // Prevent multiple processing\n        const popupMonitor = setInterval(async () => {\n          try {\n            if (popup.closed) {\n              cleanup();\n\n              return;\n            }\n\n            // Skip if we've already processed a callback\n            if (hasProcessedCallback) {\n              return;\n            }\n\n            // Try to access popup URL to check for callback\n            try {\n              const popupUrl = popup.location.href;\n\n              // Check if we've been redirected to the callback URL\n              if (popupUrl && (popupUrl.includes('code=') || popupUrl.includes('error='))) {\n                hasProcessedCallback = true; // Set flag to prevent multiple processing\n\n                // Parse the URL for OAuth parameters\n                const url = new URL(popupUrl);\n                const code = url.searchParams.get('code');\n                const state = url.searchParams.get('state');\n                const error = url.searchParams.get('error');\n\n                if (error) {\n                  console.error('OAuth error:', error);\n                  popup.close();\n                  cleanup();\n                  return;\n                }\n\n                if (code && state) {\n                  const payload = {\n                    flowId: currentFlow.flowId,\n                    selectedAuthenticator: {\n                      authenticatorId: responseAuthenticator.authenticatorId,\n                      params: {\n                        code,\n                        state,\n                      },\n                    },\n                  };\n\n                  const response = await onSubmit(payload, {\n                    method: currentFlow?.links[0].method,\n                    url: currentFlow?.links[0].href,\n                  });\n\n                  popup.close();\n\n                  onFlowChange?.(response);\n\n                  if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n                    onSuccess?.(response.authData);\n                  }\n                }\n              }\n            } catch (e) {\n              // Cross-origin error is expected when popup navigates to OAuth provider\n              // This is normal and we can ignore it\n            }\n          } catch (e) {\n            console.error('Error monitoring popup:', e);\n          }\n        }, 1000);\n\n        return true;\n      }\n    }\n    return false;\n  };\n\n  /**\n   * Handle form submission.\n   */\n  const handleSubmit = async (submittedValues: Record<string, string>) => {\n    if (!currentFlow || !currentAuthenticator) {\n      return;\n    }\n\n    // Mark all fields as touched before validation\n    touchAllFields();\n\n    const validation = validateForm();\n    if (!validation.isValid) {\n      return;\n    }\n\n    setIsSignInInitializationRequestLoading(true);\n    setError(null);\n    setMessages([]);\n\n    try {\n      const payload = {\n        flowId: currentFlow.flowId,\n        selectedAuthenticator: {\n          authenticatorId: currentAuthenticator.authenticatorId,\n          params: submittedValues,\n        },\n      };\n\n      const response = await onSubmit(payload, {\n        method: currentFlow?.links[0].method,\n        url: currentFlow?.links[0].href,\n      });\n      onFlowChange?.(response);\n\n      if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n        onSuccess?.(response.authData);\n        return;\n      }\n\n      if (\n        response?.flowStatus === EmbeddedSignInFlowStatus.FailCompleted ||\n        response?.flowStatus === EmbeddedSignInFlowStatus.FailIncomplete\n      ) {\n        setError(t('errors.sign.in.flow.completion.failure'));\n        return;\n      }\n\n      // Check if the response contains a redirection URL and redirect if needed\n      if (handleRedirectionIfNeeded(response)) {\n        return;\n      }\n\n      if (response && 'flowId' in response && 'nextStep' in response) {\n        const nextStepResponse = response as any;\n        setCurrentFlow(nextStepResponse);\n\n        if (nextStepResponse.nextStep?.authenticators?.length > 0) {\n          if (\n            nextStepResponse.nextStep.stepType === EmbeddedSignInFlowStepType.MultiOptionsPrompt &&\n            nextStepResponse.nextStep.authenticators.length > 1\n          ) {\n            setCurrentAuthenticator(null);\n          } else {\n            const nextAuthenticator = nextStepResponse.nextStep.authenticators[0];\n            setCurrentAuthenticator(nextAuthenticator);\n            setupFormFields(nextAuthenticator);\n          }\n        }\n\n        if (nextStepResponse.nextStep?.messages) {\n          setMessages(\n            nextStepResponse.nextStep.messages.map((msg: any) => ({\n              type: msg.type || 'INFO',\n              message: msg.message || '',\n            })),\n          );\n        }\n      }\n    } catch (err) {\n      const errorMessage = err instanceof AsgardeoAPIError ? err.message : t('errors.sign.in.flow.failure');\n      setError(errorMessage);\n      onError?.(err as Error);\n    } finally {\n      setIsSignInInitializationRequestLoading(false);\n    }\n  };\n\n  /**\n   * Handle authenticator selection for multi-option prompts.\n   */\n  const handleAuthenticatorSelection = async (\n    authenticator: EmbeddedSignInFlowAuthenticator,\n    formData?: Record<string, string>,\n  ) => {\n    if (!currentFlow) {\n      return;\n    }\n\n    // Mark all fields as touched if we have form data (i.e., this is a submission)\n    if (formData) {\n      touchAllFields();\n    }\n\n    setIsSignInInitializationRequestLoading(true);\n    setError(null);\n    setMessages([]);\n\n    try {\n      // Handle passkey/FIDO authentication\n      if (isPasskeyAuthenticator(authenticator)) {\n        try {\n          const challengeData = (authenticator.metadata as any)?.additionalData?.challengeData;\n          if (!challengeData) {\n            throw new Error('Missing challenge data for passkey authentication');\n          }\n\n          const tokenResponse = await handleWebAuthnAuthentication(challengeData);\n\n          const payload = {\n            flowId: currentFlow.flowId,\n            selectedAuthenticator: {\n              authenticatorId: authenticator.authenticatorId,\n              params: {\n                tokenResponse,\n              },\n            },\n          };\n\n          const response = await onSubmit(payload, {\n            method: currentFlow?.links[0].method,\n            url: currentFlow?.links[0].href,\n          });\n          onFlowChange?.(response);\n\n          if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n            onSuccess?.(response.authData);\n            return;\n          }\n\n          if (\n            response?.flowStatus === EmbeddedSignInFlowStatus.FailCompleted ||\n            response?.flowStatus === EmbeddedSignInFlowStatus.FailIncomplete\n          ) {\n            setError(t('errors.sign.in.flow.passkeys.completion.failure'));\n            return;\n          }\n\n          // Handle next step if authentication is not complete\n          if (response && 'flowId' in response && 'nextStep' in response) {\n            const nextStepResponse = response as any;\n            setCurrentFlow(nextStepResponse);\n\n            if (nextStepResponse.nextStep?.authenticators?.length > 0) {\n              if (\n                nextStepResponse.nextStep.stepType === EmbeddedSignInFlowStepType.MultiOptionsPrompt &&\n                nextStepResponse.nextStep.authenticators.length > 1\n              ) {\n                setCurrentAuthenticator(null);\n              } else {\n                const nextAuthenticator = nextStepResponse.nextStep.authenticators[0];\n\n                // Check if the next authenticator is also a passkey - if so, auto-trigger it\n                if (isPasskeyAuthenticator(nextAuthenticator)) {\n                  // Recursively handle the passkey authenticator without showing UI\n                  handleAuthenticatorSelection(nextAuthenticator);\n                  return;\n                }\n                setCurrentAuthenticator(nextAuthenticator);\n                setupFormFields(nextAuthenticator);\n              }\n            }\n\n            if (nextStepResponse.nextStep?.messages) {\n              setMessages(\n                nextStepResponse.nextStep.messages.map((msg: any) => ({\n                  type: msg.type || 'INFO',\n                  message: msg.message || '',\n                })),\n              );\n            }\n          }\n        } catch (passkeyError) {\n          console.error('Passkey authentication error:', passkeyError);\n\n          // Provide more context for common errors\n          let errorMessage =\n            passkeyError instanceof Error ? passkeyError.message : t('errors.sign.in.flow.passkeys.failure');\n\n          // Add additional context for security errors\n          if (passkeyError instanceof Error && passkeyError.message.includes('security')) {\n            errorMessage +=\n              ' This may be due to browser security settings, an insecure connection, or device restrictions.';\n          }\n\n          setError(errorMessage);\n        }\n      } else if (authenticator.metadata?.promptType === EmbeddedSignInFlowAuthenticatorPromptType.RedirectionPrompt) {\n        const payload = {\n          flowId: currentFlow.flowId,\n          selectedAuthenticator: {\n            authenticatorId: authenticator.authenticatorId,\n            params: {},\n          },\n        };\n\n        const response = await onSubmit(payload, {\n          method: currentFlow?.links[0].method,\n          url: currentFlow?.links[0].href,\n        });\n        onFlowChange?.(response);\n\n        if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n          onSuccess?.(response.authData);\n          return;\n        }\n\n        // Check if the response contains a redirection URL and redirect if needed\n        if (handleRedirectionIfNeeded(response)) {\n        }\n      } else if (formData) {\n        const validation = validateForm();\n        if (!validation.isValid) {\n          return;\n        }\n\n        const payload = {\n          flowId: currentFlow.flowId,\n          selectedAuthenticator: {\n            authenticatorId: authenticator.authenticatorId,\n            params: formData,\n          },\n        };\n\n        const response = await onSubmit(payload, {\n          method: currentFlow?.links[0].method,\n          url: currentFlow?.links[0].href,\n        });\n        onFlowChange?.(response);\n\n        if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n          onSuccess?.(response.authData);\n          return;\n        }\n\n        if (\n          response?.flowStatus === EmbeddedSignInFlowStatus.FailCompleted ||\n          response?.flowStatus === EmbeddedSignInFlowStatus.FailIncomplete\n        ) {\n          setError('Authentication failed. Please check your credentials and try again.');\n          return;\n        }\n\n        // Check if the response contains a redirection URL and redirect if needed\n        if (handleRedirectionIfNeeded(response)) {\n          return;\n        }\n\n        if (response && 'flowId' in response && 'nextStep' in response) {\n          const nextStepResponse = response as any;\n          setCurrentFlow(nextStepResponse);\n\n          if (nextStepResponse.nextStep?.authenticators?.length > 0) {\n            if (\n              nextStepResponse.nextStep.stepType === EmbeddedSignInFlowStepType.MultiOptionsPrompt &&\n              nextStepResponse.nextStep.authenticators.length > 1\n            ) {\n              setCurrentAuthenticator(null);\n            } else {\n              const nextAuthenticator = nextStepResponse.nextStep.authenticators[0];\n\n              // Check if the next authenticator is a passkey - if so, auto-trigger it\n              if (isPasskeyAuthenticator(nextAuthenticator)) {\n                // Recursively handle the passkey authenticator without showing UI\n                handleAuthenticatorSelection(nextAuthenticator);\n                return;\n              }\n              setCurrentAuthenticator(nextAuthenticator);\n              setupFormFields(nextAuthenticator);\n            }\n          }\n\n          if (nextStepResponse.nextStep?.messages) {\n            setMessages(\n              nextStepResponse.nextStep.messages.map((msg: any) => ({\n                type: msg.type || 'INFO',\n                message: msg.message || '',\n              })),\n            );\n          }\n        }\n      } else {\n        // Check if the authenticator requires user input\n        const hasParams = authenticator.metadata?.params && authenticator.metadata.params.length > 0;\n\n        if (!hasParams) {\n          // If no parameters are required, directly authenticate\n          const payload = {\n            flowId: currentFlow.flowId,\n            selectedAuthenticator: {\n              authenticatorId: authenticator.authenticatorId,\n              params: {},\n            },\n          };\n\n          const response = await onSubmit(payload, {\n            method: currentFlow?.links[0].method,\n            url: currentFlow?.links[0].href,\n          });\n          onFlowChange?.(response);\n\n          if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n            onSuccess?.(response.authData);\n            return;\n          }\n\n          if (\n            response?.flowStatus === EmbeddedSignInFlowStatus.FailCompleted ||\n            response?.flowStatus === EmbeddedSignInFlowStatus.FailIncomplete\n          ) {\n            setError('Authentication failed. Please try again.');\n            return;\n          }\n\n          // Check if the response contains a redirection URL and redirect if needed\n          if (handleRedirectionIfNeeded(response)) {\n            return;\n          }\n\n          if (response && 'flowId' in response && 'nextStep' in response) {\n            const nextStepResponse = response as any;\n            setCurrentFlow(nextStepResponse);\n\n            if (nextStepResponse.nextStep?.authenticators?.length > 0) {\n              if (\n                nextStepResponse.nextStep.stepType === EmbeddedSignInFlowStepType.MultiOptionsPrompt &&\n                nextStepResponse.nextStep.authenticators.length > 1\n              ) {\n                setCurrentAuthenticator(null);\n              } else {\n                const nextAuthenticator = nextStepResponse.nextStep.authenticators[0];\n\n                // Check if the next authenticator is a passkey - if so, auto-trigger it\n                if (isPasskeyAuthenticator(nextAuthenticator)) {\n                  // Recursively handle the passkey authenticator without showing UI\n                  handleAuthenticatorSelection(nextAuthenticator);\n                  return;\n                }\n                setCurrentAuthenticator(nextAuthenticator);\n                setupFormFields(nextAuthenticator);\n              }\n            }\n\n            if (nextStepResponse.nextStep?.messages) {\n              setMessages(\n                nextStepResponse.nextStep.messages.map((msg: any) => ({\n                  type: msg.type || 'INFO',\n                  message: msg.message || '',\n                })),\n              );\n            }\n          }\n        } else {\n          // If parameters are required, show the form\n          setCurrentAuthenticator(authenticator);\n          setupFormFields(authenticator);\n        }\n      }\n    } catch (err) {\n      const errorMessage = err instanceof AsgardeoAPIError ? err?.message : 'Authenticator selection failed';\n      setError(errorMessage);\n      onError?.(err as Error);\n    } finally {\n      setIsSignInInitializationRequestLoading(false);\n    }\n  };\n\n  /**\n   * Handle input value changes.\n   */\n  const handleInputChange = (param: string, value: string) => {\n    setFormValue(param, value);\n    setFormTouched(param, true);\n  };\n\n  /**\n   * Check if current flow has multiple authenticator options.\n   */\n  const hasMultipleOptions = useCallback(\n    (): boolean =>\n      currentFlow &&\n      'nextStep' in currentFlow &&\n      currentFlow.nextStep?.stepType === EmbeddedSignInFlowStepType.MultiOptionsPrompt &&\n      currentFlow.nextStep?.authenticators &&\n      currentFlow.nextStep.authenticators.length > 1,\n    [currentFlow],\n  );\n\n  /**\n   * Get available authenticators for selection.\n   */\n  const getAvailableAuthenticators = useCallback((): EmbeddedSignInFlowAuthenticator[] => {\n    if (!currentFlow || !('nextStep' in currentFlow) || !currentFlow.nextStep?.authenticators) {\n      return [];\n    }\n    return currentFlow.nextStep.authenticators;\n  }, [currentFlow]);\n\n  // Generate CSS classes\n  const containerClasses = clsx(\n    [\n      withVendorCSSClassPrefix('signin'),\n      withVendorCSSClassPrefix(`signin--${size}`),\n      withVendorCSSClassPrefix(`signin--${variant}`),\n    ],\n    className,\n  );\n\n  const inputClasses = clsx(\n    [\n      withVendorCSSClassPrefix('signin__input'),\n      size === 'small' && withVendorCSSClassPrefix('signin__input--small'),\n      size === 'large' && withVendorCSSClassPrefix('signin__input--large'),\n    ],\n    inputClassName,\n  );\n\n  const buttonClasses = clsx(\n    [\n      withVendorCSSClassPrefix('signin__button'),\n      size === 'small' && withVendorCSSClassPrefix('signin__button--small'),\n      size === 'large' && withVendorCSSClassPrefix('signin__button--large'),\n    ],\n    buttonClassName,\n  );\n\n  const errorClasses = clsx([withVendorCSSClassPrefix('signin__error')], errorClassName);\n\n  const messageClasses = clsx([withVendorCSSClassPrefix('signin__messages')], messageClassName); // Initialize the flow on component mount\n\n  useEffect(() => {\n    if (isLoading) {\n      return;\n    }\n\n    // React 18.x Strict.Mode has a new check for `Ensuring reusable state` to facilitate an upcoming react feature.\n    // https://reactjs.org/docs/strict-mode.html#ensuring-reusable-state\n    // This will remount all the useEffects to ensure that there are no unexpected side effects.\n    // When react remounts the SignIn, it will send two authorize requests.\n    // https://github.com/reactwg/react-18/discussions/18#discussioncomment-795623\n    if (reRenderCheckRef.current) {\n      return;\n    }\n\n    reRenderCheckRef.current = true;\n\n    (async () => {\n      setIsSignInInitializationRequestLoading(true);\n      setError(null);\n\n      try {\n        const response = await onInitialize();\n\n        setCurrentFlow(response);\n        setIsInitialized(true);\n        onFlowChange?.(response);\n\n        if (response?.flowStatus === EmbeddedSignInFlowStatus.SuccessCompleted) {\n          onSuccess?.((response as any).authData || {});\n          return;\n        }\n\n        if (response?.nextStep?.authenticators?.length > 0) {\n          if (\n            response.nextStep.stepType === EmbeddedSignInFlowStepType.MultiOptionsPrompt &&\n            response.nextStep.authenticators.length > 1\n          ) {\n            setCurrentAuthenticator(null);\n          } else {\n            const authenticator = response.nextStep.authenticators[0];\n            setCurrentAuthenticator(authenticator);\n            setupFormFields(authenticator);\n          }\n        }\n\n        if (response && 'nextStep' in response && response.nextStep && 'messages' in response.nextStep) {\n          const stepMessages = (response.nextStep as any).messages || [];\n          setMessages(\n            stepMessages.map((msg: any) => ({\n              type: msg.type || 'INFO',\n              message: msg.message || '',\n            })),\n          );\n        }\n      } catch (err) {\n        const errorMessage = err instanceof AsgardeoAPIError ? err.message : t('errors.sign.in.initialization');\n        setError(errorMessage);\n        onError?.(err as Error);\n      } finally {\n        setIsSignInInitializationRequestLoading(false);\n      }\n    })();\n  }, [isLoading]);\n\n  if (!isInitialized && isLoading) {\n    return (\n      <Card className={containerClasses} style={styles.card} variant={variant}>\n        <Card.Content>\n          <div style={styles.loadingContainer}>\n            <Spinner size=\"medium\" />\n            <Typography variant=\"body1\" style={styles.loadingText}>\n              {t('messages.loading')}\n            </Typography>\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  if (hasMultipleOptions() && !currentAuthenticator) {\n    const availableAuthenticators = getAvailableAuthenticators();\n\n    const userPromptAuthenticators = availableAuthenticators.filter(\n      auth =>\n        auth.metadata?.promptType === EmbeddedSignInFlowAuthenticatorPromptType.UserPrompt ||\n        // Fallback: LOCAL authenticators with params are typically user prompts\n        (auth.idp === 'LOCAL' && auth.metadata?.params && auth.metadata.params.length > 0),\n    );\n\n    const optionAuthenticators = availableAuthenticators.filter(auth => !userPromptAuthenticators.includes(auth));\n\n    return (\n      <Card className={containerClasses} style={styles.card} variant={variant}>\n        <Card.Header style={styles.header}>\n          <Card.Title level={2}>{flowTitle || t('signin.title')}</Card.Title>\n          {flowSubtitle && (\n            <Typography variant=\"body1\" style={styles.subtitle}>\n              {flowSubtitle || t('signin.subtitle')}\n            </Typography>\n          )}\n          {flowMessages && flowMessages.length > 0 && (\n            <div style={styles.messagesContainer}>\n              {flowMessages.map((flowMessage, index) => (\n                <Alert\n                  key={flowMessage.id || index}\n                  variant={flowMessage.type}\n                  style={styles.messageItem}\n                  className={messageClasses}\n                >\n                  <Alert.Description>{flowMessage.message}</Alert.Description>\n                </Alert>\n              ))}\n            </div>\n          )}\n          {messages.length > 0 && (\n            <div style={styles.messagesContainer}>\n              {messages.map((message, index) => {\n                const variant =\n                  message.type.toLowerCase() === 'error'\n                    ? 'error'\n                    : message.type.toLowerCase() === 'warning'\n                    ? 'warning'\n                    : message.type.toLowerCase() === 'success'\n                    ? 'success'\n                    : 'info';\n\n                return (\n                  <Alert key={index} variant={variant} style={styles.messageItem} className={messageClasses}>\n                    <Alert.Description>{message.message}</Alert.Description>\n                  </Alert>\n                );\n              })}\n            </div>\n          )}\n        </Card.Header>\n\n        <Card.Content>\n          {error && (\n            <Alert variant=\"error\" style={styles.errorContainer} className={errorClasses}>\n              <Alert.Title>Error</Alert.Title>\n              <Alert.Description>{error}</Alert.Description>\n            </Alert>\n          )}\n\n          <div style={styles.contentContainer}>\n            {/* Render USER_PROMPT authenticators as form fields */}\n            {userPromptAuthenticators.map((authenticator, index) => (\n              <div key={authenticator.authenticatorId}>\n                {index > 0 && <Divider style={styles.divider}>OR</Divider>}\n                <form\n                  onSubmit={e => {\n                    e.preventDefault();\n                    const formData: Record<string, string> = {};\n                    authenticator.metadata?.params?.forEach(param => {\n                      formData[param.param] = formValues[param.param] || '';\n                    });\n                    handleAuthenticatorSelection(authenticator, formData);\n                  }}\n                >\n                  {createSignInOptionFromAuthenticator(\n                    authenticator,\n                    formValues,\n                    touchedFields,\n                    isLoading,\n                    handleInputChange,\n                    (auth, formData) => handleAuthenticatorSelection(auth, formData),\n                    {\n                      inputClassName: inputClasses,\n                      buttonClassName: buttonClasses,\n                      error,\n                    },\n                  )}\n                </form>\n              </div>\n            ))}\n\n            {/* Add divider between user prompts and option authenticators if both exist */}\n            {userPromptAuthenticators.length > 0 && optionAuthenticators.length > 0 && (\n              <Divider style={styles.divider}>OR</Divider>\n            )}\n\n            {/* Render all other authenticators (REDIRECTION_PROMPT, multi-option buttons, etc.) */}\n            {optionAuthenticators.map((authenticator, index) => (\n              <div key={authenticator.authenticatorId}>\n                {createSignInOptionFromAuthenticator(\n                  authenticator,\n                  formValues,\n                  touchedFields,\n                  isLoading,\n                  handleInputChange,\n                  (auth, formData) => handleAuthenticatorSelection(auth, formData),\n                  {\n                    inputClassName: inputClasses,\n                    buttonClassName: buttonClasses,\n                    error,\n                  },\n                )}\n              </div>\n            ))}\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  if (!currentAuthenticator) {\n    return (\n      <Card className={containerClasses} variant={variant}>\n        <Card.Content>\n          {error && (\n            <Alert variant=\"error\">\n              <Alert.Title>{t('errors.title') || 'Error'}</Alert.Title>\n              <Alert.Description>{error}</Alert.Description>\n            </Alert>\n          )}\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  // If the current authenticator is a passkey, auto-trigger it instead of showing a form\n  if (isPasskeyAuthenticator(currentAuthenticator) && !isLoading) {\n    // Auto-trigger passkey authentication\n    useEffect(() => {\n      handleAuthenticatorSelection(currentAuthenticator);\n    }, [currentAuthenticator]);\n\n    // Show loading state while passkey authentication is in progress\n    return (\n      <Card className={containerClasses} variant={variant}>\n        <Card.Content>\n          <div style={styles.centeredContainer}>\n            <div style={styles.passkeyContainer}>\n              <Spinner size=\"large\" />\n            </div>\n            <Typography variant=\"body1\">{t('passkey.authenticating') || 'Authenticating with passkey...'}</Typography>\n            <Typography variant=\"body2\" style={styles.passkeyText}>\n              {t('passkey.instruction') || 'Please use your fingerprint, face, or security key to authenticate.'}\n            </Typography>\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={containerClasses} style={styles.card} variant={variant}>\n      <Card.Header style={styles.header}>\n        <Card.Title level={2}>{flowTitle || t('signin.title')}</Card.Title>\n        <Typography variant=\"body1\" style={styles.subtitle}>\n          {flowSubtitle || t('signin.subtitle')}\n        </Typography>\n        {flowMessages && flowMessages.length > 0 && (\n          <div style={styles.messagesContainer}>\n            {flowMessages.map((flowMessage, index) => (\n              <Alert\n                key={flowMessage.id || index}\n                variant={flowMessage.type}\n                style={styles.messageItem}\n                className={messageClasses}\n              >\n                <Alert.Description>{flowMessage.message}</Alert.Description>\n              </Alert>\n            ))}\n          </div>\n        )}\n        {messages.length > 0 && (\n          <div style={styles.messagesContainer}>\n            {messages.map((message, index) => {\n              const variant =\n                message.type.toLowerCase() === 'error'\n                  ? 'error'\n                  : message.type.toLowerCase() === 'warning'\n                  ? 'warning'\n                  : message.type.toLowerCase() === 'success'\n                  ? 'success'\n                  : 'info';\n\n              return (\n                <Alert key={index} variant={variant} style={styles.messageItem} className={messageClasses}>\n                  <Alert.Description>{message.message}</Alert.Description>\n                </Alert>\n              );\n            })}\n          </div>\n        )}\n      </Card.Header>\n\n      <Card.Content>\n        {error && (\n          <Alert variant=\"error\" style={styles.errorContainer} className={errorClasses}>\n            <Alert.Title>{t('errors.title')}</Alert.Title>\n            <Alert.Description>{error}</Alert.Description>\n          </Alert>\n        )}\n\n        <form\n          onSubmit={(e: FormEvent<HTMLFormElement>) => {\n            e.preventDefault();\n            const formData: Record<string, string> = {};\n            currentAuthenticator.metadata?.params?.forEach(param => {\n              formData[param.param] = formValues[param.param] || '';\n            });\n            handleSubmit(formData);\n          }}\n        >\n          {createSignInOptionFromAuthenticator(\n            currentAuthenticator,\n            formValues,\n            touchedFields,\n            isLoading,\n            handleInputChange,\n            (authenticator, formData) => handleSubmit(formData || formValues),\n            {\n              inputClassName: inputClasses,\n              buttonClassName: buttonClasses,\n              error,\n            },\n          )}\n        </form>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default BaseSignIn;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  EmbeddedSignInFlowAuthenticator,\n  EmbeddedSignInFlowAuthenticatorKnownIdPType,\n  ApplicationNativeAuthenticationConstants,\n  WithPreferences,\n} from '@asgardeo/browser';\nimport {ReactElement} from 'react';\nimport UsernamePassword from './UsernamePassword';\nimport IdentifierFirst from './IdentifierFirst';\nimport GoogleButton from './GoogleButton';\nimport GitHubButton from './GitHubButton';\nimport MicrosoftButton from './MicrosoftButton';\nimport FacebookButton from './FacebookButton';\nimport LinkedInButton from './LinkedInButton';\nimport SignInWithEthereumButton from './SignInWithEthereumButton';\nimport EmailOtp from './EmailOtp';\nimport Totp from './Totp';\nimport SmsOtp from './SmsOtp';\nimport SocialButton from './SocialButton';\nimport MultiOptionButton from './MultiOptionButton';\n\n/**\n * Base props that all sign-in option components share.\n */\nexport interface BaseSignInOptionProps extends WithPreferences {\n  /**\n   * The authenticator configuration.\n   */\n  authenticator: EmbeddedSignInFlowAuthenticator;\n\n  /**\n   * Current form values.\n   */\n  formValues: Record<string, string>;\n\n  /**\n   * Touched state for form fields.\n   */\n  touchedFields: Record<string, boolean>;\n\n  /**\n   * Whether the component is in loading state.\n   */\n  isLoading: boolean;\n\n  /**\n   * Error message to display.\n   */\n  error?: string | null;\n\n  /**\n   * Callback function called when input values change.\n   */\n  onInputChange: (param: string, value: string) => void;\n\n  /**\n   * Callback function called when the option is submitted.\n   */\n  onSubmit: (authenticator: EmbeddedSignInFlowAuthenticator, formData?: Record<string, string>) => void;\n\n  /**\n   * Custom CSS class name for form inputs.\n   */\n  inputClassName?: string;\n\n  /**\n   * Custom CSS class name for the submit button.\n   */\n  buttonClassName?: string;\n\n  /**\n   * Text for the submit button.\n   */\n  submitButtonText?: string;\n}\n\n/**\n * Creates the appropriate sign-in option component based on the authenticator's ID.\n */\nexport const createSignInOption = (props: BaseSignInOptionProps): ReactElement => {\n  const {authenticator, ...optionProps} = props;\n\n  // Check if this authenticator has params (indicating it needs user input)\n  const hasParams = authenticator.metadata?.params && authenticator.metadata.params.length > 0;\n\n  // Use authenticatorId to determine the component type\n  switch (authenticator.authenticatorId) {\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.UsernamePassword:\n      return <UsernamePassword {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.IdentifierFirst:\n      return <IdentifierFirst {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Google:\n      return <GoogleButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.GitHub:\n      return <GitHubButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Microsoft:\n      return <MicrosoftButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Facebook:\n      return <FacebookButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.LinkedIn:\n      return <LinkedInButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.SignInWithEthereum:\n      return <SignInWithEthereumButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.EmailOtp:\n      // If it has params, render as input form, otherwise as selection button\n      return hasParams ? <EmailOtp {...props} /> : <MultiOptionButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Totp:\n      // If it has params, render as input form, otherwise as selection button\n      return hasParams ? <Totp {...props} /> : <MultiOptionButton {...props} />;\n\n    case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.SmsOtp:\n      // If it has params, render as input form, otherwise as selection button\n      return hasParams ? <SmsOtp {...props} /> : <MultiOptionButton {...props} />;\n\n    default:\n      // Check if it's a federated authenticator (non-LOCAL idp)\n      if (authenticator.idp !== EmbeddedSignInFlowAuthenticatorKnownIdPType.Local) {\n        // For unknown federated authenticators, use generic social login\n        return <SocialButton {...props} />;\n      }\n\n      // For LOCAL authenticators, decide based on whether they have params\n      if (hasParams) {\n        // Fallback to username/password for unknown local authenticators with params\n        return <UsernamePassword {...props} />;\n      } else {\n        // Use multi-option button for LOCAL authenticators without params\n        return <MultiOptionButton {...props} />;\n      }\n  }\n};\n\n/**\n * Convenience function that creates the appropriate sign-in option component from an authenticator.\n */\nexport const createSignInOptionFromAuthenticator = (\n  authenticator: EmbeddedSignInFlowAuthenticator,\n  formValues: Record<string, string>,\n  touchedFields: Record<string, boolean>,\n  isLoading: boolean,\n  onInputChange: (param: string, value: string) => void,\n  onSubmit: (authenticator: EmbeddedSignInFlowAuthenticator, formData?: Record<string, string>) => void,\n  options?: {\n    inputClassName?: string;\n    buttonClassName?: string;\n    error?: string | null;\n  },\n): ReactElement => {\n  return createSignInOption({\n    authenticator,\n    formValues,\n    touchedFields,\n    isLoading,\n    onInputChange,\n    onSubmit,\n    ...options,\n  });\n};\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {EmbeddedSignInFlowAuthenticator, EmbeddedSignInFlowAuthenticatorParamType, FieldType} from '@asgardeo/browser';\nimport {FC, useEffect} from 'react';\nimport {createField} from '../../../factories/FieldFactory';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport useFlow from '../../../../contexts/Flow/useFlow';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * Username Password Sign-In Option Component.\n * Handles traditional username and password authentication.\n */\nconst UsernamePassword: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  formValues,\n  touchedFields,\n  isLoading,\n  onInputChange,\n  onSubmit,\n  inputClassName = '',\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation(preferences?.i18n);\n  const {setTitle, setSubtitle} = useFlow();\n\n  const formFields =\n    authenticator.metadata?.params?.sort((a, b) => a.order - b.order)?.filter(param => param.param !== 'totp') || []; // Exclude TOTP fields for username/password\n\n  useEffect(() => {\n    setTitle(t('username.password.title'));\n    setSubtitle(t('username.password.subtitle'));\n  }, [setTitle, setSubtitle, t]);\n\n  return (\n    <>\n      {formFields.map(param => (\n        <div key={param.param} style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}>\n          {createField({\n            name: param.param,\n            type:\n              param.type === EmbeddedSignInFlowAuthenticatorParamType.String\n                ? param.confidential\n                  ? FieldType.Password\n                  : FieldType.Text\n                : FieldType.Text,\n            label: param.displayName,\n            required: authenticator.requiredParams.includes(param.param),\n            value: formValues[param.param] || '',\n            onChange: value => onInputChange(param.param, value),\n            disabled: isLoading,\n            className: inputClassName,\n            touched: touchedFields[param.param] || false,\n            placeholder: t(`elements.fields.placeholder`, {\n              field: (param.displayName || param.param).toLowerCase(),\n            }),\n          })}\n        </div>\n      ))}\n\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        loading={isLoading}\n        className={buttonClassName}\n        color=\"primary\"\n        variant=\"solid\"\n        fullWidth\n        style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n      >\n        {t('username.password.submit.button')}\n      </Button>\n    </>\n  );\n};\n\nexport default UsernamePassword;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, InputHTMLAttributes, ReactNode} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport FormControl from '../FormControl/FormControl';\nimport InputLabel from '../InputLabel/InputLabel';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\nexport interface TextFieldProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'className'> {\n  /**\n   * Label text to display above the input\n   */\n  label?: string;\n  /**\n   * Error message to display below the input\n   */\n  error?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Whether the field is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Helper text to display below the input\n   */\n  helperText?: string;\n  /**\n   * Icon to display at the start (left) of the input\n   */\n  startIcon?: ReactNode;\n  /**\n   * Icon to display at the end (right) of the input\n   */\n  endIcon?: ReactNode;\n  /**\n   * Click handler for the start icon\n   */\n  onStartIconClick?: () => void;\n  /**\n   * Click handler for the end icon\n   */\n  onEndIconClick?: () => void;\n}\n\nconst TextField: FC<TextFieldProps> = ({\n  label,\n  error,\n  required,\n  className,\n  disabled,\n  helperText,\n  startIcon,\n  endIcon,\n  onStartIconClick,\n  onEndIconClick,\n  type = 'text',\n  style = {},\n  ...rest\n}) => {\n  const {theme} = useTheme();\n\n  // Calculate padding based on icons\n  const hasStartIcon = !!startIcon;\n  const hasEndIcon = !!endIcon;\n  const leftPadding = hasStartIcon ? theme.spacing.unit * 5 : theme.spacing.unit * 1.5;\n  const rightPadding = hasEndIcon ? theme.spacing.unit * 5 : theme.spacing.unit * 1.5;\n\n  const inputStyle: CSSProperties = {\n    width: '100%',\n    padding: `${theme.spacing.unit}px ${rightPadding}px ${theme.spacing.unit}px ${leftPadding}px`,\n    border: `1px solid ${error ? theme.colors.error.main : theme.colors.border}`,\n    borderRadius: theme.borderRadius.medium,\n    fontSize: '1rem',\n    color: theme.colors.text.primary,\n    backgroundColor: disabled ? theme.colors.background.disabled : theme.colors.background.surface,\n    outline: 'none',\n    transition: 'border-color 0.2s ease',\n  };\n\n  const inputContainerStyle: CSSProperties = {\n    position: 'relative',\n    display: 'flex',\n    alignItems: 'center',\n  };\n\n  const iconButtonStyle: CSSProperties = {\n    position: 'absolute',\n    background: 'none',\n    border: 'none',\n    cursor: disabled ? 'not-allowed' : 'pointer',\n    padding: theme.spacing.unit / 2,\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    color: theme.colors.text.secondary,\n    opacity: disabled ? 0.5 : 1,\n    top: '50%',\n    transform: 'translateY(-50%)',\n  };\n\n  const startIconStyle: CSSProperties = {\n    ...iconButtonStyle,\n    left: theme.spacing.unit,\n  };\n\n  const endIconStyle: CSSProperties = {\n    ...iconButtonStyle,\n    right: theme.spacing.unit,\n  };\n\n  return (\n    <FormControl\n      error={error}\n      helperText={helperText}\n      className={clsx(withVendorCSSClassPrefix('text-field'), className)}\n      style={style}\n    >\n      {label && (\n        <InputLabel required={required} error={!!error}>\n          {label}\n        </InputLabel>\n      )}\n      <div style={inputContainerStyle}>\n        {startIcon && (\n          <div\n            style={startIconStyle}\n            onClick={onStartIconClick}\n            role={onStartIconClick ? 'button' : undefined}\n            tabIndex={onStartIconClick && !disabled ? 0 : undefined}\n            aria-label=\"Start icon\"\n          >\n            {startIcon}\n          </div>\n        )}\n        <input\n          style={inputStyle}\n          type={type}\n          disabled={disabled}\n          aria-invalid={!!error}\n          aria-required={required}\n          {...rest}\n        />\n        {endIcon && (\n          <div\n            style={endIconStyle}\n            onClick={onEndIconClick}\n            role={onEndIconClick ? 'button' : undefined}\n            tabIndex={onEndIconClick && !disabled ? 0 : undefined}\n            aria-label=\"End icon\"\n          >\n            {endIcon}\n          </div>\n        )}\n      </div>\n    </FormControl>\n  );\n};\n\nexport default TextField;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, ReactNode, ComponentPropsWithoutRef, ElementType} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\n// Typography variants mapped to HTML elements and styling\nexport type TypographyVariant =\n  | 'h1'\n  | 'h2'\n  | 'h3'\n  | 'h4'\n  | 'h5'\n  | 'h6'\n  | 'subtitle1'\n  | 'subtitle2'\n  | 'body1'\n  | 'body2'\n  | 'caption'\n  | 'overline'\n  | 'button';\n\nexport type TypographyAlign = 'left' | 'center' | 'right' | 'justify';\n\nexport type TypographyColor =\n  | 'primary'\n  | 'secondary'\n  | 'error'\n  | 'success'\n  | 'warning'\n  | 'info'\n  | 'textPrimary'\n  | 'textSecondary'\n  | 'inherit';\n\nexport interface TypographyProps {\n  /**\n   * The content to be rendered\n   */\n  children: ReactNode;\n  /**\n   * The typography variant to apply\n   */\n  variant?: TypographyVariant;\n  /**\n   * The HTML element or React component to render\n   */\n  component?: ElementType;\n  /**\n   * Text alignment\n   */\n  align?: TypographyAlign;\n  /**\n   * Color variant\n   */\n  color?: TypographyColor;\n  /**\n   * Whether the text should be clipped with ellipsis when it overflows\n   */\n  noWrap?: boolean;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Custom styles\n   */\n  style?: CSSProperties;\n  /**\n   * Whether the text should be displayed inline\n   */\n  inline?: boolean;\n  /**\n   * Custom font weight\n   */\n  fontWeight?: 'normal' | 'medium' | 'semibold' | 'bold' | number;\n  /**\n   * Custom font size (overrides variant sizing)\n   */\n  fontSize?: string | number;\n  /**\n   * Line height\n   */\n  lineHeight?: string | number;\n  /**\n   * Whether to disable gutters (margin bottom)\n   */\n  gutterBottom?: boolean;\n}\n\n// Default component mapping for variants\nconst variantMapping: Record<TypographyVariant, ElementType> = {\n  h1: 'h1',\n  h2: 'h2',\n  h3: 'h3',\n  h4: 'h4',\n  h5: 'h5',\n  h6: 'h6',\n  subtitle1: 'h6',\n  subtitle2: 'h6',\n  body1: 'p',\n  body2: 'p',\n  caption: 'span',\n  overline: 'span',\n  button: 'span',\n};\n\n/**\n * Typography component for consistent text rendering throughout the application.\n * Integrates with the theme system and provides semantic HTML elements.\n */\nconst Typography: FC<TypographyProps> = ({\n  children,\n  variant = 'body1',\n  component,\n  align = 'left',\n  color = 'textPrimary',\n  noWrap = false,\n  className,\n  style = {},\n  inline = false,\n  fontWeight,\n  fontSize,\n  lineHeight,\n  gutterBottom = false,\n  ...rest\n}) => {\n  const {theme} = useTheme();\n\n  // Determine the component to render\n  const Component = component || variantMapping[variant] || 'span';\n\n  // Get color value from theme\n  const getColorValue = (colorVariant: TypographyColor): string => {\n    switch (colorVariant) {\n      case 'primary':\n        return theme.colors.primary.main;\n      case 'secondary':\n        return theme.colors.secondary.main;\n      case 'error':\n        return theme.colors.error.main;\n      case 'textPrimary':\n        return theme.colors.text.primary;\n      case 'textSecondary':\n        return theme.colors.text.secondary;\n      case 'inherit':\n        return 'inherit';\n      default:\n        return theme.colors.text.primary;\n    }\n  };\n\n  // Get variant styles\n  const getVariantStyles = (variantName: TypographyVariant): CSSProperties => {\n    const baseUnit = theme.spacing.unit;\n\n    switch (variantName) {\n      case 'h1':\n        return {\n          fontSize: theme.vars.typography.fontSizes['3xl'], // 34px\n          fontWeight: 600,\n          lineHeight: 1.235,\n          letterSpacing: '-0.00735em',\n        };\n      case 'h2':\n        return {\n          fontSize: theme.vars.typography.fontSizes['2xl'], // 24px\n          fontWeight: 600,\n          lineHeight: 1.334,\n          letterSpacing: '0em',\n        };\n      case 'h3':\n        return {\n          fontSize: theme.vars.typography.fontSizes.xl, // 20px\n          fontWeight: 600,\n          lineHeight: 1.6,\n          letterSpacing: '0.0075em',\n        };\n      case 'h4':\n        return {\n          fontSize: theme.vars.typography.fontSizes.lg, // 18px\n          fontWeight: 600,\n          lineHeight: 1.5,\n          letterSpacing: '0.00938em',\n        };\n      case 'h5':\n        return {\n          fontSize: theme.vars.typography.fontSizes.md, // 16px\n          fontWeight: 600,\n          lineHeight: 1.334,\n          letterSpacing: '0em',\n        };\n      case 'h6':\n        return {\n          fontSize: theme.vars.typography.fontSizes.sm, // 14px\n          fontWeight: 500,\n          lineHeight: 1.6,\n          letterSpacing: '0.0075em',\n        };\n      case 'subtitle1':\n        return {\n          fontSize: theme.vars.typography.fontSizes.md, // 16px\n          fontWeight: 400,\n          lineHeight: 1.75,\n          letterSpacing: '0.00938em',\n        };\n      case 'subtitle2':\n        return {\n          fontSize: theme.vars.typography.fontSizes.sm, // 14px\n          fontWeight: 500,\n          lineHeight: 1.57,\n          letterSpacing: '0.00714em',\n        };\n      case 'body1':\n        return {\n          fontSize: theme.vars.typography.fontSizes.md, // 16px\n          fontWeight: 400,\n          lineHeight: 1.5,\n          letterSpacing: '0.00938em',\n        };\n      case 'body2':\n        return {\n          fontSize: theme.vars.typography.fontSizes.sm, // 14px\n          fontWeight: 400,\n          lineHeight: 1.43,\n          letterSpacing: '0.01071em',\n        };\n      case 'caption':\n        return {\n          fontSize: theme.vars.typography.fontSizes.xs, // 12px\n          fontWeight: 400,\n          lineHeight: 1.66,\n          letterSpacing: '0.03333em',\n        };\n      case 'overline':\n        return {\n          fontSize: theme.vars.typography.fontSizes.xs, // 12px\n          fontWeight: 400,\n          lineHeight: 2.66,\n          letterSpacing: '0.08333em',\n          textTransform: 'uppercase',\n        };\n      case 'button':\n        return {\n          fontSize: theme.vars.typography.fontSizes.sm, // 14px\n          fontWeight: 500,\n          lineHeight: 1.75,\n          letterSpacing: '0.02857em',\n          textTransform: 'uppercase',\n        };\n      default:\n        return {};\n    }\n  };\n\n  const variantStyles = getVariantStyles(variant);\n\n  const typographyStyle: CSSProperties = {\n    margin: 0,\n    color: getColorValue(color),\n    textAlign: align,\n    display: inline ? 'inline' : variantMapping[variant] === 'span' ? 'inline' : 'block',\n    ...variantStyles,\n    // Custom overrides\n    ...(fontWeight && {fontWeight}),\n    ...(fontSize && {fontSize: typeof fontSize === 'number' ? `${fontSize}px` : fontSize}),\n    ...(lineHeight && {lineHeight}),\n    ...(noWrap && {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n    }),\n    ...(gutterBottom && {\n      marginBottom: theme.spacing.unit + 'px',\n    }),\n    ...style,\n  };\n\n  return (\n    <Component\n      className={clsx(\n        withVendorCSSClassPrefix('typography'),\n        withVendorCSSClassPrefix(`typography-${variant}`),\n        {\n          [withVendorCSSClassPrefix('typography-noWrap')]: noWrap,\n          [withVendorCSSClassPrefix('typography-inline')]: inline,\n          [withVendorCSSClassPrefix('typography-gutterBottom')]: gutterBottom,\n        },\n        className,\n      )}\n      style={typographyStyle}\n      {...rest}\n    >\n      {children}\n    </Component>\n  );\n};\n\nexport default Typography;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, ReactNode} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport Typography from '../Typography/Typography';\n\nexport interface FormControlProps {\n  /**\n   * The content to be wrapped by the form control\n   */\n  children: ReactNode;\n  /**\n   * Error message to display below the content\n   */\n  error?: string;\n  /**\n   * Helper text to display below the content\n   */\n  helperText?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Custom container style\n   */\n  style?: CSSProperties;\n  /**\n   * Custom alignment for helper text (default: left, center for OTP)\n   */\n  helperTextAlign?: 'left' | 'center';\n  /**\n   * Custom margin left for helper text (for components like Checkbox)\n   */\n  helperTextMarginLeft?: string;\n}\n\nconst FormControl: FC<FormControlProps> = ({\n  children,\n  error,\n  helperText,\n  className,\n  style = {},\n  helperTextAlign = 'left',\n  helperTextMarginLeft,\n}) => {\n  const {theme} = useTheme();\n\n  const containerStyle: CSSProperties = {\n    textAlign: 'left',\n    marginBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n    ...style,\n  };\n\n  const helperTextStyle: CSSProperties = {\n    marginTop: `calc(${theme.vars.spacing.unit} / 2)`,\n    textAlign: helperTextAlign,\n    ...(helperTextMarginLeft && {marginLeft: helperTextMarginLeft}),\n  };\n\n  return (\n    <div style={containerStyle} className={className}>\n      {children}\n      {(error || helperText) && (\n        <Typography variant=\"caption\" color={error ? 'error' : 'textSecondary'} style={helperTextStyle}>\n          {error || helperText}\n        </Typography>\n      )}\n    </div>\n  );\n};\n\nexport default FormControl;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, LabelHTMLAttributes, ReactNode} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\n\nexport interface InputLabelProps extends Omit<LabelHTMLAttributes<HTMLLabelElement>, 'style'> {\n  /**\n   * Label text or content\n   */\n  children: ReactNode;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Whether there's an error state\n   */\n  error?: boolean;\n  /**\n   * Custom style overrides\n   */\n  style?: CSSProperties;\n  /**\n   * Display type for label positioning\n   */\n  variant?: 'block' | 'inline';\n  /**\n   * Custom margin bottom (useful for different form layouts)\n   */\n  marginBottom?: string;\n}\n\nconst InputLabel: FC<InputLabelProps> = ({\n  children,\n  required,\n  error,\n  style = {},\n  variant = 'block',\n  marginBottom,\n  ...rest\n}) => {\n  const {theme} = useTheme();\n\n  const labelStyle: CSSProperties = {\n    display: variant,\n    marginBottom: marginBottom || (variant === 'block' ? `calc(${theme.vars.spacing.unit} + 1px)` : '0'),\n    color: error ? theme.vars.colors.error.main : theme.vars.colors.text.secondary,\n    fontSize: theme.vars.typography.fontSizes.sm,\n    fontWeight: variant === 'block' ? 500 : 'normal',\n    ...style,\n  };\n\n  return (\n    <label style={labelStyle} {...rest}>\n      {children}\n      {required && <span style={{color: theme.vars.colors.error.main}}> *</span>}\n    </label>\n  );\n};\n\nexport default InputLabel;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, SelectHTMLAttributes} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport FormControl from '../FormControl/FormControl';\nimport InputLabel from '../InputLabel/InputLabel';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\nexport interface SelectOption {\n  /**\n   * The value that will be submitted with the form\n   */\n  value: string;\n  /**\n   * The text that will be displayed in the select\n   */\n  label: string;\n}\n\nexport interface SelectProps extends Omit<SelectHTMLAttributes<HTMLSelectElement>, 'className'> {\n  /**\n   * Label text to display above the select\n   */\n  label?: string;\n  /**\n   * Error message to display below the select\n   */\n  error?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Whether the field is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Helper text to display below the select\n   */\n  helperText?: string;\n  /**\n   * The options to display in the select\n   */\n  options: SelectOption[];\n}\n\nconst Select: FC<SelectProps> = ({\n  label,\n  error,\n  className,\n  required,\n  disabled,\n  helperText,\n  options,\n  style = {},\n  ...rest\n}) => {\n  const {theme} = useTheme();\n\n  const selectStyle: CSSProperties = {\n    width: '100%',\n    padding: `${theme.vars.spacing.unit} calc(${theme.vars.spacing.unit} * 1.5)`,\n    border: `1px solid ${error ? theme.vars.colors.error.main : theme.vars.colors.border}`,\n    borderRadius: theme.vars.borderRadius.medium,\n    fontSize: theme.vars.typography.fontSizes.md,\n    color: theme.vars.colors.text.primary,\n    backgroundColor: disabled ? theme.vars.colors.background.disabled : theme.vars.colors.background.surface,\n    outline: 'none',\n    transition: 'border-color 0.2s ease',\n    appearance: 'none',\n    backgroundImage: `url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23${theme.colors.text.secondary.replace(\n      '#',\n      '',\n    )}%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E')`,\n    backgroundRepeat: 'no-repeat',\n    backgroundPosition: 'right .7em top 50%',\n    backgroundSize: '.65em auto',\n  };\n\n  return (\n    <FormControl\n      error={error}\n      helperText={helperText}\n      className={clsx(withVendorCSSClassPrefix('select'), className)}\n      style={style}\n    >\n      {label && (\n        <InputLabel required={required} error={!!error}>\n          {label}\n        </InputLabel>\n      )}\n      <select style={selectStyle} disabled={disabled} aria-invalid={!!error} aria-required={required} {...rest}>\n        {options.map(option => (\n          <option key={option.value} value={option.value}>\n            {option.label}\n          </option>\n        ))}\n      </select>\n    </FormControl>\n  );\n};\n\nexport default Select;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, KeyboardEvent, ChangeEvent, useRef, useEffect, useState} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport FormControl from '../FormControl/FormControl';\nimport InputLabel from '../InputLabel/InputLabel';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\nexport interface OtpInputProps {\n  /**\n   * Label text to display above the OTP input\n   */\n  label?: string;\n  /**\n   * Error message to display below the OTP input\n   */\n  error?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Whether the field is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Helper text to display below the OTP input\n   */\n  helperText?: string;\n  /**\n   * Number of OTP input fields\n   */\n  length?: number;\n  /**\n   * Current OTP value\n   */\n  value?: string;\n  /**\n   * Callback function called when OTP value changes\n   */\n  onChange?: (event: {target: {value: string}}) => void;\n  /**\n   * Callback function called when OTP input is complete\n   */\n  onComplete?: (value: string) => void;\n  /**\n   * Type of input (text, number, password)\n   */\n  type?: 'text' | 'number' | 'password';\n  /**\n   * Placeholder character for each input field\n   */\n  placeholder?: string;\n  /**\n   * Custom container style\n   */\n  style?: CSSProperties;\n  /**\n   * Auto focus the first input on mount\n   */\n  autoFocus?: boolean;\n  /**\n   * Pattern for numeric input validation\n   */\n  pattern?: string;\n}\n\nconst OtpField: FC<OtpInputProps> = ({\n  label,\n  error,\n  className,\n  required,\n  disabled,\n  helperText,\n  length = 6,\n  value = '',\n  onChange,\n  onComplete,\n  type = 'text',\n  placeholder = '',\n  style = {},\n  autoFocus = false,\n  pattern,\n}) => {\n  const {theme} = useTheme();\n  const [otp, setOtp] = useState<string[]>(Array(length).fill(''));\n  const inputRefs = useRef<HTMLInputElement[]>([]);\n\n  // Initialize refs array\n  useEffect(() => {\n    inputRefs.current = inputRefs.current.slice(0, length);\n  }, [length]);\n\n  // Update internal state when value prop changes\n  useEffect(() => {\n    if (value) {\n      const newOtp = value.split('').slice(0, length);\n      while (newOtp.length < length) {\n        newOtp.push('');\n      }\n      setOtp(newOtp);\n    } else {\n      setOtp(Array(length).fill(''));\n    }\n  }, [value, length]);\n\n  // Auto focus first input\n  useEffect(() => {\n    if (autoFocus && inputRefs.current[0]) {\n      inputRefs.current[0].focus();\n    }\n  }, [autoFocus]);\n\n  const inputContainerStyle: CSSProperties = {\n    display: 'flex',\n    gap: theme.vars.spacing.unit,\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    flexWrap: 'wrap',\n  };\n\n  const inputStyle: CSSProperties = {\n    width: `calc(${theme.vars.spacing.unit} * 6)`,\n    height: `calc(${theme.vars.spacing.unit} * 6)`,\n    textAlign: 'center',\n    fontSize: theme.vars.typography.fontSizes.xl,\n    fontWeight: 500,\n    border: `2px solid ${error ? theme.vars.colors.error.main : theme.vars.colors.border}`,\n    borderRadius: theme.vars.borderRadius.medium,\n    color: theme.vars.colors.text.primary,\n    backgroundColor: disabled ? theme.vars.colors.background.disabled : theme.vars.colors.background.surface,\n    outline: 'none',\n    transition: 'border-color 0.2s ease, box-shadow 0.2s ease',\n  };\n\n  const focusedInputStyle: CSSProperties = {\n    borderColor: error ? theme.vars.colors.error.main : theme.vars.colors.primary.main,\n    boxShadow: `0 0 0 2px ${error ? theme.vars.colors.error.main + '20' : theme.vars.colors.primary.main + '20'}`,\n  };\n\n  const handleChange = (index: number, event: ChangeEvent<HTMLInputElement>) => {\n    const newValue = event.target.value;\n\n    // Only allow single character\n    if (newValue.length > 1) return;\n\n    // For numeric type, only allow numbers\n    if (type === 'number' && newValue && !/^\\d$/.test(newValue)) return;\n\n    // Apply pattern if provided\n    if (pattern && newValue && !new RegExp(pattern).test(newValue)) return;\n\n    const newOtp = [...otp];\n    newOtp[index] = newValue;\n    setOtp(newOtp);\n\n    // Call onChange callback\n    const otpValue = newOtp.join('');\n    onChange?.({target: {value: otpValue}});\n\n    // Auto-focus next input if value is entered\n    if (newValue && index < length - 1) {\n      inputRefs.current[index + 1]?.focus();\n    }\n\n    // Call onComplete when all fields are filled\n    if (newOtp.every(digit => digit !== '') && onComplete) {\n      onComplete(otpValue);\n    }\n  };\n\n  const handleKeyDown = (index: number, event: KeyboardEvent<HTMLInputElement>) => {\n    if (event.key === 'Backspace') {\n      if (!otp[index] && index > 0) {\n        // If current field is empty, clear previous field and focus it\n        const newOtp = [...otp];\n        newOtp[index - 1] = '';\n        setOtp(newOtp);\n        inputRefs.current[index - 1]?.focus();\n        onChange?.({target: {value: newOtp.join('')}});\n      } else if (otp[index]) {\n        // Clear current field\n        const newOtp = [...otp];\n        newOtp[index] = '';\n        setOtp(newOtp);\n        onChange?.({target: {value: newOtp.join('')}});\n      }\n    } else if (event.key === 'ArrowLeft' && index > 0) {\n      inputRefs.current[index - 1]?.focus();\n    } else if (event.key === 'ArrowRight' && index < length - 1) {\n      inputRefs.current[index + 1]?.focus();\n    } else if (event.key === 'Enter') {\n      event.preventDefault();\n      if (otp.every(digit => digit !== '') && onComplete) {\n        onComplete(otp.join(''));\n      }\n    }\n  };\n\n  const handlePaste = (event: React.ClipboardEvent<HTMLInputElement>) => {\n    event.preventDefault();\n    const pastedData = event.clipboardData.getData('text').slice(0, length);\n\n    // Validate pasted data\n    let validData = '';\n    for (const char of pastedData) {\n      if (type === 'number' && !/^\\d$/.test(char)) continue;\n      if (pattern && !new RegExp(pattern).test(char)) continue;\n      validData += char;\n    }\n\n    const newOtp = Array(length).fill('');\n    for (let i = 0; i < Math.min(validData.length, length); i++) {\n      newOtp[i] = validData[i];\n    }\n\n    setOtp(newOtp);\n    onChange?.({target: {value: newOtp.join('')}});\n\n    // Focus next empty field or last field\n    const nextEmptyIndex = newOtp.findIndex(digit => digit === '');\n    const focusIndex = nextEmptyIndex !== -1 ? nextEmptyIndex : length - 1;\n    inputRefs.current[focusIndex]?.focus();\n\n    // Call onComplete if all fields are filled\n    if (newOtp.every(digit => digit !== '') && onComplete) {\n      onComplete(newOtp.join(''));\n    }\n  };\n\n  return (\n    <FormControl\n      error={error}\n      helperText={helperText}\n      className={clsx(withVendorCSSClassPrefix('otp-input'), className)}\n      style={style}\n      helperTextAlign=\"center\"\n    >\n      {label && (\n        <InputLabel required={required} error={!!error}>\n          {label}\n        </InputLabel>\n      )}\n      <div style={inputContainerStyle}>\n        {Array.from({length}, (_, index) => (\n          <input\n            key={index}\n            ref={el => {\n              if (el) inputRefs.current[index] = el;\n            }}\n            type={type === 'password' ? 'password' : 'text'}\n            inputMode={type === 'number' ? 'numeric' : 'text'}\n            value={otp[index] || ''}\n            onChange={event => handleChange(index, event)}\n            onKeyDown={event => handleKeyDown(index, event)}\n            onPaste={handlePaste}\n            onFocus={event => {\n              event.target.style.borderColor = error ? theme.vars.colors.error.main : theme.vars.colors.primary.main;\n              event.target.style.boxShadow = `0 0 0 2px ${\n                error ? theme.vars.colors.error.main + '20' : theme.vars.colors.primary.main + '20'\n              }`;\n            }}\n            onBlur={event => {\n              event.target.style.borderColor = error ? theme.vars.colors.error.main : theme.vars.colors.border;\n              event.target.style.boxShadow = 'none';\n            }}\n            style={inputStyle}\n            maxLength={1}\n            placeholder={placeholder}\n            disabled={disabled}\n            aria-label={`${label || 'OTP'} digit ${index + 1}`}\n            aria-invalid={!!error}\n            aria-required={required}\n            autoComplete=\"one-time-code\"\n          />\n        ))}\n      </div>\n    </FormControl>\n  );\n};\n\nexport default OtpField;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, useState} from 'react';\nimport TextField, {TextFieldProps} from '../TextField/TextField';\nimport Eye from '../Icons/Eye';\nimport EyeOff from '../Icons/EyeOff';\n\nexport interface PasswordFieldProps extends Omit<TextFieldProps, 'type' | 'endIcon' | 'onEndIconClick' | 'onChange'> {\n  /**\n   * Callback function when the field value changes\n   */\n  onChange: (value: string) => void;\n}\n\n/**\n * Password field component with show/hide toggle functionality.\n * This component extends TextField and adds password visibility toggle functionality.\n */\nconst PasswordField: FC<PasswordFieldProps> = ({\n  onChange,\n  ...textFieldProps\n}) => {\n  const [showPassword, setShowPassword] = useState(false);\n\n  return (\n    <TextField\n      {...textFieldProps}\n      type={showPassword ? 'text' : 'password'}\n      onChange={e => onChange(e.target.value)}\n      autoComplete=\"current-password\"\n      endIcon={showPassword ? <EyeOff width={16} height={16} /> : <Eye width={16} height={16} />}\n      onEndIconClick={() => setShowPassword(!showPassword)}\n    />\n  );\n};\n\nexport default PasswordField;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * Eye icon component.\n */\nconst Eye: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M2.062 12.348a1 1 0 0 1 0-.696 10.75 10.75 0 0 1 19.876 0 1 1 0 0 1 0 .696 10.75 10.75 0 0 1-19.876 0\" />\n    <circle cx=\"12\" cy=\"12\" r=\"3\" />\n  </svg>\n);\n\nexport default Eye;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * EyeOff icon component.\n */\nconst EyeOff: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M10.733 5.076a10.744 10.744 0 0 1 11.205 6.575 1 1 0 0 1 0 .696 10.747 10.747 0 0 1-1.444 2.49\" />\n    <path d=\"M14.084 14.158a3 3 0 0 1-4.242-4.242\" />\n    <path d=\"M17.479 17.499a10.75 10.75 0 0 1-15.417-5.151 1 1 0 0 1 0-.696 10.75 10.75 0 0 1 4.446-5.143\" />\n    <path d=\"m2 2 20 20\" />\n  </svg>\n);\n\nexport default EyeOff;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, InputHTMLAttributes} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport FormControl from '../FormControl/FormControl';\nimport InputLabel from '../InputLabel/InputLabel';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\nexport interface DatePickerProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'className' | 'type'> {\n  /**\n   * Label text to display above the input\n   */\n  label?: string;\n  /**\n   * Error message to display below the input\n   */\n  error?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Whether the field is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Helper text to display below the input\n   */\n  helperText?: string;\n  /**\n   * Custom date format for the regex pattern\n   */\n  dateFormat?: string;\n}\n\nconst DatePicker: FC<DatePickerProps> = ({\n  label,\n  error,\n  className,\n  required,\n  disabled,\n  helperText,\n  dateFormat = 'yyyy-MM-dd',\n  style = {},\n  ...rest\n}) => {\n  const {theme} = useTheme();\n\n  const inputStyle: CSSProperties = {\n    width: '100%',\n    padding: `${theme.vars.spacing.unit} calc(${theme.vars.spacing.unit} * 1.5)`,\n    border: `1px solid ${error ? theme.vars.colors.error.main : theme.vars.colors.border}`,\n    borderRadius: theme.vars.borderRadius.medium,\n    fontSize: '1rem',\n    color: theme.vars.colors.text.primary,\n    backgroundColor: disabled ? theme.vars.colors.background.disabled : theme.vars.colors.background.surface,\n    outline: 'none',\n    transition: 'border-color 0.2s ease',\n  };\n\n  return (\n    <FormControl\n      error={error}\n      helperText={helperText}\n      className={clsx(withVendorCSSClassPrefix('date-picker'), className)}\n      style={style}\n    >\n      {label && (\n        <InputLabel required={required} error={!!error}>\n          {label}\n        </InputLabel>\n      )}\n      <input\n        type=\"date\"\n        pattern=\"\\d{4}-\\d{2}-\\d{2}\"\n        placeholder={dateFormat}\n        style={inputStyle}\n        disabled={disabled}\n        aria-invalid={!!error}\n        aria-required={required}\n        {...rest}\n      />\n    </FormControl>\n  );\n};\n\nexport default DatePicker;\n", "/**\n * Copyright (c) 2024, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, InputHTMLAttributes} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport FormControl from '../FormControl/FormControl';\nimport InputLabel from '../InputLabel/InputLabel';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\nexport interface CheckboxProps extends Omit<InputHTMLAttributes<HTMLInputElement>, 'className' | 'type'> {\n  /**\n   * Label text to display next to the checkbox\n   */\n  label?: string;\n  /**\n   * Error message to display below the checkbox\n   */\n  error?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Helper text to display below the checkbox\n   */\n  helperText?: string;\n}\n\nconst Checkbox: FC<CheckboxProps> = ({label, error, className, required, helperText, style = {}, ...rest}) => {\n  const {theme} = useTheme();\n\n  const containerStyle: CSSProperties = {\n    display: 'flex',\n    alignItems: 'center',\n    ...style,\n  };\n\n  const inputStyle: CSSProperties = {\n    width: `calc(${theme.vars.spacing.unit} * 2.5)`,\n    height: `calc(${theme.vars.spacing.unit} * 2.5)`,\n    marginRight: theme.vars.spacing.unit,\n    accentColor: theme.vars.colors.primary.main,\n  };\n\n  return (\n    <FormControl\n      error={error}\n      helperText={helperText}\n      className={clsx(withVendorCSSClassPrefix('checkbox'), className)}\n      helperTextMarginLeft={`calc(${theme.vars.spacing.unit} * 3.5)`}\n    >\n      <div style={containerStyle}>\n        <input type=\"checkbox\" style={inputStyle} aria-invalid={!!error} aria-required={required} {...rest} />\n        {label && (\n          <InputLabel\n            required={required}\n            error={!!error}\n            variant=\"inline\"\n            style={{\n              color: error ? theme.vars.colors.error.main : theme.vars.colors.text.primary,\n              fontSize: '0.875rem',\n            }}\n          >\n            {label}\n          </InputLabel>\n        )}\n      </div>\n    </FormControl>\n  );\n};\n\nexport default Checkbox;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, ReactElement} from 'react';\nimport TextField from '../primitives/TextField/TextField';\nimport Select from '../primitives/Select/Select';\nimport {SelectOption} from '../primitives/Select/Select';\nimport OtpField from '../primitives/OtpField/OtpField';\nimport PasswordField from '../primitives/PasswordField/PasswordField';\nimport DatePicker from '../primitives/DatePicker/DatePicker';\nimport Checkbox from '../primitives/Checkbox/Checkbox';\nimport {FieldType} from '@asgardeo/browser';\n\n/**\n * Interface for field configuration.\n */\nexport interface FieldConfig {\n  /**\n   * The name of the field.\n   */\n  name: string;\n  /**\n   * The field type.\n   */\n  type: FieldType;\n  /**\n   * Display name for the field.\n   */\n  label: string;\n  /**\n   * Whether the field is required.\n   */\n  required: boolean;\n  /**\n   * Current value of the field.\n   */\n  value: string;\n  /**\n   * Callback function when the field value changes.\n   */\n  onChange: (value: string) => void;\n  /**\n   * Whether the field is disabled.\n   */\n  disabled?: boolean;\n  /**\n   * Error message to display.\n   */\n  error?: string;\n  /**\n   * Additional CSS class name.\n   */\n  className?: string;\n  /**\n   * Additional options for multi-valued fields.\n   */\n  options?: SelectOption[];\n  /**\n   * Whether the field has been touched/interacted with by the user.\n   */\n  touched?: boolean;\n  /**\n   * Placeholder text for the field.\n   */\n  placeholder?: string;\n}\n\n/**\n * Utility function to validate field values based on type\n */\nexport const validateFieldValue = (\n  value: string,\n  type: FieldType,\n  required: boolean = false,\n  touched: boolean = false,\n): string | null => {\n  if (required && touched && (!value || value.trim() === '')) {\n    return 'This field is required';\n  }\n\n  if (!value || value.trim() === '') {\n    return null;\n  }\n\n  switch (type) {\n    case FieldType.Number:\n      const numValue = parseInt(value, 10);\n      if (isNaN(numValue)) {\n        return 'Please enter a valid number';\n      }\n      break;\n  }\n\n  return null;\n};\n\n/**\n * Factory function to create form fields based on the EmbeddedSignInFlowAuthenticatorParamType.\n *\n * @param config - The field configuration\n * @returns The appropriate React component for the field type\n *\n * @example\n * ```tsx\n * const field = createField({\n *   param: 'username',\n *   type: EmbeddedSignInFlowAuthenticatorParamType.String,\n *   label: 'Username',\n *   confidential: false,\n *   required: true,\n *   value: '',\n *   onChange: (value) => console.log(value)\n * });\n * ```\n */\nexport const createField = (config: FieldConfig): ReactElement => {\n  const {\n    name,\n    type,\n    label,\n    required,\n    value,\n    onChange,\n    disabled = false,\n    error,\n    className,\n    options = [],\n    touched = false,\n    placeholder,\n  } = config;\n\n  const validationError = error || validateFieldValue(value, type, required, touched);\n\n  const commonProps = {\n    name,\n    label,\n    required,\n    disabled,\n    error: validationError,\n    className,\n    value,\n    placeholder,\n  };\n\n  switch (type) {\n    case FieldType.Password:\n      return <PasswordField {...commonProps} onChange={onChange} />;\n    case FieldType.Text:\n      return <TextField {...commonProps} type=\"text\" onChange={e => onChange(e.target.value)} autoComplete=\"off\" />;\n    case FieldType.Email:\n      return <TextField {...commonProps} type=\"email\" onChange={e => onChange(e.target.value)} autoComplete=\"email\" />;\n    case FieldType.Date:\n      return <DatePicker {...commonProps} onChange={e => onChange(e.target.value)} />;\n    case FieldType.Checkbox:\n      const isChecked = value === 'true' || (value as any) === true;\n      return <Checkbox {...commonProps} checked={isChecked} onChange={e => onChange(e.target.checked.toString())} />;\n    case FieldType.Otp:\n      return <OtpField {...commonProps} onChange={e => onChange(e.target.value)} />;\n    case FieldType.Number:\n      return (\n        <TextField\n          {...commonProps}\n          type=\"number\"\n          onChange={e => onChange(e.target.value)}\n          helperText=\"Enter a numeric value\"\n        />\n      );\n    case FieldType.Select:\n      const fieldOptions = options.length > 0 ? options : [];\n\n      if (fieldOptions.length > 0) {\n        return (\n          <Select\n            {...commonProps}\n            options={fieldOptions}\n            onChange={e => onChange(e.target.value)}\n            helperText=\"Select from available options\"\n          />\n        );\n      }\n\n      return (\n        <TextField\n          {...commonProps}\n          type=\"text\"\n          onChange={e => onChange(e.target.value)}\n          helperText=\"Enter multiple values separated by commas (e.g., value1, value2, value3)\"\n          placeholder=\"value1, value2, value3\"\n        />\n      );\n\n    default:\n      return (\n        <TextField\n          {...commonProps}\n          type=\"text\"\n          onChange={e => onChange(e.target.value)}\n          helperText=\"Unknown field type, treating as text\"\n        />\n      );\n  }\n};\n\n/**\n * React component wrapper for the field factory.\n */\nexport const FieldFactory: FC<FieldConfig> = (props: FieldConfig): ReactElement => {\n  return createField(props);\n};\n\nexport default FieldFactory;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {EmbeddedSignInFlowAuthenticator, EmbeddedSignInFlowAuthenticatorParamType, FieldType} from '@asgardeo/browser';\nimport {FC, useEffect} from 'react';\nimport {createField} from '../../../factories/FieldFactory';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport useFlow from '../../../../contexts/Flow/useFlow';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * Identifier First Sign-In Option Component.\n * Handles identifier-first authentication flow (username first, then password).\n */\nconst IdentifierFirst: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  formValues,\n  touchedFields,\n  isLoading,\n  onInputChange,\n  onSubmit,\n  inputClassName = '',\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation(preferences?.i18n);\n  const {setTitle, setSubtitle} = useFlow();\n\n  const formFields = authenticator.metadata?.params?.sort((a, b) => a.order - b.order) || [];\n\n  useEffect(() => {\n    setTitle(t('identifier.first.title'));\n    setSubtitle(t('identifier.first.subtitle'));\n  }, [setTitle, setSubtitle, t]);\n\n  return (\n    <>\n      {formFields.map(param => (\n        <div key={param.param} style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}>\n          {createField({\n            name: param.param,\n            type:\n              param.type === EmbeddedSignInFlowAuthenticatorParamType.String\n                ? param.confidential\n                  ? FieldType.Password\n                  : FieldType.Text\n                : FieldType.Text,\n            label: param.displayName,\n            required: authenticator.requiredParams.includes(param.param),\n            value: formValues[param.param] || '',\n            onChange: value => onInputChange(param.param, value),\n            disabled: isLoading,\n            className: inputClassName,\n            touched: touchedFields[param.param] || false,\n            placeholder: t(`elements.fields.placeholder`, {\n              field: (param.displayName || param.param).toLowerCase(),\n            }),\n          })}\n        </div>\n      ))}\n\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        loading={isLoading}\n        className={buttonClassName}\n        color=\"primary\"\n        variant=\"solid\"\n        fullWidth\n        style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n      >\n        {t('identifier.first.submit.button')}\n      </Button>\n    </>\n  );\n};\n\nexport default IdentifierFirst;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport Button from '../../../primitives/Button/Button';\n\n/**\n * Google Sign-In Button Component.\n * Handles authentication with Google identity provider.\n */\nconst GoogleButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"solid\"\n      color=\"secondary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 67.91 67.901\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g transform=\"translate(-0.001 -0.001)\">\n            <path\n              d=\"M15.049,160.965l-2.364,8.824-8.639.183a34.011,34.011,0,0,1-.25-31.7h0l7.691,1.41,3.369,7.645a20.262,20.262,0,0,0,.19,13.642Z\"\n              transform=\"translate(0 -119.93)\"\n              fill=\"#fbbb00\"\n            />\n            <path\n              d=\"M294.24,208.176A33.939,33.939,0,0,1,282.137,241h0l-9.687-.494-1.371-8.559a20.235,20.235,0,0,0,8.706-10.333H261.628V208.176Z\"\n              transform=\"translate(-226.93 -180.567)\"\n              fill=\"#518ef8\"\n            />\n            <path\n              d=\"M81.668,328.8h0a33.962,33.962,0,0,1-51.161-10.387l11-9.006a20.192,20.192,0,0,0,29.1,10.338Z\"\n              transform=\"translate(-26.463 -268.374)\"\n              fill=\"#28b446\"\n            />\n            <path\n              d=\"M80.451,7.816l-11,9A20.19,20.19,0,0,0,39.686,27.393l-11.06-9.055h0A33.959,33.959,0,0,1,80.451,7.816Z\"\n              transform=\"translate(-24.828)\"\n              fill=\"#f14336\"\n            />\n          </g>\n        </svg>\n      }\n    >\n      {t('elements.buttons.google')}\n    </Button>\n  );\n};\n\nexport default GoogleButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\n\n/**\n * GitHub Sign-In Button Component.\n * Handles authentication with GitHub identity provider.\n */\nconst GitHubButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"solid\"\n      color=\"secondary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 67.91 66.233\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g transform=\"translate(-386.96 658.072)\">\n            <path\n              d=\"M420.915-658.072a33.956,33.956,0,0,0-33.955,33.955,33.963,33.963,0,0,0,23.221,32.22c1.7.314,2.32-.737,2.32-1.633,0-.81-.031-3.484-.046-6.322-9.446,2.054-11.44-4.006-11.44-4.006-1.545-3.925-3.77-4.968-3.77-4.968-3.081-2.107.232-2.064.232-2.064,3.41.239,5.205,3.5,5.205,3.5,3.028,5.19,7.943,3.69,9.881,2.822a7.23,7.23,0,0,1,2.156-4.54c-7.542-.859-15.47-3.77-15.47-16.781a13.141,13.141,0,0,1,3.5-9.114,12.2,12.2,0,0,1,.329-8.986s2.851-.913,9.34,3.48a32.545,32.545,0,0,1,8.5-1.143,32.629,32.629,0,0,1,8.506,1.143c6.481-4.393,9.328-3.48,9.328-3.48a12.185,12.185,0,0,1,.333,8.986,13.115,13.115,0,0,1,3.495,9.114c0,13.042-7.943,15.913-15.5,16.754,1.218,1.054,2.3,3.12,2.3,6.288,0,4.543-.039,8.2-.039,9.318,0,.9.611,1.962,2.332,1.629a33.959,33.959,0,0,0,23.2-32.215,33.955,33.955,0,0,0-33.955-33.955\"\n              fill=\"#ffffff\"\n            />\n          </g>\n        </svg>\n      }\n    >\n      {t('elements.buttons.github')}\n    </Button>\n  );\n};\n\nexport default GitHubButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\n\n/**\n * Microsoft Sign-In Button Component.\n * Handles authentication with Microsoft identity provider.\n */\nconst MicrosoftButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"outline\"\n      color=\"primary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"14\" height=\"14\" viewBox=\"0 0 23 23\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path fill=\"#f3f3f3\" d=\"M0 0h23v23H0z\" />\n          <path fill=\"#f35325\" d=\"M1 1h10v10H1z\" />\n          <path fill=\"#81bc06\" d=\"M12 1h10v10H12z\" />\n          <path fill=\"#05a6f0\" d=\"M1 12h10v10H1z\" />\n          <path fill=\"#ffba08\" d=\"M12 12h10v10H12z\" />\n        </svg>\n      }\n    >\n      {t('elements.buttons.microsoft')}\n    </Button>\n  );\n};\n\nexport default MicrosoftButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\n\n/**\n * Facebook Sign-In Button Component.\n * Handles authentication with Facebook identity provider.\n */\nconst FacebookButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  submitButtonText,\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"solid\"\n      color=\"primary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 512 512\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill=\"#1976D2\"\n            d=\"M448,0H64C28.704,0,0,28.704,0,64v384c0,35.296,28.704,64,64,64h384c35.296,0,64-28.704,64-64V64C512,28.704,483.296,0,448,0z\"\n          />\n          <path\n            fill=\"#FAFAFA\"\n            d=\"M432,256h-80v-64c0-17.664,14.336-16,32-16h32V96h-64l0,0c-53.024,0-96,42.976-96,96v64h-64v80h64v176h96V336h48L432,256z\"\n          />\n        </svg>\n      }\n    >\n      {t('elements.buttons.facebook')}\n    </Button>\n  );\n};\n\nexport default FacebookButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\n\n/**\n * LinkedIn Sign-In Button Component.\n * Handles authentication with LinkedIn identity provider.\n */\nconst LinkedInButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"outline\"\n      color=\"primary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill=\"#0077B5\"\n            d=\"M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433c-1.144 0-2.063-.926-2.063-2.065 0-1.138.92-2.063 2.063-2.063 1.14 0 2.064.925 2.064 2.063 0 1.139-.925 2.065-2.064 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z\"\n          />\n        </svg>\n      }\n    >\n      {t('elements.buttons.linkedin')}\n    </Button>\n  );\n};\n\nexport default LinkedInButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\n\n/**\n * Sign In With Ethereum Button Component.\n * Handles authentication with Sign In With Ethereum identity provider.\n */\nconst SignInWithEthereumButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"outline\"\n      color=\"secondary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill=\"#627EEA\"\n            d=\"M11.944 17.97L4.58 13.62 11.943 24l7.37-10.38-7.372 4.35h.003zM12.056 0L4.69 12.223l7.365 4.354 7.365-4.35L12.056 0z\"\n          />\n        </svg>\n      }\n    >\n      {t('elements.buttons.ethereum')}\n    </Button>\n  );\n};\n\nexport default SignInWithEthereumButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {EmbeddedSignInFlowAuthenticator, EmbeddedSignInFlowAuthenticatorParamType, FieldType} from '@asgardeo/browser';\nimport {FC, useEffect} from 'react';\nimport {createField} from '../../../factories/FieldFactory';\nimport Button from '../../../primitives/Button/Button';\nimport OtpField from '../../../primitives/OtpField/OtpField';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport useFlow from '../../../../contexts/Flow/useFlow';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * Email OTP Sign-In Option Component.\n * Handles email-based OTP authentication.\n */\nconst EmailOtp: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  formValues,\n  touchedFields,\n  isLoading,\n  onInputChange,\n  onSubmit,\n  inputClassName = '',\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation(preferences?.i18n);\n  const {setTitle, setSubtitle} = useFlow();\n\n  const formFields = authenticator.metadata?.params?.sort((a, b) => a.order - b.order) || [];\n\n  useEffect(() => {\n    setTitle(t('email.otp.title'));\n    setSubtitle(t('email.otp.subtitle'));\n  }, [setTitle, setSubtitle, t]);\n\n  // Check if this is an OTP field (typically has 'otpCode' or similar parameter)\n  const hasOtpField = formFields.some(\n    param => param.param.toLowerCase().includes('otp') || param.param.toLowerCase().includes('code'),\n  );\n\n  return (\n    <>\n      {formFields.map(param => {\n        const isOtpParam = param.param.toLowerCase().includes('otp') || param.param.toLowerCase().includes('code');\n\n        return (\n          <div key={param.param} style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}>\n            {isOtpParam && hasOtpField ? (\n              <OtpField\n                length={6}\n                value={formValues[param.param] || ''}\n                onChange={event => onInputChange(param.param, event.target.value)}\n                disabled={isLoading}\n                className={inputClassName}\n              />\n            ) : (\n              createField({\n                name: param.param,\n                type:\n                  param.type === EmbeddedSignInFlowAuthenticatorParamType.String\n                    ? param.confidential\n                      ? FieldType.Password\n                      : FieldType.Text\n                    : FieldType.Text,\n                label: param.displayName,\n                required: authenticator.requiredParams.includes(param.param),\n                value: formValues[param.param] || '',\n                onChange: value => onInputChange(param.param, value),\n                disabled: isLoading,\n                className: inputClassName,\n                touched: touchedFields[param.param] || false,\n              })\n            )}\n          </div>\n        );\n      })}\n\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        loading={isLoading}\n        className={buttonClassName}\n        color=\"primary\"\n        variant=\"solid\"\n        fullWidth\n        style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n      >\n        {t('email.otp.submit.button')}\n      </Button>\n    </>\n  );\n};\n\nexport default EmailOtp;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {EmbeddedSignInFlowAuthenticator, EmbeddedSignInFlowAuthenticatorParamType, FieldType} from '@asgardeo/browser';\nimport {FC, useEffect} from 'react';\nimport {createField} from '../../../factories/FieldFactory';\nimport Button from '../../../primitives/Button/Button';\nimport OtpField from '../../../primitives/OtpField/OtpField';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport useFlow from '../../../../contexts/Flow/useFlow';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * TOTP Sign-In Option Component.\n * Handles Time-based One-Time Password (TOTP) authentication.\n */\nconst Totp: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  formValues,\n  touchedFields,\n  isLoading,\n  onInputChange,\n  onSubmit,\n  inputClassName = '',\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation(preferences?.i18n);\n  const {setTitle, setSubtitle} = useFlow();\n\n  const formFields = authenticator.metadata?.params?.sort((a, b) => a.order - b.order) || [];\n\n  useEffect(() => {\n    setTitle(t('totp.title'));\n    setSubtitle(t('totp.subtitle'));\n  }, [setTitle, setSubtitle, t]);\n\n  const hasTotpField = formFields.some(\n    param => param.param.toLowerCase().includes('totp') || param.param.toLowerCase().includes('token'),\n  );\n\n  return (\n    <>\n      {formFields.map(param => {\n        const isTotpParam = param.param.toLowerCase().includes('totp') || param.param.toLowerCase().includes('token');\n\n        return (\n          <div key={param.param} style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}>\n            {isTotpParam && hasTotpField ? (\n              <OtpField\n                length={6}\n                value={formValues[param.param] || ''}\n                onChange={event => onInputChange(param.param, event.target.value)}\n                disabled={isLoading}\n                className={inputClassName}\n              />\n            ) : (\n              createField({\n                name: param.param,\n                type:\n                  param.type === EmbeddedSignInFlowAuthenticatorParamType.String\n                    ? param.confidential\n                      ? FieldType.Password\n                      : FieldType.Text\n                    : FieldType.Text,\n                label: param.displayName,\n                required: authenticator.requiredParams.includes(param.param),\n                value: formValues[param.param] || '',\n                onChange: value => onInputChange(param.param, value),\n                disabled: isLoading,\n                className: inputClassName,\n                touched: touchedFields[param.param] || false,\n              })\n            )}\n          </div>\n        );\n      })}\n\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        loading={isLoading}\n        className={buttonClassName}\n        color=\"primary\"\n        variant=\"solid\"\n        fullWidth\n        style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n      >\n        {t('totp.submit.button')}\n      </Button>\n    </>\n  );\n};\n\nexport default Totp;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {EmbeddedSignInFlowAuthenticator, EmbeddedSignInFlowAuthenticatorParamType, FieldType} from '@asgardeo/browser';\nimport {FC, useEffect} from 'react';\nimport {createField} from '../../../factories/FieldFactory';\nimport Button from '../../../primitives/Button/Button';\nimport OtpField from '../../../primitives/OtpField/OtpField';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\nimport useFlow from '../../../../contexts/Flow/useFlow';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * SMS OTP Sign-In Option Component.\n * Handles SMS-based OTP authentication.\n */\nconst SmsOtp: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  formValues,\n  touchedFields,\n  isLoading,\n  onInputChange,\n  onSubmit,\n  inputClassName = '',\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation(preferences?.i18n);\n  const {setTitle, setSubtitle} = useFlow();\n\n  const formFields = authenticator.metadata?.params?.sort((a, b) => a.order - b.order) || [];\n\n  useEffect(() => {\n    setTitle(t('sms.otp.title'));\n    setSubtitle(t('sms.otp.subtitle'));\n  }, [setTitle, setSubtitle, t]);\n\n  const hasOtpField = formFields.some(\n    param => param.param.toLowerCase().includes('otp') || param.param.toLowerCase().includes('code'),\n  );\n\n  return (\n    <>\n      {formFields.map(param => {\n        const isOtpParam = param.param.toLowerCase().includes('otp') || param.param.toLowerCase().includes('code');\n\n        return (\n          <div key={param.param} style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}>\n            {isOtpParam && hasOtpField ? (\n              <OtpField\n                length={6}\n                value={formValues[param.param] || ''}\n                onChange={event => onInputChange(param.param, event.target.value)}\n                disabled={isLoading}\n                className={inputClassName}\n              />\n            ) : (\n              createField({\n                name: param.param,\n                type:\n                  param.type === EmbeddedSignInFlowAuthenticatorParamType.String\n                    ? param.confidential\n                      ? FieldType.Password\n                      : FieldType.Text\n                    : FieldType.Text,\n                label: param.displayName,\n                required: authenticator.requiredParams.includes(param.param),\n                value: formValues[param.param] || '',\n                onChange: value => onInputChange(param.param, value),\n                disabled: isLoading,\n                className: inputClassName,\n                touched: touchedFields[param.param] || false,\n              })\n            )}\n          </div>\n        );\n      })}\n\n      <Button\n        type=\"submit\"\n        disabled={isLoading}\n        loading={isLoading}\n        className={buttonClassName}\n        color=\"primary\"\n        variant=\"solid\"\n        fullWidth\n        style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n      >\n        {t('sms.otp.submit.button')}\n      </Button>\n    </>\n  );\n};\n\nexport default SmsOtp;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport useTranslation from '../../../../hooks/useTranslation';\n\n/**\n * Social Login Sign-In Option Component.\n * Handles authentication with external identity providers (Google, GitHub, etc.).\n */\nconst SocialLogin: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n\n  /**\n   * Get display name for the social provider.\n   */\n  const getDisplayName = (): string => {\n    const providerName = authenticator.idp;\n    return t('elements.buttons.social', {connection: providerName});\n  };\n\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"outline\"\n      color=\"secondary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n          <path\n            fill=\"currentColor\"\n            d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm-2 15l-5-5 1.41-1.41L10 14.17l7.59-7.59L19 8l-9 9z\"\n          />\n        </svg>\n      }\n    >\n      {getDisplayName()}\n    </Button>\n  );\n};\n\nexport default SocialLogin;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, JSX, ReactElement} from 'react';\nimport Button from '../../../primitives/Button/Button';\nimport {BaseSignInOptionProps} from './SignInOptionFactory';\nimport {ApplicationNativeAuthenticationConstants, EmbeddedSignInFlowAuthenticatorKnownIdPType} from '@asgardeo/browser';\nimport useTranslation from '../../../../hooks/useTranslation';\n\n/**\n * Multi Option Button Component.\n * Renders authenticators as selectable buttons for multi-option prompts.\n * Used when authenticators don't require immediate user input but need to be selected first.\n */\nconst MultiOptionButton: FC<BaseSignInOptionProps> = ({\n  authenticator,\n  isLoading,\n  onSubmit,\n  buttonClassName = '',\n  preferences,\n}) => {\n  const {t} = useTranslation(preferences?.i18n);\n\n  /**\n   * Get display name for the authenticator.\n   */\n  const getDisplayName = (): string => {\n    let authenticatorName = authenticator.authenticator;\n\n    if (authenticator.idp !== EmbeddedSignInFlowAuthenticatorKnownIdPType.Local) {\n      authenticatorName = authenticator.idp;\n    }\n\n    switch (authenticatorName) {\n      default:\n        return t('elements.buttons.multi.option', {connection: authenticatorName});\n    }\n  };\n\n  /**\n   * Get appropriate icon for the authenticator type.\n   */\n  const getIcon = (): ReactElement | null => {\n    const authenticatorId: string = authenticator.authenticatorId;\n\n    switch (authenticatorId) {\n      case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.SmsOtp:\n        return (\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              fill=\"currentColor\"\n              d=\"M20 15.5c-1.25 0-2.45-.2-3.57-.57a1.02 1.02 0 0 0-1.02.24l-2.2 2.2a15.074 15.074 0 0 1-6.59-6.59l2.2-2.2c.27-.27.35-.67.24-1.02A11.36 11.36 0 0 1 8.5 4c0-.55-.45-1-1-1H4c-.55 0-1 .45-1 1 0 9.39 7.61 17 17 17 .55 0 1-.45 1-1v-3.5c0-.55-.45-1-1-1M12 3v10l3-3h6V3z\"\n            />\n          </svg>\n        );\n      case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.EmailOtp:\n        return (\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              fill=\"currentColor\"\n              d=\"M20 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V6c0-1.1-.9-2-2-2m0 4l-8 5l-8-5V6l8 5l8-5z\"\n            />\n          </svg>\n        );\n      case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Totp:\n        return (\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path fill=\"currentColor\" d=\"M12 1L3 5v6c0 5.55 3.84 10.74 9 12c5.16-1.26 9-6.45 9-12V5z\" />\n          </svg>\n        );\n      case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.PushNotification:\n        return (\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              fill=\"currentColor\"\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8s8 3.59 8 8s-3.59 8-8 8m1-13h-2v6h2zm0 8h-2v2h2z\"\n            />\n          </svg>\n        );\n      case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.Passkey:\n        return (\n          <svg fill=\"currentColor\" width=\"18\" height=\"18\" viewBox=\"0 0 32 32\" xmlns=\"http://www.w3.org/2000/svg\">\n            <g id=\"SVGRepo_bgCarrier\" strokeWidth=\"0\"></g>\n            <g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g>\n            <g id=\"SVGRepo_iconCarrier\">\n              <path d=\"M7.7 4.7C9.36 3.07 12.68 2 16.17 2S23 3.06 24.6 4.7A1 1 0 0 0 26 3.3C23.6.86 19.34 0 16.16 0S8.72.87 6.3 3.3a1 1 0 0 0 1.4 1.4zM29.2 12.55C26.38 6.88 22 4 16.17 4s-10.22 2.88-13 8.55a1 1 0 0 0 .44 1.34 1 1 0 0 0 1.35-.45C7.4 8.45 11.08 6 16.15 6s8.77 2.44 11.27 7.45a1 1 0 0 0 .9.55.87.87 0 0 0 .44-.1 1 1 0 0 0 .45-1.35zM19.4 28.08c-4.13-1.77-5.8-4.5-6-6.5a2.87 2.87 0 0 1 1.13-2.75c.85-.57 2.1.24 3.87 1.52s4.13 3 6.17 1.45c1.8-1.35 2.34-3.76 1.45-6.44A10.85 10.85 0 0 0 16.16 8C7.2 8 4 15.75 4 23a1 1 0 0 0 2 0c0-3 .73-13 10.16-13 3.9 0 7 3.1 8 6 .3.87.8 3-.75 4.2-.8.6-2-.2-3.8-1.47s-4.07-2.94-6.14-1.56a4.87 4.87 0 0 0-2 4.6c.24 2.56 2.24 6 7.18 8.15A1 1 0 0 0 19 30a1 1 0 0 0 .4-1.92zM10 19.24a7.06 7.06 0 0 1 5.2-4.65c2.24-.43 4.32.6 6 3a1 1 0 1 0 1.62-1.17c-2.9-4.07-6.27-4.12-8-3.8A9.1 9.1 0 0 0 8 18.77c-1 3.94.43 8.27 4.2 12.87a1 1 0 0 0 .8.37.94.94 0 0 0 .63-.23 1 1 0 0 0 .14-1.4c-3.34-4.1-4.62-7.83-3.77-11.13zM25.3 24.3a3 3 0 0 1-3.06.63c-2.4-.57-4.78-2.7-5.3-4.25a1 1 0 1 0-1.9.64c.8 2.33 3.87 4.88 6.74 5.56a6.84 6.84 0 0 0 1.52.18 4.7 4.7 0 0 0 3.4-1.35 1 1 0 0 0-1.4-1.4z\"></path>{' '}\n            </g>\n          </svg>\n        );\n      case ApplicationNativeAuthenticationConstants.SupportedAuthenticators.MagicLink:\n        return (\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              fill=\"currentColor\"\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8s8 3.59 8 8s-3.59 8-8 8m1-13h-2v6h2zm0 8h-2v2h2z\"\n            />\n          </svg>\n        );\n      default:\n        return (\n          <svg width=\"18\" height=\"18\" viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n              fill=\"currentColor\"\n              d=\"M12 2C6.48 2 2 6.48 2 12s4.48 10 10 10s10-4.48 10-10S17.52 2 12 2m-2 15l-5-5l1.41-1.41L10 14.17l7.59-7.59L19 8z\"\n            />\n          </svg>\n        );\n    }\n  };\n\n  /**\n   * Handle button click.\n   */\n  const handleClick = () => {\n    // For multi-option buttons, we call onSubmit without form data\n    // This will trigger the authenticator selection and likely move to the next step\n    onSubmit(authenticator);\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"outline\"\n      color=\"primary\"\n      fullWidth\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      startIcon={getIcon()}\n    >\n      {getDisplayName()}\n    </Button>\n  );\n};\n\nexport default MultiOptionButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  CSSProperties,\n  forwardRef,\n  HTMLAttributes,\n  ReactNode,\n  RefAttributes,\n  ForwardRefExoticComponent,\n  useMemo,\n} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport Typography from '../Typography/Typography';\nimport CircleCheck from '../Icons/CircleCheck';\nimport CircleAlert from '../Icons/CircleAlert';\nimport TriangleAlert from '../Icons/TriangleAlert';\nimport Info from '../Icons/Info';\n\nexport type AlertVariant = 'success' | 'error' | 'warning' | 'info';\n\nexport interface AlertProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * The visual variant of the alert that determines color scheme and icon\n   */\n  variant?: AlertVariant;\n  /**\n   * Whether to show the default icon for the variant\n   */\n  showIcon?: boolean;\n  /**\n   * Alert content\n   */\n  children?: ReactNode;\n}\n\nexport interface AlertTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Title content\n   */\n  children?: ReactNode;\n}\n\nexport interface AlertDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {\n  /**\n   * Description content\n   */\n  children?: ReactNode;\n}\n\nconst useAlertStyles = (variant: AlertVariant) => {\n  const {theme} = useTheme();\n\n  return useMemo(() => {\n    const variantStyles: Record<AlertVariant, CSSProperties> = {\n      success: {\n        backgroundColor: `${theme.vars.colors.success.main}15`,\n        borderColor: theme.vars.colors.success.main,\n        color: theme.vars.colors.success.main,\n      },\n      error: {\n        backgroundColor: `${theme.vars.colors.error.main}15`,\n        borderColor: theme.vars.colors.error.main,\n        color: theme.vars.colors.error.main,\n      },\n      warning: {\n        backgroundColor: `${theme.vars.colors.warning.main}15`,\n        borderColor: theme.vars.colors.warning.main,\n        color: theme.vars.colors.warning.main,\n      },\n      info: {\n        backgroundColor: `${theme.vars.colors.primary.main}15`,\n        borderColor: theme.vars.colors.primary.main,\n        color: theme.vars.colors.primary.main,\n      },\n    };\n\n    return {\n      padding: `calc(${theme.vars.spacing.unit} * 2)`,\n      borderRadius: theme.vars.borderRadius.medium,\n      border: '1px solid',\n      display: 'flex',\n      gap: `calc(${theme.vars.spacing.unit} * 1.5)`,\n      alignItems: 'flex-start',\n      ...variantStyles[variant],\n    };\n  }, [theme, variant]);\n};\n\nconst useAlertIconStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      flexShrink: 0,\n      marginTop: `calc(${theme.vars.spacing.unit} * 0.25)`, // Slight alignment adjustment\n      width: `calc(${theme.vars.spacing.unit} * 2.5)`,\n      height: `calc(${theme.vars.spacing.unit} * 2.5)`,\n    }),\n    [theme],\n  );\n};\n\nconst useAlertContentStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      flex: 1,\n      display: 'flex',\n      flexDirection: 'column',\n      gap: theme.vars.spacing.unit,\n    }),\n    [theme],\n  );\n};\n\nconst useAlertTitleStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      margin: 0,\n      fontSize: theme.vars.typography.fontSizes.sm,\n      fontWeight: 600,\n      lineHeight: 1.4,\n      color: 'inherit',\n    }),\n    [theme],\n  );\n};\n\nconst useAlertDescriptionStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      margin: 0,\n      fontSize: theme.vars.typography.fontSizes.sm,\n      lineHeight: 1.4,\n      color: theme.vars.colors.text.secondary,\n    }),\n    [theme],\n  );\n};\n\nconst getDefaultIcon = (variant: AlertVariant) => {\n  switch (variant) {\n    case 'success':\n      return CircleCheck;\n    case 'error':\n      return CircleAlert;\n    case 'warning':\n      return TriangleAlert;\n    case 'info':\n      return Info;\n    default:\n      return Info;\n  }\n};\n\n/**\n * Alert component that displays important information with different severity levels.\n *\n * @example\n * ```tsx\n * <Alert variant=\"success\" showIcon>\n *   <Alert.Title>Success! Your changes have been saved</Alert.Title>\n *   <Alert.Description>\n *     This is an alert with icon, title and description.\n *   </Alert.Description>\n * </Alert>\n * ```\n */\nconst Alert = forwardRef<HTMLDivElement, AlertProps>(\n  ({variant = 'info', showIcon = true, children, className, style, ...rest}, ref) => {\n    const alertStyle = useAlertStyles(variant);\n    const iconStyle = useAlertIconStyles();\n    const contentStyle = useAlertContentStyles();\n    const IconComponent = getDefaultIcon(variant);\n\n    return (\n      <div\n        ref={ref}\n        role=\"alert\"\n        style={{...alertStyle, ...style}}\n        className={clsx(withVendorCSSClassPrefix('alert'), withVendorCSSClassPrefix(`alert-${variant}`), className)}\n        {...rest}\n      >\n        {showIcon && (\n          <div style={iconStyle} className={withVendorCSSClassPrefix('alert-icon')}>\n            <IconComponent />\n          </div>\n        )}\n        <div style={contentStyle} className={withVendorCSSClassPrefix('alert-content')}>\n          {children}\n        </div>\n      </div>\n    );\n  },\n);\n\n/**\n * Alert title component.\n */\nconst AlertTitle = forwardRef<HTMLHeadingElement, AlertTitleProps>(({children, className, style, ...rest}, ref) => {\n  const titleStyle = useAlertTitleStyles();\n\n  // Filter out conflicting props that shouldn't be passed to Typography\n  const {color, ...filteredRest} = rest;\n\n  return (\n    <Typography\n      component=\"h3\"\n      variant=\"h6\"\n      fontWeight={600}\n      style={{...titleStyle, ...style}}\n      className={clsx(withVendorCSSClassPrefix('alert-title'), className)}\n      {...filteredRest}\n    >\n      {children}\n    </Typography>\n  );\n});\n\n/**\n * Alert description component.\n */\nconst AlertDescription = forwardRef<HTMLParagraphElement, AlertDescriptionProps>(\n  ({children, className, style, ...rest}, ref) => {\n    const descriptionStyle = useAlertDescriptionStyles();\n\n    // Filter out conflicting props that shouldn't be passed to Typography\n    const {color, ...filteredRest} = rest;\n\n    return (\n      <Typography\n        component=\"p\"\n        variant=\"body2\"\n        style={{...descriptionStyle, ...style}}\n        className={clsx(withVendorCSSClassPrefix('alert-description'), className)}\n        {...filteredRest}\n      >\n        {children}\n      </Typography>\n    );\n  },\n);\n\nAlert.displayName = 'Alert';\nAlertTitle.displayName = 'Alert.Title';\nAlertDescription.displayName = 'Alert.Description';\n\n// Attach subcomponents to Alert for dot notation usage\n(Alert as any).Title = AlertTitle;\n(Alert as any).Description = AlertDescription;\n\n// TypeScript interface augmentation for dot notation\nexport interface AlertComponent extends ForwardRefExoticComponent<AlertProps & RefAttributes<HTMLDivElement>> {\n  Title: typeof AlertTitle;\n  Description: typeof AlertDescription;\n}\n\nexport default Alert as AlertComponent;\nexport {Alert, AlertTitle, AlertDescription};\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * CircleCheck icon component.\n */\nconst CircleCheck: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\" />\n    <path d=\"m9 12 2 2 4-4\" />\n  </svg>\n);\n\nexport default CircleCheck;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * CircleAlert icon component.\n */\nconst CircleAlert: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\" />\n    <line x1=\"12\" x2=\"12\" y1=\"8\" y2=\"12\" />\n    <line x1=\"12\" x2=\"12.01\" y1=\"16\" y2=\"16\" />\n  </svg>\n);\n\nexport default CircleAlert;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * TriangleAlert icon component.\n */\nconst TriangleAlert: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"m21.73 18-8-14a2 2 0 0 0-3.48 0l-8 14A2 2 0 0 0 4 21h16a2 2 0 0 0 1.73-3\" />\n    <path d=\"M12 9v4\" />\n    <path d=\"M12 17h.01\" />\n  </svg>\n);\n\nexport default TriangleAlert;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * Info icon component.\n */\nconst Info: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <circle cx=\"12\" cy=\"12\" r=\"10\" />\n    <path d=\"M12 16v-4\" />\n    <path d=\"M12 8h.01\" />\n  </svg>\n);\n\nexport default Info;\n", "/**\n * Copyright (c) {{year}}, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {\n  CSSProperties,\n  HTMLAttributes,\n  forwardRef,\n  useMemo,\n  ReactNode,\n  ForwardRefExoticComponent,\n  RefAttributes,\n} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport Typography from '../Typography/Typography';\n\nexport type CardVariant = 'default' | 'outlined' | 'elevated';\n\nexport interface CardProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Card content\n   */\n  children?: ReactNode;\n  /**\n   * Whether the card should be clickable (shows hover effects)\n   */\n  clickable?: boolean;\n  /**\n   * The visual variant of the card\n   */\n  variant?: CardVariant;\n}\n\nexport interface CardHeaderProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Header content\n   */\n  children?: ReactNode;\n}\n\nexport interface CardTitleProps extends HTMLAttributes<HTMLHeadingElement> {\n  /**\n   * Title content\n   */\n  children?: ReactNode;\n  /**\n   * The heading level to use\n   */\n  level?: 1 | 2 | 3 | 4 | 5 | 6;\n}\n\nexport interface CardDescriptionProps extends HTMLAttributes<HTMLParagraphElement> {\n  /**\n   * Description content\n   */\n  children?: ReactNode;\n}\n\nexport interface CardActionProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Action content\n   */\n  children?: ReactNode;\n}\n\nexport interface CardContentProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Content\n   */\n  children?: ReactNode;\n}\n\nexport interface CardFooterProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Footer content\n   */\n  children?: ReactNode;\n}\n\nconst useCardStyles = (variant: CardVariant, clickable: boolean) => {\n  const {theme} = useTheme();\n\n  return useMemo(() => {\n    const baseStyles: CSSProperties = {\n      borderRadius: theme.borderRadius.medium,\n      backgroundColor: theme.colors.background.surface,\n      transition: 'all 0.2s ease-in-out',\n      position: 'relative',\n      display: 'flex',\n      flexDirection: 'column',\n      overflow: 'hidden',\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 2}px`,\n    };\n\n    const variantStyles: Record<CardVariant, CSSProperties> = {\n      default: {\n        ...baseStyles,\n      },\n      outlined: {\n        ...baseStyles,\n        border: `1px solid ${theme.colors.border}`,\n      },\n      elevated: {\n        ...baseStyles,\n        boxShadow: '0 2px 8px rgba(0, 0, 0, 0.1)',\n        border: 'none',\n      },\n    };\n\n    const clickableStyles: CSSProperties = clickable\n      ? {\n          cursor: 'pointer',\n        }\n      : {};\n\n    return {\n      ...variantStyles[variant],\n      ...clickableStyles,\n    };\n  }, [theme, variant, clickable]);\n};\n\nconst useCardHeaderStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      padding: `${theme.spacing.unit * 2}px ${theme.spacing.unit * 2}px 0`,\n      display: 'flex',\n      flexDirection: 'column',\n      gap: `${theme.spacing.unit}px`,\n    }),\n    [theme],\n  );\n};\n\nconst useCardTitleStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      margin: 0,\n      // Typography component will handle color, fontSize, fontWeight, lineHeight\n    }),\n    [theme],\n  );\n};\n\nconst useCardDescriptionStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      margin: 0,\n      color: theme.colors.text.secondary,\n      fontSize: '0.875rem',\n      lineHeight: 1.5,\n    }),\n    [theme],\n  );\n};\n\nconst useCardActionStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      marginTop: `${theme.spacing.unit}px`,\n    }),\n    [theme],\n  );\n};\n\nconst useCardContentStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      padding: `${theme.spacing.unit * 2}px`,\n      flex: 1,\n    }),\n    [theme],\n  );\n};\n\nconst useCardFooterStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    (): CSSProperties => ({\n      padding: `0 ${theme.spacing.unit * 2}px ${theme.spacing.unit * 2}px`,\n      display: 'flex',\n      alignItems: 'center',\n      gap: `${theme.spacing.unit}px`,\n    }),\n    [theme],\n  );\n};\n\n/**\n * Card component that provides a flexible container for content.\n *\n * @example\n * ```tsx\n * <Card variant=\"elevated\" clickable>\n *   <Card.Header>\n *     <Card.Title>Card Title</Card.Title>\n *     <Card.Description>Card Description</Card.Description>\n *     <Card.Action>\n *       <Button variant=\"link\">Action</Button>\n *     </Card.Action>\n *   </Card.Header>\n *   <Card.Content>\n *     <p>Card content goes here</p>\n *   </Card.Content>\n *   <Card.Footer>\n *     <Button>Cancel</Button>\n *     <Button variant=\"outline\">Submit</Button>\n *   </Card.Footer>\n * </Card>\n * ```\n */\nconst Card = forwardRef<HTMLDivElement, CardProps>(\n  ({variant = 'default', clickable = false, children, className, style, ...rest}, ref) => {\n    const cardStyle = useCardStyles(variant, clickable);\n\n    return (\n      <div\n        ref={ref}\n        style={{...cardStyle, ...style}}\n        className={clsx(\n          withVendorCSSClassPrefix('card'),\n          withVendorCSSClassPrefix(`card-${variant}`),\n          {\n            [withVendorCSSClassPrefix('card-clickable')]: clickable,\n          },\n          className,\n        )}\n        {...rest}\n      >\n        {children}\n      </div>\n    );\n  },\n);\n\n/**\n * Card header component that contains the title, description, and optional actions.\n */\nconst CardHeader = forwardRef<HTMLDivElement, CardHeaderProps>(({children, className, style, ...rest}, ref) => {\n  const headerStyle = useCardHeaderStyles();\n\n  return (\n    <div\n      ref={ref}\n      style={{...headerStyle, ...style}}\n      className={clsx(withVendorCSSClassPrefix('card-header'), className)}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\n/**\n * Card title component.\n */\nconst CardTitle = forwardRef<HTMLHeadingElement, CardTitleProps>(\n  ({children, level = 3, className, style, ...rest}, ref) => {\n    const titleStyle = useCardTitleStyles();\n\n    // Map level to Typography variant\n    const getVariantFromLevel = (level: number) => {\n      switch (level) {\n        case 1:\n          return 'h1';\n        case 2:\n          return 'h2';\n        case 3:\n          return 'h3';\n        case 4:\n          return 'h4';\n        case 5:\n          return 'h5';\n        case 6:\n          return 'h6';\n        default:\n          return 'h3';\n      }\n    };\n\n    // Map level to HTML element for ref forwarding\n    const getComponentFromLevel = (level: number) => {\n      switch (level) {\n        case 1:\n          return 'h1';\n        case 2:\n          return 'h2';\n        case 3:\n          return 'h3';\n        case 4:\n          return 'h4';\n        case 5:\n          return 'h5';\n        case 6:\n          return 'h6';\n        default:\n          return 'h3';\n      }\n    };\n\n    // Filter out conflicting props that shouldn't be passed to Typography\n    const {color, ...filteredRest} = rest;\n\n    return (\n      <Typography\n        component={getComponentFromLevel(level)}\n        variant={getVariantFromLevel(level)}\n        style={{...titleStyle, ...style}}\n        className={clsx(withVendorCSSClassPrefix('card-title'), className)}\n        fontWeight={600}\n        {...filteredRest}\n        // We can't forward ref to Typography since it doesn't use forwardRef\n        // The ref will be handled by the Typography component's underlying element\n      >\n        {children}\n      </Typography>\n    );\n  },\n);\n\n/**\n * Card description component.\n */\nconst CardDescription = forwardRef<HTMLParagraphElement, CardDescriptionProps>(\n  ({children, className, style, ...rest}, ref) => {\n    const descriptionStyle = useCardDescriptionStyles();\n\n    // Filter out conflicting props that shouldn't be passed to Typography\n    const {color, ...filteredRest} = rest;\n\n    return (\n      <Typography\n        component=\"p\"\n        variant=\"body2\"\n        color=\"textSecondary\"\n        style={{...descriptionStyle, ...style}}\n        className={clsx(withVendorCSSClassPrefix('card-description'), className)}\n        {...filteredRest}\n      >\n        {children}\n      </Typography>\n    );\n  },\n);\n\n/**\n * Card action component for action elements in the header.\n */\nconst CardAction = forwardRef<HTMLDivElement, CardActionProps>(({children, className, style, ...rest}, ref) => {\n  const actionStyle = useCardActionStyles();\n\n  return (\n    <div\n      ref={ref}\n      style={{...actionStyle, ...style}}\n      className={clsx(withVendorCSSClassPrefix('card-action'), className)}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\n/**\n * Card content component that contains the main content of the card.\n */\nconst CardContent = forwardRef<HTMLDivElement, CardContentProps>(({children, className, style, ...rest}, ref) => {\n  const contentStyle = useCardContentStyles();\n\n  return (\n    <div\n      ref={ref}\n      style={{...contentStyle, ...style}}\n      className={clsx(withVendorCSSClassPrefix('card-content'), className)}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\n/**\n * Card footer component that contains footer actions or additional information.\n */\nconst CardFooter = forwardRef<HTMLDivElement, CardFooterProps>(({children, className, style, ...rest}, ref) => {\n  const footerStyle = useCardFooterStyles();\n\n  return (\n    <div\n      ref={ref}\n      style={{...footerStyle, ...style}}\n      className={clsx(withVendorCSSClassPrefix('card-footer'), className)}\n      {...rest}\n    >\n      {children}\n    </div>\n  );\n});\n\nCard.displayName = 'Card';\nCardHeader.displayName = 'Card.Header';\nCardTitle.displayName = 'Card.Title';\nCardDescription.displayName = 'Card.Description';\nCardAction.displayName = 'Card.Action';\nCardContent.displayName = 'Card.Content';\nCardFooter.displayName = 'Card.Footer';\n\n// Attach subcomponents to Card for dot notation usage\n(Card as any).Header = CardHeader;\n(Card as any).Title = CardTitle;\n(Card as any).Description = CardDescription;\n(Card as any).Action = CardAction;\n(Card as any).Content = CardContent;\n(Card as any).Footer = CardFooter;\n\n// TypeScript interface augmentation for dot notation\nexport interface CardComponent extends ForwardRefExoticComponent<CardProps & RefAttributes<HTMLDivElement>> {\n  Action: typeof CardAction;\n  Content: typeof CardContent;\n  Description: typeof CardDescription;\n  Footer: typeof CardFooter;\n  Header: typeof CardHeader;\n  Title: typeof CardTitle;\n}\n\nexport default Card as CardComponent;\nexport {Card, CardHeader, CardTitle, CardDescription, CardAction, CardContent, CardFooter};\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport {clsx} from 'clsx';\nimport {FC, HTMLAttributes, useMemo} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport Typography from '../Typography/Typography';\n\nexport type DividerOrientation = 'horizontal' | 'vertical';\nexport type DividerVariant = 'solid' | 'dashed' | 'dotted';\n\nexport interface DividerProps extends HTMLAttributes<HTMLDivElement> {\n  /**\n   * Text to display in the center of the divider\n   */\n  children?: React.ReactNode;\n\n  /**\n   * Custom color for the divider\n   */\n  color?: string;\n\n  /**\n   * The orientation of the divider\n   */\n  orientation?: DividerOrientation;\n\n  /**\n   * The variant style of the divider\n   */\n  variant?: DividerVariant;\n}\n\nconst useStyles = (orientation: DividerOrientation, variant: DividerVariant, color?: string, hasChildren?: boolean) => {\n  const {theme} = useTheme();\n\n  return useMemo(() => {\n    const baseColor = color || theme.colors.border;\n    const borderStyle = variant === 'solid' ? 'solid' : variant === 'dashed' ? 'dashed' : 'dotted';\n\n    const styles = `\n      .${withVendorCSSClassPrefix('divider')} {\n        margin: calc(${theme.vars.spacing.unit} * 2) 0;\n      }\n\n      .${withVendorCSSClassPrefix('divider--vertical')} {\n        display: inline-block;\n        height: 100%;\n        min-height: calc(${theme.vars.spacing.unit} * 2);\n        width: 1px;\n        border-left: 1px ${borderStyle} ${baseColor};\n        margin: 0 calc(${theme.vars.spacing.unit} * 1);\n      }\n\n      .${withVendorCSSClassPrefix('divider--horizontal')} {\n        display: flex;\n        align-items: center;\n        width: 100%;\n      }\n\n      .${withVendorCSSClassPrefix('divider--horizontal')}:not(.${withVendorCSSClassPrefix('divider--with-text')}) {\n        height: 1px;\n        border-top: 1px ${borderStyle} ${baseColor};\n      }\n\n      .${withVendorCSSClassPrefix('divider__line')} {\n        flex: 1;\n        height: 1px;\n        border-top: 1px ${borderStyle} ${baseColor};\n      }\n\n      .${withVendorCSSClassPrefix('divider__text')} {\n        background-color: ${theme.vars.colors.background.surface};\n        padding: 0 calc(${theme.vars.spacing.unit} * 1);\n        white-space: nowrap;\n      }\n    `;\n\n    return styles;\n  }, [orientation, variant, color, hasChildren, theme]);\n};\n\n/**\n * Divider component for separating content sections.\n *\n * @example\n * ```tsx\n * // Basic horizontal divider\n * <Divider />\n *\n * // Divider with text\n * <Divider>OR</Divider>\n *\n * // Vertical divider\n * <Divider orientation=\"vertical\" />\n *\n * // Custom styled divider\n * <Divider variant=\"dashed\" color=\"#ccc\">Continue with</Divider>\n * ```\n */\nconst Divider: FC<DividerProps> = ({\n  orientation = 'horizontal',\n  variant = 'solid',\n  children,\n  color,\n  className,\n  style,\n  ...rest\n}) => {\n  const styles = useStyles(orientation, variant, color, !!children);\n\n  if (orientation === 'vertical') {\n    return (\n      <>\n        <style>{styles}</style>\n        <div\n          className={clsx(\n            withVendorCSSClassPrefix('divider'),\n            withVendorCSSClassPrefix('divider--vertical'),\n            className,\n          )}\n          style={style}\n          role=\"separator\"\n          aria-orientation=\"vertical\"\n          {...rest}\n        />\n      </>\n    );\n  }\n\n  if (children) {\n    return (\n      <>\n        <style>{styles}</style>\n        <div\n          className={clsx(\n            withVendorCSSClassPrefix('divider'),\n            withVendorCSSClassPrefix('divider--horizontal'),\n            withVendorCSSClassPrefix('divider--with-text'),\n            className,\n          )}\n          style={style}\n          role=\"separator\"\n          aria-orientation=\"horizontal\"\n          {...rest}\n        >\n          <div className={withVendorCSSClassPrefix('divider__line')} />\n          <Typography\n            variant=\"body2\"\n            color=\"textSecondary\"\n            className={withVendorCSSClassPrefix('divider__text')}\n            inline\n          >\n            {children}\n          </Typography>\n          <div className={withVendorCSSClassPrefix('divider__line')} />\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <>\n      <style>{styles}</style>\n      <div\n        className={clsx(\n          withVendorCSSClassPrefix('divider'),\n          withVendorCSSClassPrefix('divider--horizontal'),\n          className,\n        )}\n        style={style}\n        role=\"separator\"\n        aria-orientation=\"horizontal\"\n        {...rest}\n      />\n    </>\n  );\n};\n\nexport default Divider;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {clsx} from 'clsx';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport useTheme from '../../../contexts/Theme/useTheme';\n\n/**\n * Props for the Logo component.\n */\nexport interface LogoProps {\n  /**\n   * Custom CSS class name for the logo.\n   */\n  className?: string;\n  /**\n   * Custom logo URL to override theme logo.\n   */\n  src?: string;\n  /**\n   * Custom alt text for the logo.\n   */\n  alt?: string;\n  /**\n   * Custom title for the logo.\n   */\n  title?: string;\n  /**\n   * Size of the logo.\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Custom style object.\n   */\n  style?: React.CSSProperties;\n}\n\n/**\n * Logo component that displays the brand logo from theme or custom source.\n *\n * @param props - The props for the Logo component.\n * @returns The rendered Logo component.\n */\nconst Logo: FC<LogoProps> = ({className, src, alt, title, size = 'medium', style}) => {\n  const {theme} = useTheme();\n\n  // Get logo configuration from theme - use actual values, not CSS variables\n  // Access the actual theme config values, not the CSS variable references from .vars\n  const logoConfig = theme.images?.logo;\n\n  const logoSrc = src || logoConfig?.url;\n\n  const logoAlt = alt || logoConfig?.alt || 'Logo';\n\n  const logoTitle = title || logoConfig?.title;\n\n  const logoClasses = clsx(withVendorCSSClassPrefix('logo'), withVendorCSSClassPrefix(`logo--${size}`), className);\n\n  const sizeStyles: Record<string, React.CSSProperties> = {\n    small: {\n      height: '32px',\n      maxWidth: '120px',\n    },\n    medium: {\n      height: '48px',\n      maxWidth: '180px',\n    },\n    large: {\n      height: '64px',\n      maxWidth: '240px',\n    },\n  };\n\n  const defaultStyles: React.CSSProperties = {\n    width: 'auto',\n    objectFit: 'contain',\n    ...sizeStyles[size],\n    ...style,\n  };\n\n  if (!logoSrc) {\n    return null;\n  }\n\n  return <img src={logoSrc} alt={logoAlt} title={logoTitle} className={logoClasses} style={defaultStyles} />;\n};\n\nexport default Logo;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  EmbeddedSignInFlowInitiateResponse,\n  EmbeddedSignInFlowHandleResponse,\n  EmbeddedSignInFlowHandleRequestPayload,\n} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport BaseSignIn, {BaseSignInProps} from './BaseSignIn';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport {CardProps} from '../../primitives/Card/Card';\n\n/**\n * Props for the SignIn component.\n * Extends BaseSignInProps for full compatibility with the React BaseSignIn component\n */\nexport type SignInProps = Pick<BaseSignInProps, 'className' | 'onSuccess' | 'onError' | 'variant' | 'size'>;\n\n/**\n * A styled SignIn component that provides native authentication flow with pre-built styling.\n * This component handles the API calls for authentication and delegates UI logic to BaseSignIn.\n *\n * @example\n * ```tsx\n * import { SignIn } from '@asgardeo/react';\n *\n * const App = () => {\n *   return (\n *     <SignIn\n *       onSuccess={(authData) => {\n *         console.log('Authentication successful:', authData);\n *         // Handle successful authentication (e.g., redirect, store tokens)\n *       }}\n *       onError={(error) => {\n *         console.error('Authentication failed:', error);\n *       }}\n *       size=\"medium\"\n *       variant=\"outlined\"\n *     />\n *   );\n * };\n * ```\n */\nconst SignIn: FC<SignInProps> = ({className, size = 'medium', ...rest}: SignInProps) => {\n  const {signIn, afterSignInUrl, isInitialized, isLoading} = useAsgardeo();\n\n  /**\n   * Initialize the authentication flow.\n   */\n  const handleInitialize = async (): Promise<EmbeddedSignInFlowInitiateResponse> => {\n    return await signIn({response_mode: 'direct'});\n  };\n\n  /**\n   * Handle authentication steps.\n   */\n  const handleOnSubmit = async (\n    payload: EmbeddedSignInFlowHandleRequestPayload,\n    request: Request,\n  ): Promise<EmbeddedSignInFlowHandleResponse> => {\n    return await signIn(payload, request);\n  };\n\n  /**\n   * Handle successful authentication and redirect with query params.\n   */\n  const handleSuccess = (authData: Record<string, any>): void => {\n    if (authData && afterSignInUrl) {\n      const url: URL = new URL(afterSignInUrl, window.location.origin);\n\n      Object.entries(authData).forEach(([key, value]: [string, any]) => {\n        if (value !== undefined && value !== null) {\n          url.searchParams.append(key, String(value));\n        }\n      });\n\n      window.location.href = url.toString();\n    }\n  };\n\n  return (\n    <BaseSignIn\n      isLoading={isLoading || !isInitialized}\n      afterSignInUrl={afterSignInUrl}\n      onInitialize={handleInitialize}\n      onSubmit={handleOnSubmit}\n      onSuccess={handleSuccess}\n      className={className}\n      size={size}\n      {...rest}\n    />\n  );\n};\n\nexport default SignIn;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  EmbeddedFlowExecuteRequestPayload,\n  EmbeddedFlowExecuteResponse,\n  EmbeddedFlowStatus,\n  EmbeddedFlowComponentType,\n  EmbeddedFlowResponseType,\n  withVendorCSSClassPrefix,\n  AsgardeoAPIError,\n} from '@asgardeo/browser';\nimport {clsx} from 'clsx';\nimport {FC, ReactElement, FormEvent, useEffect, useState, useCallback, useRef, useMemo, CSSProperties} from 'react';\nimport {renderSignUpComponents} from './options/SignUpOptionFactory';\nimport FlowProvider from '../../../contexts/Flow/FlowProvider';\nimport useFlow from '../../../contexts/Flow/useFlow';\nimport {useForm, FormField} from '../../../hooks/useForm';\nimport useTranslation from '../../../hooks/useTranslation';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport Alert from '../../primitives/Alert/Alert';\nimport Card, {CardProps} from '../../primitives/Card/Card';\nimport Logo from '../../primitives/Logo/Logo';\nimport Spinner from '../../primitives/Spinner/Spinner';\nimport Typography from '../../primitives/Typography/Typography';\n\n/**\n * Props for the BaseSignUp component.\n */\nexport interface BaseSignUpProps {\n  /**\n   * URL to redirect after successful sign-up.\n   */\n  afterSignUpUrl?: string;\n\n  /**\n   * Custom CSS class name for the submit button.\n   */\n  buttonClassName?: string;\n\n  /**\n   * Custom CSS class name for the form container.\n   */\n  className?: string;\n\n  /**\n   * Custom CSS class name for error messages.\n   */\n  errorClassName?: string;\n\n  /**\n   * Custom CSS class name for form inputs.\n   */\n  inputClassName?: string;\n\n  isInitialized?: boolean;\n\n  /**\n   * Custom CSS class name for info messages.\n   */\n  messageClassName?: string;\n\n  /**\n   * Callback function called when the sign-up flow completes and requires redirection.\n   * This allows platform-specific handling of redirects (e.g., Next.js router.push).\n   * @param response - The response from the sign-up flow containing the redirect URL, etc.\n   */\n  onComplete?: (response: EmbeddedFlowExecuteResponse) => void;\n\n  /**\n   * Callback function called when sign-up fails.\n   * @param error - The error that occurred during sign-up.\n   */\n  onError?: (error: Error) => void;\n\n  /**\n   * Callback function called when sign-up flow status changes.\n   * @param response - The current sign-up response.\n   */\n  onFlowChange?: (response: EmbeddedFlowExecuteResponse) => void;\n\n  /**\n   * Function to initialize sign-up flow.\n   * @returns Promise resolving to the initial sign-up response.\n   */\n  onInitialize?: (payload?: EmbeddedFlowExecuteRequestPayload) => Promise<EmbeddedFlowExecuteResponse>;\n\n  /**\n   * Function to handle sign-up steps.\n   * @param payload - The sign-up payload.\n   * @returns Promise resolving to the sign-up response.\n   */\n  onSubmit?: (payload: EmbeddedFlowExecuteRequestPayload) => Promise<EmbeddedFlowExecuteResponse>;\n\n  /**\n   * Size variant for the component.\n   */\n  size?: 'small' | 'medium' | 'large';\n  /**\n   * Theme variant for the component.\n   */\n  variant?: CardProps['variant'];\n\n  /**\n   *  Whether to redirect after sign-up.\n   */\n  shouldRedirectAfterSignUp?: boolean;\n}\n\n/**\n * Custom hook for managing component styles\n */\nconst useStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    () => ({\n      card: {\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n        minWidth: '420px',\n      } as CSSProperties,\n      header: {\n        gap: 0,\n      } as CSSProperties,\n      subtitle: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 1)`,\n      } as CSSProperties,\n      messagesContainer: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      messageItem: {\n        marginBottom: `calc(${theme.vars.spacing.unit} * 1)`,\n      } as CSSProperties,\n      errorContainer: {\n        marginBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      contentContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      loadingContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n      } as CSSProperties,\n      loadingText: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      divider: {\n        margin: `calc(${theme.vars.spacing.unit} * 1) 0`,\n      } as CSSProperties,\n      logoContainer: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        marginBottom: `calc(${theme.vars.spacing.unit} * 3)`,\n      } as CSSProperties,\n      centeredContainer: {\n        textAlign: 'center',\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n      } as CSSProperties,\n      passkeyContainer: {\n        marginBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      passkeyText: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 1)`,\n        color: theme.vars.colors.text.secondary,\n      } as CSSProperties,\n    }),\n    [theme.vars.spacing.unit, theme.vars.colors.text.secondary],\n  );\n};\n\n/**\n * Base SignUp component that provides embedded sign-up flow.\n * This component handles both the presentation layer and sign-up flow logic.\n * It accepts API functions as props to maintain framework independence.\n *\n * @example\n * ```tsx\n * import { BaseSignUp } from '@asgardeo/react';\n *\n * const MySignUp = () => {\n *   return (\n *     <BaseSignUp\n *       onInitialize={async (payload) => {\n *         // Your API call to initialize sign-up\n *         return await initializeSignUp(payload);\n *       }}\n *       onSubmit={async (payload) => {\n *         // Your API call to handle sign-up\n *         return await handleSignUp(payload);\n *       }}\n *       onSuccess={(response) => {\n *         console.log('Success:', response);\n *       }}       *       onError={(error) => {\n *         console.error('Error:', error);\n *       }}\n *       onComplete={(redirectUrl) => {\n *         // Platform-specific redirect handling (e.g., Next.js router.push)\n *         router.push(redirectUrl); // or window.location.href = redirectUrl\n *       }}\n *       className=\"max-w-md mx-auto\"\n *     />\n *   );\n * };\n * ```\n */\nconst BaseSignUp: FC<BaseSignUpProps> = props => {\n  const {theme} = useTheme();\n  const styles = useStyles();\n\n  return (\n    <div>\n      <div style={styles.logoContainer}>\n        <Logo size=\"large\" />\n      </div>\n      <FlowProvider>\n        <BaseSignUpContent {...props} />\n      </FlowProvider>\n    </div>\n  );\n};\n\n/**\n * Internal component that consumes FlowContext and renders the sign-up UI.\n */\nconst BaseSignUpContent: FC<BaseSignUpProps> = ({\n  afterSignUpUrl,\n  onInitialize,\n  onSubmit,\n  onError,\n  onFlowChange,\n  onComplete,\n  className = '',\n  inputClassName = '',\n  buttonClassName = '',\n  errorClassName = '',\n  messageClassName = '',\n  size = 'medium',\n  variant = 'outlined',\n  isInitialized,\n}) => {\n  const {theme} = useTheme();\n  const {t} = useTranslation();\n  const {subtitle: flowSubtitle, title: flowTitle, messages: flowMessages} = useFlow();\n  const styles = useStyles();\n\n  const [isLoading, setIsLoading] = useState(false);\n  const [isFlowInitialized, setIsFlowInitialized] = useState(false);\n  const [currentFlow, setCurrentFlow] = useState<EmbeddedFlowExecuteResponse | null>(null);\n  const [error, setError] = useState<string | null>(null);\n  const [formData, setFormData] = useState<Record<string, any>>({});\n\n  // Ref to track if initialization has been attempted to prevent multiple calls\n  const initializationAttemptedRef = useRef(false);\n\n  /**\n   * Extract form fields from flow components\n   */\n  const extractFormFields = useCallback(\n    (components: any[]): FormField[] => {\n      const fields: FormField[] = [];\n\n      const processComponents = (comps: any[]) => {\n        comps.forEach(component => {\n          if (component.type === EmbeddedFlowComponentType.Input) {\n            const config = component.config || {};\n            fields.push({\n              name: config.name || component.id,\n              required: config.required || false,\n              initialValue: config.defaultValue || '',\n              validator: (value: string) => {\n                if (config.required && (!value || value.trim() === '')) {\n                  return t('field.required');\n                }\n                // Add email validation if it's an email field\n                if (config.type === 'email' && value && !/^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/.test(value)) {\n                  return t('field.email.invalid');\n                }\n                // Add password strength validation if it's a password field\n                if (config.type === 'password' && value && value.length < 8) {\n                  return t('field.password.weak');\n                }\n                return null;\n              },\n            });\n          }\n\n          if (component.components && Array.isArray(component.components)) {\n            processComponents(component.components);\n          }\n        });\n      };\n\n      processComponents(components);\n      return fields;\n    },\n    [t],\n  );\n\n  const formFields = currentFlow?.data?.components ? extractFormFields(currentFlow.data.components) : [];\n\n  const form = useForm<Record<string, string>>({\n    initialValues: {},\n    fields: formFields,\n    validateOnBlur: true,\n    validateOnChange: true,\n    requiredMessage: t('field.required'),\n  });\n\n  const {\n    values: formValues,\n    touched: touchedFields,\n    errors: formErrors,\n    isValid: isFormValid,\n    setValue: setFormValue,\n    setTouched: setFormTouched,\n    clearErrors: clearFormErrors,\n    validateField: validateFormField,\n    validateForm,\n    touchAllFields,\n    reset: resetForm,\n  } = form;\n\n  /**\n   * Setup form fields based on the current flow.\n   */\n  const setupFormFields = useCallback(\n    (flowResponse: EmbeddedFlowExecuteResponse) => {\n      const fields = extractFormFields(flowResponse.data?.components || []);\n      const initialValues: Record<string, string> = {};\n\n      fields.forEach(field => {\n        initialValues[field.name] = field.initialValue || '';\n      });\n\n      // Reset form with new values\n      resetForm();\n\n      // Set initial values for all fields\n      Object.keys(initialValues).forEach(key => {\n        setFormValue(key, initialValues[key]);\n      });\n    },\n    [extractFormFields, resetForm, setFormValue],\n  );\n\n  /**\n   * Handle input value changes.\n   */\n  const handleInputChange = (name: string, value: string) => {\n    setFormValue(name, value);\n    setFormTouched(name, true);\n  };\n\n  /**\n   * Handle component submission (for buttons outside forms).\n   */\n  const handleSubmit = async (component: any, data?: Record<string, any>) => {\n    if (!currentFlow) {\n      return;\n    }\n\n    setIsLoading(true);\n    setError(null);\n\n    try {\n      // Filter out empty or undefined input values\n      const filteredInputs: Record<string, any> = {};\n      if (data) {\n        Object.entries(data).forEach(([key, value]) => {\n          if (value !== null && value !== undefined && value !== '') {\n            filteredInputs[key] = value;\n          }\n        });\n      }\n\n      const payload: EmbeddedFlowExecuteRequestPayload = {\n        ...(currentFlow.flowId && {flowId: currentFlow.flowId}),\n        flowType: (currentFlow as any).flowType || 'REGISTRATION',\n        inputs: filteredInputs,\n        actionId: component.id,\n      } as any;\n\n      const response = await onSubmit(payload);\n      onFlowChange?.(response);\n\n      if (response.flowStatus === EmbeddedFlowStatus.Complete) {\n        onComplete?.(response);\n        return;\n      }\n\n      if (response.flowStatus === EmbeddedFlowStatus.Incomplete) {\n        // Check if the response contains a redirection URL and redirect if needed\n        if (handleRedirectionIfNeeded(response, component)) {\n          return;\n        }\n\n        setCurrentFlow(response);\n        setupFormFields(response);\n      }\n    } catch (err) {\n      const errorMessage = err instanceof AsgardeoAPIError ? err.message : t('errors.sign.up.flow.failure');\n      setError(errorMessage);\n      onError?.(err as Error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  /**\n   * Check if the response contains a redirection URL and perform the redirect if necessary.\n   * @param response - The sign-up response\n   * @param component - The component that triggered the submission (needed for actionId)\n   * @returns true if a redirect was performed, false otherwise\n   */\n  const handleRedirectionIfNeeded = (response: EmbeddedFlowExecuteResponse, component: any): boolean => {\n    if (response?.type === EmbeddedFlowResponseType.Redirection && response?.data?.redirectURL) {\n      /**\n       * Open a popup window to handle redirection prompts for social sign-up\n       */\n      const redirectUrl = response.data.redirectURL;\n      const popup = window.open(redirectUrl, 'oauth_popup', 'width=500,height=600,scrollbars=yes,resizable=yes');\n\n      if (!popup) {\n        console.error('Failed to open popup window');\n        return false;\n      }\n\n      /**\n       * Add an event listener to the window to capture the message from the popup\n       */\n      const messageHandler = async function messageEventHandler(event: MessageEvent) {\n        /**\n         * Check if the message is from our popup window\n         */\n        if (event.source !== popup) {\n          return;\n        }\n\n        /**\n         * Check the origin of the message to ensure it's from a trusted source\n         */\n        const expectedOrigin = afterSignUpUrl ? new URL(afterSignUpUrl).origin : window.location.origin;\n        if (event.origin !== expectedOrigin && event.origin !== window.location.origin) {\n          return;\n        }\n\n        const {code, state} = event.data;\n\n        if (code && state) {\n          const payload: EmbeddedFlowExecuteRequestPayload = {\n            ...(currentFlow.flowId && {flowId: currentFlow.flowId}),\n            flowType: (currentFlow as any).flowType || 'REGISTRATION',\n            inputs: {\n              code,\n              state,\n            },\n            actionId: '',\n          } as any;\n\n          try {\n            const continueResponse = await onSubmit(payload);\n            onFlowChange?.(continueResponse);\n\n            if (continueResponse.flowStatus === EmbeddedFlowStatus.Complete) {\n              onComplete?.(continueResponse);\n            } else if (continueResponse.flowStatus === EmbeddedFlowStatus.Incomplete) {\n              setCurrentFlow(continueResponse);\n              setupFormFields(continueResponse);\n            }\n\n            popup.close();\n            cleanup();\n          } catch (err) {\n            const errorMessage = err instanceof AsgardeoAPIError ? err.message : t('errors.sign.up.flow.failure');\n            setError(errorMessage);\n            onError?.(err as Error);\n            popup.close();\n            cleanup();\n          }\n        }\n      };\n\n      const cleanup = () => {\n        window.removeEventListener('message', messageHandler);\n        if (popupMonitor) {\n          clearInterval(popupMonitor);\n        }\n      };\n\n      window.addEventListener('message', messageHandler);\n\n      /**\n       * Monitor popup for closure and URL changes\n       */\n      let hasProcessedCallback = false; // Prevent multiple processing\n      const popupMonitor = setInterval(async () => {\n        try {\n          if (popup.closed) {\n            cleanup();\n            return;\n          }\n\n          // Skip if we've already processed a callback\n          if (hasProcessedCallback) {\n            return;\n          }\n\n          // Try to access popup URL to check for callback\n          try {\n            const popupUrl = popup.location.href;\n\n            // Check if we've been redirected to the callback URL\n            if (popupUrl && (popupUrl.includes('code=') || popupUrl.includes('error='))) {\n              hasProcessedCallback = true; // Set flag to prevent multiple processing\n\n              // Parse the URL for OAuth parameters\n              const url = new URL(popupUrl);\n              const code = url.searchParams.get('code');\n              const state = url.searchParams.get('state');\n              const error = url.searchParams.get('error');\n\n              if (error) {\n                console.error('OAuth error:', error);\n                popup.close();\n                cleanup();\n                return;\n              }\n\n              if (code && state) {\n                const payload: EmbeddedFlowExecuteRequestPayload = {\n                  ...(currentFlow.flowId && {flowId: currentFlow.flowId}),\n                  flowType: (currentFlow as any).flowType || 'REGISTRATION',\n                  inputs: {\n                    code,\n                    state,\n                  },\n                  actionId: '',\n                } as any;\n\n                try {\n                  const continueResponse = await onSubmit(payload);\n                  onFlowChange?.(continueResponse);\n\n                  if (continueResponse.flowStatus === EmbeddedFlowStatus.Complete) {\n                    onComplete?.(continueResponse);\n                  } else if (continueResponse.flowStatus === EmbeddedFlowStatus.Incomplete) {\n                    setCurrentFlow(continueResponse);\n                    setupFormFields(continueResponse);\n                  }\n\n                  popup.close();\n                } catch (err) {\n                  const errorMessage = err instanceof AsgardeoAPIError ? err.message : t('errors.sign.up.flow.failure');\n                  setError(errorMessage);\n                  onError?.(err as Error);\n                  popup.close();\n                }\n              }\n            }\n          } catch (e) {\n            // Cross-origin error is expected when popup navigates to OAuth provider\n            // This is normal and we can ignore it\n          }\n        } catch (e) {\n          console.error('Error monitoring popup:', e);\n        }\n      }, 1000);\n\n      return true;\n    }\n\n    return false;\n  };\n\n  // Generate CSS classes\n  const containerClasses = clsx(\n    [\n      withVendorCSSClassPrefix('signup'),\n      withVendorCSSClassPrefix(`signup--${size}`),\n      withVendorCSSClassPrefix(`signup--${variant}`),\n    ],\n    className,\n  );\n\n  const inputClasses = clsx(\n    [\n      withVendorCSSClassPrefix('signup__input'),\n      size === 'small' && withVendorCSSClassPrefix('signup__input--small'),\n      size === 'large' && withVendorCSSClassPrefix('signup__input--large'),\n    ],\n    inputClassName,\n  );\n\n  const buttonClasses = clsx(\n    [\n      withVendorCSSClassPrefix('signup__button'),\n      size === 'small' && withVendorCSSClassPrefix('signup__button--small'),\n      size === 'large' && withVendorCSSClassPrefix('signup__button--large'),\n    ],\n    buttonClassName,\n  );\n\n  const errorClasses = clsx([withVendorCSSClassPrefix('signup__error')], errorClassName);\n\n  const messageClasses = clsx([withVendorCSSClassPrefix('signup__messages')], messageClassName);\n\n  /**\n   * Render form components based on flow data using the factory\n   */\n  const renderComponents = useCallback(\n    (components: any[]): ReactElement[] =>\n      renderSignUpComponents(\n        components,\n        formValues,\n        touchedFields,\n        formErrors,\n        isLoading,\n        isFormValid,\n        handleInputChange,\n        {\n          buttonClassName: buttonClasses,\n          error,\n          inputClassName: inputClasses,\n          onSubmit: handleSubmit,\n          size,\n          variant,\n        },\n      ),\n    [\n      formValues,\n      touchedFields,\n      formErrors,\n      isFormValid,\n      isLoading,\n      size,\n      variant,\n      error,\n      inputClasses,\n      buttonClasses,\n      handleSubmit,\n    ],\n  );\n\n  // Initialize the flow on component mount\n  useEffect(() => {\n    if (isInitialized && !isFlowInitialized && !initializationAttemptedRef.current) {\n      initializationAttemptedRef.current = true;\n\n      // Inline initialization to avoid dependency issues\n      const performInitialization = async () => {\n        setIsLoading(true);\n        setError(null);\n\n        try {\n          const response = await onInitialize();\n\n          setCurrentFlow(response);\n          setIsFlowInitialized(true);\n          onFlowChange?.(response);\n\n          if (response.flowStatus === EmbeddedFlowStatus.Complete) {\n            onComplete?.(response);\n\n            return;\n          }\n\n          if (response.flowStatus === EmbeddedFlowStatus.Incomplete) {\n            setupFormFields(response);\n          }\n        } catch (err) {\n          const errorMessage = err instanceof Error ? err.message : t('errors.sign.up.flow.initialization.failure');\n          setError(errorMessage);\n          onError?.(err as Error);\n        } finally {\n          setIsLoading(false);\n        }\n      };\n\n      performInitialization();\n    }\n  }, [\n    isInitialized,\n    isFlowInitialized,\n    onInitialize,\n    onComplete,\n    onError,\n    onFlowChange,\n    setupFormFields,\n    afterSignUpUrl,\n    t,\n  ]);\n\n  if (!isFlowInitialized && isLoading) {\n    return (\n      <Card className={containerClasses} style={styles.card} variant={variant}>\n        <Card.Content>\n          <div style={{display: 'flex', justifyContent: 'center', padding: `calc(${theme.vars.spacing.unit} * 4)`}}>\n            <Spinner size=\"medium\" />\n          </div>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  if (!currentFlow) {\n    return (\n      <Card className={containerClasses} style={styles.card} variant={variant}>\n        <Card.Content>\n          <Alert variant=\"error\" className={errorClasses}>\n            <Alert.Title>{t('errors.title') || 'Error'}</Alert.Title>\n            <Alert.Description>{error || t('errors.sign.up.flow.initialization.failure')}</Alert.Description>\n          </Alert>\n        </Card.Content>\n      </Card>\n    );\n  }\n\n  return (\n    <Card className={containerClasses} style={styles.card} variant={variant}>\n      {flowMessages && flowMessages.length > 0 && (\n        <Card.Header style={styles.header}>\n          <div style={{marginTop: `calc(${theme.vars.spacing.unit} * 2)`}}>\n            {flowMessages.map((message: any, index: number) => (\n              <Alert\n                key={message.id || index}\n                variant={message.type?.toLowerCase() === 'error' ? 'error' : 'info'}\n                style={{marginBottom: `calc(${theme.vars.spacing.unit} * 1)`}}\n                className={messageClasses}\n              >\n                <Alert.Description>{message.message}</Alert.Description>\n              </Alert>\n            ))}\n          </div>\n        </Card.Header>\n      )}\n      <Card.Content>\n        {error && (\n          <Alert\n            variant=\"error\"\n            className={errorClasses}\n            style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n          >\n            <Alert.Title>{t('errors.title') || 'Error'}</Alert.Title>\n            <Alert.Description>{error}</Alert.Description>\n          </Alert>\n        )}\n\n        <div style={{display: 'flex', flexDirection: 'column', gap: `calc(${theme.vars.spacing.unit} * 2)`}}>\n          {currentFlow.data?.components && renderComponents(currentFlow.data.components)}\n        </div>\n      </Card.Content>\n    </Card>\n  );\n};\n\nexport default BaseSignUp;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {EmbeddedFlowComponent, EmbeddedFlowComponentType, WithPreferences} from '@asgardeo/browser';\nimport {ReactElement} from 'react';\nimport CheckboxInput from './CheckboxInput';\nimport DateInput from './DateInput';\nimport DividerComponent from './DividerComponent';\nimport EmailInput from './EmailInput';\nimport FormContainer from './FormContainer';\nimport GoogleButton from './GoogleButton';\nimport ImageComponent from './ImageComponent';\nimport NumberInput from './NumberInput';\nimport PasswordInput from './PasswordInput';\nimport ButtonComponent from './SubmitButton';\nimport TelephoneInput from './TelephoneInput';\nimport TextInput from './TextInput';\nimport Typography from './Typography';\n\n/**\n * Base props that all sign-up option components share.\n */\nexport interface BaseSignUpOptionProps extends WithPreferences {\n  /**\n   * Custom CSS class name for buttons.\n   */\n  buttonClassName?: string;\n\n  /**\n   * The component configuration from the flow response.\n   */\n  component: EmbeddedFlowComponent;\n\n  /**\n   * Global error message to display.\n   */\n  error?: string | null;\n\n  /**\n   * Form validation errors.\n   */\n  formErrors: Record<string, string>;\n\n  /**\n   * Current form values.\n   */\n  formValues: Record<string, string>;\n\n  /**\n   * Custom CSS class name for form inputs.\n   */\n  inputClassName?: string;\n\n  /**\n   * Whether the form is valid.\n   */\n  isFormValid: boolean;\n\n  /**\n   * Whether the component is in loading state.\n   */\n  isLoading: boolean;\n\n  /**\n   * Callback function called when input values change.\n   */\n  onInputChange: (name: string, value: string) => void;\n\n  onSubmit?: (component: EmbeddedFlowComponent, data?: Record<string, any>) => void;\n\n  /**\n   * Component size variant.\n   */\n  size?: 'small' | 'medium' | 'large';\n\n  /**\n   * Touched state for form fields.\n   */\n  touchedFields: Record<string, boolean>;\n\n  /**\n   * Component theme variant.\n   */\n  variant?: any;\n}\n\n/**\n * Creates the appropriate sign-up component based on the component type.\n */\nexport const createSignUpComponent = (props: BaseSignUpOptionProps): ReactElement => {\n  const {component} = props;\n\n  switch (component.type) {\n    case EmbeddedFlowComponentType.Typography:\n      return <Typography {...props} />;\n\n    case EmbeddedFlowComponentType.Input:\n      // Determine input type based on variant or config\n      const inputVariant = component.variant?.toUpperCase();\n      const inputType = component.config['type']?.toLowerCase();\n\n      if (inputVariant === 'EMAIL' || inputType === 'email') {\n        return <EmailInput {...props} />;\n      }\n      if (inputVariant === 'PASSWORD' || inputType === 'password') {\n        return <PasswordInput {...props} />;\n      }\n      if (inputVariant === 'TELEPHONE' || inputType === 'tel') {\n        return <TelephoneInput {...props} />;\n      }\n      if (inputVariant === 'NUMBER' || inputType === 'number') {\n        return <NumberInput {...props} />;\n      }\n      if (inputVariant === 'DATE' || inputType === 'date') {\n        return <DateInput {...props} />;\n      }\n      if (inputVariant === 'CHECKBOX' || inputType === 'checkbox') {\n        return <CheckboxInput {...props} />;\n      }\n      return <TextInput {...props} />;\n\n    case EmbeddedFlowComponentType.Button: {\n      const buttonVariant: string | undefined = component.variant?.toUpperCase();\n      const buttonText: string = component.config['text'] || component.config['label'] || '';\n\n      // TODO: The connection type should come as metadata.\n      if (buttonVariant === 'SOCIAL' && buttonText.toLowerCase().includes('google')) {\n        return <GoogleButton {...props} />;\n      }\n\n      // Use the generic ButtonComponent for all other button variants\n      // It will handle PRIMARY, SECONDARY, TEXT, SOCIAL mappings internally\n      return <ButtonComponent {...props} />;\n    }\n\n    case EmbeddedFlowComponentType.Form:\n      return <FormContainer {...props} />;\n\n    case EmbeddedFlowComponentType.Divider:\n      return <DividerComponent {...props} />;\n\n    case EmbeddedFlowComponentType.Image:\n      return <ImageComponent {...props} />;\n\n    default:\n      return <div />;\n  }\n};\n\n/**\n * Convenience function that creates the appropriate sign-up component from flow component data.\n */\nexport const createSignUpOptionFromComponent = (\n  component: EmbeddedFlowComponent,\n  formValues: Record<string, string>,\n  touchedFields: Record<string, boolean>,\n  formErrors: Record<string, string>,\n  isLoading: boolean,\n  isFormValid: boolean,\n  onInputChange: (name: string, value: string) => void,\n  options?: {\n    buttonClassName?: string;\n    error?: string | null;\n    inputClassName?: string;\n    key?: string | number;\n    onSubmit?: (component: EmbeddedFlowComponent, data?: Record<string, any>) => void;\n    size?: 'small' | 'medium' | 'large';\n    variant?: any;\n  },\n): ReactElement =>\n  createSignUpComponent({\n    component,\n    formErrors,\n    formValues,\n    isFormValid,\n    isLoading,\n    onInputChange,\n    touchedFields,\n    ...options,\n  });\n\n/**\n * Processes an array of components and renders them as React elements.\n */\nexport const renderSignUpComponents = (\n  components: EmbeddedFlowComponent[],\n  formValues: Record<string, string>,\n  touchedFields: Record<string, boolean>,\n  formErrors: Record<string, string>,\n  isLoading: boolean,\n  isFormValid: boolean,\n  onInputChange: (name: string, value: string) => void,\n  options?: {\n    buttonClassName?: string;\n    error?: string | null;\n    inputClassName?: string;\n    onSubmit?: (component: EmbeddedFlowComponent, data?: Record<string, any>) => void;\n    size?: 'small' | 'medium' | 'large';\n    variant?: any;\n  },\n): ReactElement[] =>\n  components\n    .map((component, index) =>\n      createSignUpOptionFromComponent(\n        component,\n        formValues,\n        touchedFields,\n        formErrors,\n        isLoading,\n        isFormValid,\n        onInputChange,\n        {\n          ...options,\n          // Use component id as key, fallback to index\n          key: component.id || index,\n        },\n      ),\n    )\n    .filter(Boolean);\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FieldType} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport {createField} from '../../../factories/FieldFactory';\n\n/**\n * Checkbox input component for sign-up forms.\n */\nconst CheckboxInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  return createField({\n    type: FieldType.Checkbox,\n    name: fieldName,\n    label: config['label'] || '',\n    placeholder: config['placeholder'] || '',\n    required: config['required'] || false,\n    value,\n    error,\n    onChange: (newValue: string) => onInputChange(fieldName, newValue),\n    className: inputClassName,\n  });\n};\n\nexport default CheckboxInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FieldType} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport {createField} from '../../../factories/FieldFactory';\n\n/**\n * Date input component for sign-up forms.\n */\nconst DateInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  return createField({\n    type: FieldType.Date,\n    name: fieldName,\n    label: config['label'] || '',\n    placeholder: config['placeholder'] || '',\n    required: config['required'] || false,\n    value,\n    error,\n    onChange: (newValue: string) => onInputChange(fieldName, newValue),\n    className: inputClassName,\n  });\n};\n\nexport default DateInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport Divider from '../../../primitives/Divider/Divider';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * Divider component for sign-up forms.\n */\nconst DividerComponent: FC<BaseSignUpOptionProps> = ({component}) => {\n  const {theme} = useTheme();\n  const config = component.config || {};\n  const text = config['text'] || '';\n  const variant = component.variant?.toLowerCase() || 'horizontal';\n\n  return (\n    <Divider\n      key={component.id}\n      orientation={variant === 'vertical' ? 'vertical' : 'horizontal'}\n      style={{margin: `calc(${theme.vars.spacing.unit} * 2) 0`}}\n    >\n      {text}\n    </Divider>\n  );\n};\n\nexport default DividerComponent;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FieldType} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport {createField} from '../../../factories/FieldFactory';\n\n/**\n * Email input component for sign-up forms.\n */\nconst EmailInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  return createField({\n    type: FieldType.Email,\n    name: fieldName,\n    label: config['label'] || 'Email',\n    placeholder: config['placeholder'] || 'Enter your email',\n    required: config['required'] || false,\n    value,\n    error,\n    onChange: (newValue: string) => onInputChange(fieldName, newValue),\n    className: inputClassName,\n  });\n};\n\nexport default EmailInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {createSignUpComponent, BaseSignUpOptionProps} from './SignUpOptionFactory';\n\n/**\n * Form container component that renders child components.\n */\nconst FormContainer: FC<BaseSignUpOptionProps> = props => {\n  const {component} = props;\n\n  // If the form has child components, render them wrapped in a form element\n  if (component.components && component.components.length > 0) {\n    const handleFormSubmit = (e: React.FormEvent): void => {\n      e.preventDefault();\n\n      // Find submit button in child components and trigger its submission\n      const submitButton = component.components?.find(\n        child =>\n          child.type === 'BUTTON' &&\n          (child.variant === 'PRIMARY' || child.variant === 'SECONDARY' || child.config?.['type'] === 'submit'),\n      );\n\n      if (submitButton && props.onSubmit) {\n        props.onSubmit(submitButton, props.formValues);\n      }\n    };\n\n    return (\n      <form key={component.id} onSubmit={handleFormSubmit} style={{display: 'flex', flexDirection: 'column'}}>\n        {component.components.map((childComponent, index) =>\n          createSignUpComponent({\n            ...props,\n            component: childComponent,\n          }),\n        )}\n      </form>\n    );\n  }\n\n  // Empty form container\n  return <div key={component.id} />;\n};\n\nexport default FormContainer;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\n\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport Button from '../../../primitives/Button/Button';\n\n/**\n * Google Sign-Up Button Component.\n * Handles registration with Google identity provider.\n */\nconst GoogleButton: FC<BaseSignUpOptionProps> = ({\n  component,\n  isLoading,\n  buttonClassName = '',\n  size = 'medium',\n  onSubmit,\n}) => {\n  const config = component.config || {};\n  const buttonText: string = config['text'] || config['label'] || 'Continue with Google';\n\n  /**\n   * Handle button click.\n   */\n  const handleClick = (): void => {\n    if (onSubmit) {\n      onSubmit(component, {});\n    }\n  };\n\n  return (\n    <Button\n      type=\"button\"\n      variant=\"solid\"\n      color=\"secondary\"\n      size={size}\n      disabled={isLoading}\n      onClick={handleClick}\n      className={buttonClassName}\n      style={{width: '100%'}}\n      startIcon={\n        <svg width=\"18\" height=\"18\" viewBox=\"0 0 67.91 67.901\" xmlns=\"http://www.w3.org/2000/svg\">\n          <g transform=\"translate(-0.001 -0.001)\">\n            <path\n              d=\"M15.049,160.965l-2.364,8.824-8.639.183a34.011,34.011,0,0,1-.25-31.7h0l7.691,1.41,3.369,7.645a20.262,20.262,0,0,0,.19,13.642Z\"\n              transform=\"translate(0 -119.93)\"\n              fill=\"#fbbb00\"\n            />\n            <path\n              d=\"M294.24,208.176A33.939,33.939,0,0,1,282.137,241h0l-9.687-.494-1.371-8.559a20.235,20.235,0,0,0,8.706-10.333H261.628V208.176Z\"\n              transform=\"translate(-226.93 -180.567)\"\n              fill=\"#518ef8\"\n            />\n            <path\n              d=\"M81.668,328.8h0a33.962,33.962,0,0,1-51.161-10.387l11-9.006a20.192,20.192,0,0,0,29.1,10.338Z\"\n              transform=\"translate(-26.463 -268.374)\"\n              fill=\"#28b446\"\n            />\n            <path\n              d=\"M80.451,7.816l-11,9A20.19,20.19,0,0,0,39.686,27.393l-11.06-9.055h0A33.959,33.959,0,0,1,80.451,7.816Z\"\n              transform=\"translate(-24.828)\"\n              fill=\"#f14336\"\n            />\n          </g>\n        </svg>\n      }\n    >\n      {buttonText}\n    </Button>\n  );\n};\n\nexport default GoogleButton;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * Image component for sign-up forms.\n */\nconst ImageComponent: FC<BaseSignUpOptionProps> = ({component}) => {\n  const {theme} = useTheme();\n  const config = component.config || {};\n  const src = config['src'] || '';\n  const alt = config['alt'] || config['label'] || 'Image';\n  const variant = component.variant?.toLowerCase() || 'image_block';\n\n  const imageStyle: React.CSSProperties = {\n    maxWidth: '100%',\n    height: 'auto',\n    display: 'block',\n    margin: variant === 'image_block' ? '1rem auto' : '0',\n    borderRadius: theme.vars.borderRadius.small,\n  };\n\n  if (!src) {\n    return null;\n  }\n\n  return (\n    <div key={component.id} style={{textAlign: 'center'}}>\n      <img\n        src={src}\n        alt={alt}\n        style={imageStyle}\n        onError={e => {\n          // Hide broken images\n          e.currentTarget.style.display = 'none';\n        }}\n      />\n    </div>\n  );\n};\n\nexport default ImageComponent;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FieldType} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport {createField} from '../../../factories/FieldFactory';\n\n/**\n * Number input component for sign-up forms.\n */\nconst NumberInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  return createField({\n    type: FieldType.Number,\n    name: fieldName,\n    label: config['label'] || '',\n    placeholder: config['placeholder'] || '',\n    required: config['required'] || false,\n    value,\n    error,\n    onChange: (newValue: string) => onInputChange(fieldName, newValue),\n    className: inputClassName,\n  });\n};\n\nexport default NumberInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FieldType} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport {createField} from '../../../factories/FieldFactory';\n\n/**\n * Password input component for sign-up forms.\n */\nconst PasswordInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  // Extract validation rules from the component config if available\n  const validations = config['validations'] || [];\n  const validationHints: string[] = [];\n\n  validations.forEach((validation: any) => {\n    if (validation.name === 'LengthValidator') {\n      const minLength = validation.conditions?.find((c: any) => c.key === 'min.length')?.value;\n      const maxLength = validation.conditions?.find((c: any) => c.key === 'max.length')?.value;\n      if (minLength || maxLength) {\n        validationHints.push(`Length: ${minLength || '0'}-${maxLength || '\u221E'} characters`);\n      }\n    } else if (validation.name === 'UpperCaseValidator') {\n      const minLength = validation.conditions?.find((c: any) => c.key === 'min.length')?.value;\n      if (minLength && parseInt(minLength, 10) > 0) {\n        validationHints.push('Must contain uppercase letter(s)');\n      }\n    } else if (validation.name === 'LowerCaseValidator') {\n      const minLength = validation.conditions?.find((c: any) => c.key === 'min.length')?.value;\n      if (minLength && parseInt(minLength, 10) > 0) {\n        validationHints.push('Must contain lowercase letter(s)');\n      }\n    } else if (validation.name === 'NumeralValidator') {\n      const minLength = validation.conditions?.find((c: any) => c.key === 'min.length')?.value;\n      if (minLength && parseInt(minLength, 10) > 0) {\n        validationHints.push('Must contain number(s)');\n      }\n    } else if (validation.name === 'SpecialCharacterValidator') {\n      const minLength = validation.conditions?.find((c: any) => c.key === 'min.length')?.value;\n      if (minLength && parseInt(minLength, 10) > 0) {\n        validationHints.push('Must contain special character(s)');\n      }\n    }\n  });\n\n  const hint = validationHints.length > 0 ? validationHints.join(', ') : config['hint'] || '';\n\n  return createField({\n    type: FieldType.Password,\n    name: fieldName,\n    label: config['label'] || 'Password',\n    placeholder: config['placeholder'] || 'Enter your password',\n    required: config['required'] || false,\n    value,\n    error,\n    onChange: (newValue: string) => onInputChange(fieldName, newValue),\n    className: inputClassName,\n  });\n};\n\nexport default PasswordInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\n\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport Button from '../../../primitives/Button/Button';\nimport Spinner from '../../../primitives/Spinner/Spinner';\n\n/**\n * Button component for sign-up forms that handles all button variants.\n */\nconst ButtonComponent: FC<BaseSignUpOptionProps> = ({\n  component,\n  isLoading,\n  isFormValid,\n  buttonClassName,\n  onSubmit,\n  size = 'medium',\n}) => {\n  const config = component.config || {};\n  const buttonText = config['text'] || config['label'] || 'Continue';\n  const buttonType = config['type'] || 'submit';\n  const componentVariant = component.variant?.toUpperCase() || 'PRIMARY';\n\n  // Map component variants to Button primitive props\n  const getButtonProps = () => {\n    switch (componentVariant) {\n      case 'PRIMARY':\n        return {variant: 'solid' as const, color: 'primary' as const};\n      case 'SECONDARY':\n        return {variant: 'solid' as const, color: 'secondary' as const};\n      case 'TEXT':\n        return {variant: 'text' as const, color: 'primary' as const};\n      case 'SOCIAL':\n        return {variant: 'outline' as const, color: 'primary' as const};\n      default:\n        return {variant: 'solid' as const, color: 'primary' as const};\n    }\n  };\n\n  const {variant, color} = getButtonProps();\n\n  const handleClick = () => {\n    if (onSubmit && buttonType !== 'submit') {\n      onSubmit(component);\n    }\n  };\n\n  return (\n    <Button\n      key={component.id}\n      type={buttonType === 'submit' ? 'submit' : 'button'}\n      variant={variant}\n      color={color}\n      size={size}\n      disabled={isLoading || (buttonType === 'submit' && !isFormValid)}\n      onClick={buttonType !== 'submit' ? handleClick : undefined}\n      className={buttonClassName}\n      style={{width: '100%'}}\n    >\n      {isLoading ? <Spinner size=\"small\" /> : buttonText}\n    </Button>\n  );\n};\n\nexport default ButtonComponent;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport TextField from '../../../primitives/TextField/TextField';\n\n/**\n * Telephone input component for sign-up forms.\n */\nconst TelephoneInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  return (\n    <TextField\n      key={component.id}\n      name={fieldName}\n      type=\"tel\"\n      label={config['label'] || ''}\n      placeholder={config['placeholder'] || ''}\n      required={config['required'] || false}\n      value={value}\n      error={error}\n      onChange={e => onInputChange(fieldName, e.target.value)}\n      className={inputClassName}\n      helperText={config['hint'] || ''}\n    />\n  );\n};\n\nexport default TelephoneInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FieldType} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport {createField} from '../../../factories/FieldFactory';\n\n/**\n * Text input component for sign-up forms.\n */\nconst TextInput: FC<BaseSignUpOptionProps> = ({\n  component,\n  formValues,\n  touchedFields,\n  formErrors,\n  onInputChange,\n  inputClassName,\n}) => {\n  const config = component.config || {};\n  const fieldName = config['identifier'] || config['name'] || component.id;\n  const value = formValues[fieldName] || '';\n  const error = touchedFields[fieldName] ? formErrors[fieldName] : undefined;\n\n  return createField({\n    type: FieldType.Text,\n    name: fieldName,\n    label: config['label'] || '',\n    placeholder: config['placeholder'] || '',\n    required: config['required'] || false,\n    value,\n    error,\n    onChange: (newValue: string) => onInputChange(fieldName, newValue),\n    className: inputClassName,\n  });\n};\n\nexport default TextInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\nimport {BaseSignUpOptionProps} from './SignUpOptionFactory';\nimport Typography from '../../../primitives/Typography/Typography';\nimport useTheme from '../../../../contexts/Theme/useTheme';\n\n/**\n * Typography component for sign-up forms (titles, descriptions, etc.).\n */\nconst TypographyComponent: FC<BaseSignUpOptionProps> = ({component}) => {\n  const {theme} = useTheme();\n  const config = component.config || {};\n  const text = config['text'] || config['content'] || '';\n  const variant = component.variant?.toLowerCase() || 'body1';\n\n  // Map component variants to Typography variants\n  let typographyVariant: any = 'body1';\n\n  switch (variant) {\n    case 'h1':\n      typographyVariant = 'h1';\n      break;\n    case 'h2':\n      typographyVariant = 'h2';\n      break;\n    case 'h3':\n      typographyVariant = 'h3';\n      break;\n    case 'h4':\n      typographyVariant = 'h4';\n      break;\n    case 'h5':\n      typographyVariant = 'h5';\n      break;\n    case 'h6':\n      typographyVariant = 'h6';\n      break;\n    case 'subtitle1':\n      typographyVariant = 'subtitle1';\n      break;\n    case 'subtitle2':\n      typographyVariant = 'subtitle2';\n      break;\n    case 'body2':\n      typographyVariant = 'body2';\n      break;\n    case 'caption':\n      typographyVariant = 'caption';\n      break;\n    default:\n      typographyVariant = 'body1';\n  }\n\n  return (\n    <Typography\n      key={component.id}\n      variant={typographyVariant}\n      style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}\n    >\n      {text}\n    </Typography>\n  );\n};\n\nexport default TypographyComponent;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  EmbeddedFlowExecuteRequestPayload,\n  EmbeddedFlowExecuteResponse,\n  EmbeddedFlowResponseType,\n  EmbeddedFlowType,\n} from '@asgardeo/browser';\nimport {FC} from 'react';\nimport BaseSignUp, {BaseSignUpProps} from './BaseSignUp';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\n\n/**\n * Props for the SignUp component.\n */\nexport type SignUpProps = BaseSignUpProps;\n\n/**\n * A styled SignUp component that provides embedded sign-up flow with pre-built styling.\n * This component handles the API calls for sign-up and delegates UI logic to BaseSignUp.\n *\n * @example\n * ```tsx\n * import { SignUp } from '@asgardeo/react';\n *\n * const App = () => {\n *   return (\n *     <SignUp\n *       onSuccess={(response) => {\n *         console.log('Sign-up successful:', response);\n *         // Handle successful sign-up (e.g., redirect, show confirmation)\n *       }}\n *       onError={(error) => {\n *         console.error('Sign-up failed:', error);\n *       }}\n *       onComplete={(redirectUrl) => {\n *         // Platform-specific redirect handling (e.g., Next.js router.push)\n *         router.push(redirectUrl); // or window.location.href = redirectUrl\n *       }}\n *       size=\"medium\"\n *       variant=\"outlined\"\n *       afterSignUpUrl=\"/welcome\"\n *     />\n *   );\n * };\n * ```\n */\nconst SignUp: FC<SignUpProps> = ({\n  className,\n  size = 'medium',\n  afterSignUpUrl,\n  onError,\n  onComplete,\n  shouldRedirectAfterSignUp = true,\n  ...rest\n}) => {\n  const {signUp, isInitialized} = useAsgardeo();\n\n  /**\n   * Initialize the sign-up flow.\n   */\n  const handleInitialize = async (payload?: EmbeddedFlowExecuteRequestPayload): Promise<EmbeddedFlowExecuteResponse> =>\n    await signUp(\n      payload || {\n        flowType: EmbeddedFlowType.Registration,\n      },\n    );\n\n  /**\n   * Handle sign-up steps.\n   */\n  const handleOnSubmit = async (payload: EmbeddedFlowExecuteRequestPayload): Promise<EmbeddedFlowExecuteResponse> =>\n    await signUp(payload);\n\n  /**\n   * Handle successful sign-up and redirect.\n   */\n  const handleComplete = (response: EmbeddedFlowExecuteResponse) => {\n    onComplete?.(response);\n\n    // For non-redirection responses (regular sign-up completion), handle redirect if configured\n    if (shouldRedirectAfterSignUp && response?.type !== EmbeddedFlowResponseType.Redirection && afterSignUpUrl) {\n      window.location.href = afterSignUpUrl;\n    }\n\n    // For redirection responses (social sign-up), they are handled by BaseSignUp's popup mechanism\n    // and we only redirect after the OAuth flow is complete if shouldRedirectAfterSignUp is true\n    if (\n      shouldRedirectAfterSignUp &&\n      response?.type === EmbeddedFlowResponseType.Redirection &&\n      response?.data?.redirectURL &&\n      !response.data.redirectURL.includes('oauth') && // Not a social provider redirect\n      !response.data.redirectURL.includes('auth') // Not an auth provider redirect\n    ) {\n      window.location.href = response.data.redirectURL;\n    }\n  };\n\n  return (\n    <BaseSignUp\n      afterSignUpUrl={afterSignUpUrl}\n      onInitialize={handleInitialize}\n      onSubmit={handleOnSubmit}\n      onError={onError}\n      onComplete={handleComplete}\n      className={className}\n      size={size}\n      isInitialized={isInitialized}\n      {...rest}\n    />\n  );\n};\n\nexport default SignUp;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {User as IUser} from '@asgardeo/browser';\nimport {FC, ReactElement, ReactNode} from 'react';\n\n/**\n * Props for the BaseUser component.\n */\nexport interface BaseUserProps {\n  /**\n   * The user object to display. If not provided, the component will render the fallback.\n   */\n  user: IUser | null;\n\n  /**\n   * Render prop that takes the user object and returns a ReactNode.\n   * @param user - The authenticated user object from Asgardeo.\n   * @returns A ReactNode to render.\n   */\n  children: (user: IUser | null) => ReactNode;\n\n  /**\n   * Optional element to render when no user is provided.\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * Base User component that provides the core functionality for displaying user information.\n * This component takes a user object as a prop and uses render props to expose it.\n *\n * @remarks This is the base component that can be used in any context where you have\n * a user object available. For React applications, use the User component which\n * automatically retrieves the user from Asgardeo context.\n *\n * @example\n * ```tsx\n * import { BaseUser } from '@asgardeo/auth-react';\n *\n * const MyComponent = ({ user }) => {\n *   return (\n *     <BaseUser user={user} fallback={<p>No user data</p>}>\n *       {(user) => (\n *         <div>\n *           <h1>Welcome, {user.displayName}!</h1>\n *           <p>Email: {user.email}</p>\n *         </div>\n *       )}\n *     </BaseUser>\n *   );\n * }\n * ```\n */\nconst BaseUser: FC<BaseUserProps> = ({user, children, fallback = null}): ReactElement => {\n  if (!user) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children(user)}</>;\n};\n\nBaseUser.displayName = 'BaseUser';\n\nexport default BaseUser;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {User as IUser} from '@asgardeo/browser';\nimport {FC, ReactElement, ReactNode} from 'react';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport BaseUser, {BaseUserProps} from './BaseUser';\n\n/**\n * Props for the User component.\n * Extends BaseUserProps but makes the user prop optional since it will be obtained from useAsgardeo\n */\nexport interface UserProps extends Omit<BaseUserProps, 'user'> {\n  /**\n   * Render prop that takes the user object and returns a ReactNode.\n   * @param user - The authenticated user object from Asgardeo.\n   * @returns A ReactNode to render.\n   */\n  children: (user: IUser | null) => ReactNode;\n\n  /**\n   * Optional element to render when no user is signed in.\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * A component that uses render props to expose the authenticated user object.\n * This component automatically retrieves the user from Asgardeo context.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example\n * ```tsx\n * import { IUser } from '@asgardeo/auth-react';\n *\n * const App = () => {\n *   return (\n *     <User fallback={<p>Please sign in</p>}>\n *       {(user) => (\n *         <div>\n *           <h1>Welcome, {user.displayName}!</h1>\n *           <p>Email: {user.email}</p>\n *         </div>\n *       )}\n *     </User>\n *   );\n * }\n * ```\n */\nconst User: FC<UserProps> = ({children, fallback = null}): ReactElement => {\n  const {user} = useAsgardeo();\n\n  return (\n    <BaseUser user={user} fallback={fallback}>\n      {children}\n    </BaseUser>\n  );\n};\n\nUser.displayName = 'User';\n\nexport default User;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {Organization as IOrganization} from '@asgardeo/browser';\nimport {FC, ReactElement, ReactNode} from 'react';\n\n/**\n * Props for the BaseOrganization component.\n */\nexport interface BaseOrganizationProps {\n  /**\n   * Render prop that takes the organization object and returns a ReactNode.\n   * @param organization - The organization object from Asgardeo.\n   * @returns A ReactNode to render.\n   */\n  children: (organization: IOrganization | null) => ReactNode;\n\n  /**\n   * Optional element to render when no organization is provided.\n   */\n  fallback?: ReactNode;\n\n  /**\n   * The organization object to display. If not provided, the component will render the fallback.\n   */\n  organization: IOrganization | null;\n}\n\n/**\n * Base Organization component that provides the core functionality for displaying organization information.\n * This component takes an organization object as a prop and uses render props to expose it.\n *\n * @remarks This is the base component that can be used in any context where you have\n * an organization object available. For React applications, use the Organization component which\n * automatically retrieves the current organization from Organization context.\n *\n * @example\n * ```tsx\n * import { BaseOrganization } from '@asgardeo/auth-react';\n *\n * const MyComponent = ({ organization }) => {\n *   return (\n *     <BaseOrganization organization={organization} fallback={<p>No organization data</p>}>\n *       {(org) => (\n *         <div>\n *           <h1>Organization: {org.name}</h1>\n *           <p>ID: {org.id}</p>\n *         </div>\n *       )}\n *     </BaseOrganization>\n *   );\n * }\n * ```\n */\nconst BaseOrganization: FC<BaseOrganizationProps> = ({children, fallback = null, organization}): ReactElement => {\n  if (!organization) {\n    return <>{fallback}</>;\n  }\n\n  return <>{children(organization)}</>;\n};\n\nBaseOrganization.displayName = 'BaseOrganization';\n\nexport default BaseOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {Organization as IOrganization} from '@asgardeo/browser';\nimport {FC, ReactElement, ReactNode} from 'react';\nimport BaseOrganization, {BaseOrganizationProps} from './BaseOrganization';\nimport useOrganization from '../../../contexts/Organization/useOrganization';\n\n/**\n * Props for the Organization component.\n * Extends BaseOrganizationProps but makes the organization prop optional since it will be obtained from useOrganization\n */\nexport interface OrganizationProps extends Omit<BaseOrganizationProps, 'organization'> {\n  /**\n   * Render prop that takes the organization object and returns a ReactNode.\n   * @param organization - The current organization object from Organization context.\n   * @returns A ReactNode to render.\n   */\n  children: (organization: IOrganization | null) => ReactNode;\n\n  /**\n   * Optional element to render when no organization is selected.\n   */\n  fallback?: ReactNode;\n}\n\n/**\n * A component that uses render props to expose the current organization object.\n * This component automatically retrieves the current organization from Organization context.\n *\n * @remarks This component is only supported in browser based React applications (CSR).\n *\n * @example\n * ```tsx\n * import { Organization } from '@asgardeo/auth-react';\n *\n * const App = () => {\n *   return (\n *     <Organization fallback={<p>No organization selected</p>}>\n *       {(organization) => (\n *         <div>\n *           <h1>Current Organization: {organization.name}!</h1>\n *           <p>ID: {organization.id}</p>\n *           <p>Role: {organization.role}</p>\n *           {organization.memberCount && (\n *             <p>Members: {organization.memberCount}</p>\n *           )}\n *         </div>\n *       )}\n *     </Organization>\n *   );\n * }\n * ```\n */\nconst Organization: FC<OrganizationProps> = ({children, fallback = null}): ReactElement => {\n  const {currentOrganization} = useOrganization();\n\n  return (\n    <BaseOrganization organization={currentOrganization} fallback={fallback}>\n      {children}\n    </BaseOrganization>\n  );\n};\n\nOrganization.displayName = 'Organization';\n\nexport default Organization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {User, withVendorCSSClassPrefix, WellKnownSchemaIds} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {CSSProperties, FC, ReactElement, useMemo, useState, useCallback, useRef} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport getMappedUserProfileValue from '../../../utils/getMappedUserProfileValue';\nimport {Avatar} from '../../primitives/Avatar/Avatar';\nimport Button from '../../primitives/Button/Button';\nimport Checkbox from '../../primitives/Checkbox/Checkbox';\nimport DatePicker from '../../primitives/DatePicker/DatePicker';\nimport {Dialog, DialogContent, DialogHeading} from '../../primitives/Popover/Popover';\nimport TextField from '../../primitives/TextField/TextField';\nimport MultiInput from '../../primitives/MultiInput/MultiInput';\nimport Card from '../../primitives/Card/Card';\n\ninterface ExtendedFlatSchema {\n  path?: string;\n  schemaId?: string;\n}\n\ninterface Schema extends ExtendedFlatSchema {\n  caseExact?: boolean;\n  description?: string;\n  displayName?: string;\n  displayOrder?: string;\n  multiValued?: boolean;\n  mutability?: string;\n  name?: string;\n  required?: boolean;\n  returned?: string;\n  subAttributes?: Schema[];\n  type?: string;\n  uniqueness?: string;\n  value?: any;\n}\n\nexport interface BaseUserProfileProps {\n  attributeMapping?: {\n    [key: string]: string | string[] | undefined;\n    firstName?: string | string[];\n    lastName?: string | string[];\n    picture?: string | string[];\n    username?: string | string[];\n  };\n  cancelButtonText?: string;\n  cardLayout?: boolean;\n  className?: string;\n  editable?: boolean;\n  fallback?: ReactElement;\n  flattenedProfile?: User;\n  mode?: 'inline' | 'popup';\n  onChange?: (field: string, value: any) => void;\n  onOpenChange?: (open: boolean) => void;\n  onSubmit?: (data: any) => void;\n  onUpdate?: (payload: any) => Promise<void>;\n  open?: boolean;\n  profile?: User;\n  saveButtonText?: string;\n  schemas?: Schema[];\n  title?: string;\n}\n\n// Fields to skip based on schema.name\nconst fieldsToSkip: string[] = [\n  'roles.default',\n  'active',\n  'groups',\n  'accountLocked',\n  'accountDisabled',\n  'oneTimePassword',\n  'userSourceId',\n  'idpType',\n  'localCredentialExists',\n  'active',\n  'ResourceType',\n  'ExternalID',\n  'MetaData',\n  'verifiedMobileNumbers',\n  'verifiedEmailAddresses',\n  'phoneNumbers.mobile',\n  'emailAddresses',\n];\n\n// Fields that should be readonly\nconst readonlyFields: string[] = ['username', 'userName', 'user_name'];\n\nconst BaseUserProfile: FC<BaseUserProfileProps> = ({\n  fallback = null,\n  className = '',\n  cardLayout = true,\n  profile,\n  schemas = [],\n  flattenedProfile,\n  mode = 'inline',\n  title = 'User Profile',\n  attributeMapping = {},\n  editable = true,\n  onChange,\n  onOpenChange,\n  onSubmit,\n  onUpdate,\n  open = false,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Cancel',\n}): ReactElement => {\n  const {theme} = useTheme();\n  const [editedUser, setEditedUser] = useState(flattenedProfile || profile);\n  const [editingFields, setEditingFields] = useState<Record<string, boolean>>({});\n  const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const PencilIcon = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n    </svg>\n  );\n\n  const toggleFieldEdit = useCallback((fieldName: string) => {\n    setEditingFields(prev => ({\n      ...prev,\n      [fieldName]: !prev[fieldName],\n    }));\n  }, []);\n\n  const getFieldPlaceholder = useCallback((schema: Schema): string => {\n    const {type, displayName, description, name} = schema;\n\n    // Use the best available label for the field\n    const fieldLabel = displayName || description || name || 'value';\n\n    // Generate appropriate placeholder based on field type\n    switch (type) {\n      case 'DATE_TIME':\n        return `Enter your ${fieldLabel.toLowerCase()}`;\n      case 'BOOLEAN':\n        return `Select ${fieldLabel.toLowerCase()}`;\n      case 'COMPLEX':\n        return `Enter ${fieldLabel.toLowerCase()} details`;\n      default:\n        // For STRING and other types, use generic placeholder\n        return `Enter your ${fieldLabel.toLowerCase()}`;\n    }\n  }, []);\n\n  const ObjectDisplay: FC<{data: unknown}> = ({data}) => {\n    if (!data || typeof data !== 'object') return null;\n\n    return (\n      <table style={{width: '100%', borderCollapse: 'collapse'}}>\n        <tbody>\n          {Object.entries(data).map(([key, value]) => (\n            <tr key={key} style={{borderBottom: `1px solid ${theme.vars.colors.border}`}}>\n              <td style={{padding: theme.vars.spacing.unit, verticalAlign: 'top'}}>\n                <strong>{formatLabel(key)}:</strong>\n              </td>\n              <td style={{padding: theme.vars.spacing.unit, verticalAlign: 'top'}}>\n                {typeof value === 'object' ? <ObjectDisplay data={value} /> : String(value)}\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  function set(obj: Record<string, any>, path: string, value: any): void {\n    const keys = path.split('.');\n    let current = obj;\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i];\n\n      // If last key, set the value\n      if (i === keys.length - 1) {\n        current[key] = value;\n      } else {\n        // If the next level does not exist or is not an object, create an object\n        if (!current[key] || typeof current[key] !== 'object') {\n          current[key] = {};\n        }\n        current = current[key];\n      }\n    }\n  }\n\n  const handleFieldSave = useCallback(\n    (schema: Schema): void => {\n      if (!onUpdate || !schema.name) return;\n\n      const fieldName: string = schema.name;\n      let fieldValue: any =\n        editedUser && fieldName && editedUser[fieldName] !== undefined\n          ? editedUser[fieldName]\n          : flattenedProfile && flattenedProfile[fieldName] !== undefined\n          ? flattenedProfile[fieldName]\n          : '';\n\n      // Filter out empty values for arrays when saving\n      if (Array.isArray(fieldValue)) {\n        fieldValue = fieldValue.filter(v => v !== undefined && v !== null && v !== '');\n      }\n\n      let payload: Record<string, any> = {};\n\n      // SCIM Patch Operation Logic:\n      // - Fields from core schema (urn:ietf:params:scim:schemas:core:2.0:User)\n      //   should be sent directly: {\"name\":{\"givenName\":\"John\"}}\n      // - Fields from extension schemas (like urn:scim:wso2:schema)\n      //   should be nested under the schema namespace: {\"urn:scim:wso2:schema\":{\"country\":\"Sri Lanka\"}}\n      if (schema.schemaId && schema.schemaId !== WellKnownSchemaIds.User) {\n        // For non-core schemas, nest the field under the schema namespace\n        payload = {\n          [schema.schemaId]: {\n            [fieldName]: fieldValue,\n          },\n        };\n      } else {\n        // For core schema or fields without schemaId, use the field path directly\n        // This handles complex paths like \"name.givenName\" correctly\n        set(payload, fieldName, fieldValue);\n      }\n\n      onUpdate(payload);\n      // Exit edit mode for this field after save\n      toggleFieldEdit(fieldName);\n    },\n    [editedUser, flattenedProfile, onUpdate, toggleFieldEdit],\n  );\n\n  const handleFieldCancel = useCallback(\n    (fieldName: string) => {\n      const currentUser = flattenedProfile || profile;\n      setEditedUser(prev => ({\n        ...prev,\n        [fieldName]: currentUser[fieldName],\n      }));\n      toggleFieldEdit(fieldName);\n    },\n    [flattenedProfile, profile, toggleFieldEdit],\n  );\n\n  const formatLabel = useCallback(\n    (key: string): string =>\n      key\n        .split(/(?=[A-Z])|_/)\n        .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n        .join(' '),\n    [],\n  );\n\n  const styles = useStyles();\n\n  const defaultAttributeMappings = {\n    picture: ['profile', 'profileUrl', 'picture', 'URL'],\n    firstName: ['name.givenName', 'given_name'],\n    lastName: ['name.familyName', 'family_name'],\n    email: ['emails'],\n    username: ['userName', 'username', 'user_name'],\n  };\n\n  const mergedMappings = {...defaultAttributeMappings, ...attributeMapping};\n\n  // Combines label and value/field rendering for both view and edit modes\n  const renderSchemaField = (\n    schema: Schema,\n    isEditing: boolean,\n    onEditValue?: (value: any) => void,\n    onStartEdit?: () => void,\n  ): ReactElement | null => {\n    if (!schema) return null;\n    const {value, displayName, description, name, type, required, mutability, subAttributes, multiValued} = schema;\n    const label = displayName || description || name || '';\n\n    // If complex or subAttributes, fallback to original renderSchemaValue\n    if (subAttributes && Array.isArray(subAttributes)) {\n      return (\n        <>\n          {subAttributes.map((subAttr, index) => (\n            <div key={index} style={styles.field}>\n              <span style={styles.label}>{subAttr.displayName || subAttr.description || ''}</span>\n              <div style={styles.value}>\n                {Array.isArray(subAttr.value)\n                  ? subAttr.value\n                      .map(item => (typeof item === 'object' ? JSON.stringify(item) : String(item)))\n                      .join(', ')\n                  : typeof subAttr.value === 'object'\n                  ? JSON.stringify(subAttr.value)\n                  : String(subAttr.value)}\n              </div>\n            </div>\n          ))}\n        </>\n      );\n    }\n\n    // Handle multi-valued fields (either array values or multiValued property)\n    if (Array.isArray(value) || multiValued) {\n      const hasValues = Array.isArray(value) ? value.length > 0 : value !== undefined && value !== null && value !== '';\n      const isEditable = editable && mutability !== 'READ_ONLY' && !readonlyFields.includes(name || '');\n\n      // If editing, show multi-valued input\n      if (isEditing && onEditValue && isEditable) {\n        // Use editedUser value if available, then flattenedProfile, then schema value\n        const currentValue =\n          editedUser && name && editedUser[name] !== undefined\n            ? editedUser[name]\n            : flattenedProfile && name && flattenedProfile[name] !== undefined\n            ? flattenedProfile[name]\n            : value;\n\n        let fieldValues: string[];\n        if (Array.isArray(currentValue)) {\n          fieldValues = currentValue.map(String);\n        } else if (currentValue !== undefined && currentValue !== null && currentValue !== '') {\n          fieldValues = [String(currentValue)];\n        } else {\n          fieldValues = [];\n        }\n\n        return (\n          <>\n            <span style={styles.label}>{label}</span>\n            <div style={styles.value}>\n              <MultiInput\n                values={fieldValues}\n                onChange={newValues => {\n                  // Don't filter out empty values during editing - only when saving\n                  // This allows users to type and keeps empty fields for adding new values\n                  if (multiValued || Array.isArray(currentValue)) {\n                    onEditValue(newValues);\n                  } else {\n                    // Single value field, just take the first value (including empty for typing)\n                    onEditValue(newValues[0] || '');\n                  }\n                }}\n                placeholder={getFieldPlaceholder(schema)}\n                fieldType={type as 'STRING' | 'DATE_TIME' | 'BOOLEAN'}\n                type={type === 'DATE_TIME' ? 'date' : type === 'STRING' ? 'text' : 'text'}\n                required={required}\n                style={{\n                  marginBottom: 0,\n                }}\n              />\n            </div>\n          </>\n        );\n      }\n\n      // View mode for multi-valued fields\n      let displayValue: string;\n      if (hasValues) {\n        if (Array.isArray(value)) {\n          displayValue = value.map(item => (typeof item === 'object' ? JSON.stringify(item) : String(item))).join(', ');\n        } else {\n          displayValue = String(value);\n        }\n      } else if (isEditable) {\n        displayValue = getFieldPlaceholder(schema);\n      } else {\n        displayValue = '-';\n      }\n\n      return (\n        <>\n          <span style={styles.label}>{label}</span>\n          <div style={{...styles.value, fontStyle: hasValues ? 'normal' : 'italic', opacity: hasValues ? 1 : 0.7}}>\n            {!hasValues && isEditable && onStartEdit ? (\n              <Button\n                onClick={onStartEdit}\n                variant=\"text\"\n                color=\"secondary\"\n                size=\"small\"\n                title=\"Click to edit\"\n                style={{\n                  fontStyle: 'italic',\n                  textDecoration: 'underline',\n                  opacity: 0.7,\n                  padding: 0,\n                  minHeight: 'auto',\n                }}\n              >\n                {displayValue}\n              </Button>\n            ) : (\n              displayValue\n            )}\n          </div>\n        </>\n      );\n    }\n    if (type === 'COMPLEX' && typeof value === 'object') {\n      return <ObjectDisplay data={value} />;\n    }\n    // If editing, show field instead of value\n    if (isEditing && onEditValue && mutability !== 'READ_ONLY' && !readonlyFields.includes(name || '')) {\n      // Use editedUser value if available, then flattenedProfile, then schema value\n      const fieldValue =\n        editedUser && name && editedUser[name] !== undefined\n          ? editedUser[name]\n          : flattenedProfile && name && flattenedProfile[name] !== undefined\n          ? flattenedProfile[name]\n          : value || '';\n\n      const commonProps = {\n        label: undefined, // Don't show label in field, we render it outside\n        required,\n        value: fieldValue,\n        onChange: (e: any) => onEditValue(e.target ? e.target.value : e),\n        placeholder: getFieldPlaceholder(schema),\n        style: {\n          marginBottom: 0,\n        },\n      };\n      let field: ReactElement;\n      switch (type) {\n        case 'STRING':\n          field = <TextField {...commonProps} />;\n          break;\n        case 'DATE_TIME':\n          field = <DatePicker {...commonProps} />;\n          break;\n        case 'BOOLEAN':\n          field = <Checkbox {...commonProps} checked={!!fieldValue} onChange={e => onEditValue(e.target.checked)} />;\n          break;\n        case 'COMPLEX':\n          // For complex types, use a textarea\n          field = (\n            <textarea\n              value={fieldValue}\n              onChange={e => onEditValue(e.target.value)}\n              placeholder={getFieldPlaceholder(schema)}\n              required={required}\n              style={{\n                ...commonProps.style,\n                minHeight: '60px',\n                width: '100%',\n                padding: '8px',\n                border: `1px solid ${theme.vars.colors.border}`,\n                borderRadius: theme.vars.borderRadius.small,\n                resize: 'vertical',\n              }}\n            />\n          );\n          break;\n        default:\n          field = <TextField {...commonProps} />;\n      }\n      return (\n        <>\n          <span style={styles.label}>{label}</span>\n          <div style={styles.value}>{field}</div>\n        </>\n      );\n    }\n    // Default: view mode\n    const hasValue = value !== undefined && value !== null && value !== '';\n    const isEditable = editable && mutability !== 'READ_ONLY' && !readonlyFields.includes(name || '');\n\n    let displayValue: string;\n    if (hasValue) {\n      displayValue = String(value);\n    } else if (isEditable) {\n      displayValue = getFieldPlaceholder(schema);\n    } else {\n      displayValue = '-';\n    }\n\n    return (\n      <>\n        <span style={styles.label}>{label}</span>\n        <div style={{...styles.value, fontStyle: hasValue ? 'normal' : 'italic', opacity: hasValue ? 1 : 0.7}}>\n          {!hasValue && isEditable && onStartEdit ? (\n            <Button\n              onClick={onStartEdit}\n              variant=\"text\"\n              color=\"secondary\"\n              size=\"small\"\n              title=\"Click to edit\"\n              style={{\n                fontStyle: 'italic',\n                textDecoration: 'underline',\n                opacity: 0.7,\n                padding: 0,\n                minHeight: 'auto',\n              }}\n            >\n              {displayValue}\n            </Button>\n          ) : (\n            displayValue\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderUserInfo = (schema: Schema) => {\n    if (!schema || !schema.name) return null;\n\n    // Skip fields with undefined or empty values unless editing or editable\n    const hasValue = schema.value !== undefined && schema.value !== '' && schema.value !== null;\n    const isFieldEditing = editingFields[schema.name];\n    const isReadonlyField = readonlyFields.includes(schema.name);\n\n    // Show field if: has value, currently editing, or is editable and READ_WRITE\n    const shouldShow = hasValue || isFieldEditing || (editable && schema.mutability === 'READ_WRITE');\n\n    if (!shouldShow) {\n      return null;\n    }\n\n    const fieldStyle = {\n      ...styles.field,\n      display: 'flex',\n      alignItems: 'center',\n      gap: theme.vars.spacing.unit,\n    };\n\n    return (\n      <div style={fieldStyle}>\n        <div style={{flex: 1, display: 'flex', alignItems: 'center', gap: theme.vars.spacing.unit}}>\n          {renderSchemaField(\n            schema,\n            isFieldEditing,\n            value => {\n              const tempEditedUser = {...editedUser};\n              tempEditedUser[schema.name!] = value;\n              setEditedUser(tempEditedUser);\n            },\n            () => toggleFieldEdit(schema.name!),\n          )}\n        </div>\n        {editable && schema.mutability !== 'READ_ONLY' && !isReadonlyField && (\n          <div\n            style={{\n              display: 'flex',\n              gap: `calc(${theme.vars.spacing.unit} / 2)`,\n              alignItems: 'center',\n              marginLeft: theme.vars.spacing.unit,\n            }}\n          >\n            {isFieldEditing && (\n              <>\n                <Button size=\"small\" color=\"primary\" variant=\"solid\" onClick={() => handleFieldSave(schema)}>\n                  Save\n                </Button>\n                <Button size=\"small\" color=\"secondary\" variant=\"solid\" onClick={() => handleFieldCancel(schema.name!)}>\n                  Cancel\n                </Button>\n              </>\n            )}\n            {!isFieldEditing && hasValue && (\n              <Button\n                size=\"small\"\n                color=\"tertiary\"\n                variant=\"text\"\n                onClick={() => toggleFieldEdit(schema.name!)}\n                title=\"Edit\"\n                style={{\n                  padding: `calc(${theme.vars.spacing.unit} / 2)`,\n                }}\n              >\n                <PencilIcon />\n              </Button>\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  const getDisplayName = () => {\n    const firstName = getMappedUserProfileValue('firstName', mergedMappings, profile);\n    const lastName = getMappedUserProfileValue('lastName', mergedMappings, profile);\n\n    if (firstName && lastName) {\n      return `${firstName} ${lastName}`;\n    }\n\n    return getMappedUserProfileValue('username', mergedMappings, profile) || '';\n  };\n\n  if (!profile && !flattenedProfile) {\n    return fallback;\n  }\n\n  const containerStyle = {\n    ...styles.root,\n    ...(cardLayout ? styles.card : {}),\n  };\n\n  const currentUser = flattenedProfile || profile;\n  const avatarAttributes = ['picture'];\n  const excludedProps = avatarAttributes.map(attr => mergedMappings[attr] || attr);\n\n  // Function to render profile fields when schemas are not available\n  const renderProfileWithoutSchemas = () => {\n    if (!currentUser) return null;\n\n    const profileEntries = Object.entries(currentUser)\n      .filter(([key, value]) => {\n        // Skip fields that are in the fieldsToSkip array\n        if (fieldsToSkip.includes(key)) return false;\n        // Skip empty values\n        return value !== undefined && value !== '' && value !== null;\n      })\n      .sort(([a], [b]) => a.localeCompare(b)); // Sort alphabetically\n\n    return (\n      <>\n        {profileEntries.map(([key, value]) => (\n          <div key={key} style={styles.field}>\n            <span style={styles.label}>{formatLabel(key)}</span>\n            <div style={styles.value}>{typeof value === 'object' ? JSON.stringify(value, null, 2) : String(value)}</div>\n          </div>\n        ))}\n      </>\n    );\n  };\n\n  const profileContent = (\n    <Card style={containerStyle} className={clsx(withVendorCSSClassPrefix('user-profile'), className)}>\n      <div style={styles.header}>\n        <Avatar\n          imageUrl={getMappedUserProfileValue('picture', mergedMappings, currentUser)}\n          name={getDisplayName()}\n          size={80}\n          alt={`${getDisplayName()}'s avatar`}\n        />\n      </div>\n      <div style={styles.infoContainer}>\n        {schemas && schemas.length > 0\n          ? // Render with schemas when available\n            schemas\n              .filter(schema => {\n                // Skip fields that are in the fieldsToSkip array\n                if (fieldsToSkip.includes(schema.name)) return false;\n\n                // For non-editable mode, only show fields with values\n                if (!editable) {\n                  const value = flattenedProfile && schema.name ? flattenedProfile[schema.name] : undefined;\n                  return value !== undefined && value !== '' && value !== null;\n                }\n\n                return true;\n              })\n              .sort((a, b) => {\n                const orderA = a.displayOrder ? parseInt(a.displayOrder) : 999;\n                const orderB = b.displayOrder ? parseInt(b.displayOrder) : 999;\n                return orderA - orderB;\n              })\n              .map((schema, index) => {\n                // Get the value from flattenedProfile\n                const value = flattenedProfile && schema.name ? flattenedProfile[schema.name] : undefined;\n                const schemaWithValue = {\n                  ...schema,\n                  value,\n                };\n\n                return <div key={schema.name || index}>{renderUserInfo(schemaWithValue)}</div>;\n              })\n          : // Fallback: render profile fields directly when schemas are not available\n            renderProfileWithoutSchemas()}\n      </div>\n    </Card>\n  );\n\n  if (mode === 'popup') {\n    return (\n      <Dialog open={open} onOpenChange={onOpenChange}>\n        <DialogContent>\n          <DialogHeading>{title}</DialogHeading>\n          <div style={{padding: `calc(${theme.vars.spacing.unit} * 2)`}}>{profileContent}</div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return profileContent;\n};\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      root: {\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n        minWidth: '600px',\n        margin: '0 auto',\n      } as CSSProperties,\n      card: {\n        background: theme.vars.colors.background.surface,\n        borderRadius: theme.vars.borderRadius.large,\n      } as CSSProperties,\n      header: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: `calc(${theme.vars.spacing.unit} * 1.5)`,\n        marginBottom: `calc(${theme.vars.spacing.unit} * 1.5)`,\n      } as CSSProperties,\n      profileInfo: {\n        flex: 1,\n      } as CSSProperties,\n      name: {\n        fontSize: '1.5rem',\n        fontWeight: 600,\n        margin: '0',\n        color: theme.vars.colors.text.primary,\n      } as CSSProperties,\n      infoContainer: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: theme.vars.spacing.unit,\n      } as CSSProperties,\n      field: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `calc(${theme.vars.spacing.unit} / 2) 0`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n        minHeight: '28px',\n      } as CSSProperties,\n      lastField: {\n        borderBottom: 'none',\n      } as CSSProperties,\n      label: {\n        fontSize: '0.875rem',\n        fontWeight: 500,\n        color: theme.vars.colors.text.secondary,\n        width: '120px',\n        flexShrink: 0,\n        lineHeight: '28px',\n      } as CSSProperties,\n      value: {\n        color: theme.vars.colors.text.primary,\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        overflow: 'hidden',\n        minHeight: '28px',\n        '& input': {\n          height: '32px',\n          margin: 0,\n        },\n        lineHeight: '28px',\n        wordBreak: 'break-word' as const,\n        '& table': {\n          backgroundColor: theme.vars.colors.background.surface,\n          borderRadius: theme.vars.borderRadius.medium,\n          whiteSpace: 'normal',\n        },\n        '& td': {\n          borderColor: theme.vars.colors.border,\n        },\n      } as CSSProperties,\n      popup: {\n        padding: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\nexport default BaseUserProfile;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {User, get} from '@asgardeo/browser';\n\n/**\n * Retrieves a user profile value based on attribute mapping configuration.\n *\n * This function allows flexible mapping of component attribute names to actual\n * user profile field paths. It supports both simple string mappings and arrays\n * of potential field paths for fallback scenarios.\n *\n * @param key - The logical attribute name to retrieve (e.g., 'firstName', 'email')\n * @param mappings - Object mapping logical names to user profile field paths\n * @param user - The user object to extract values from\n * @returns The mapped value from the user profile, or undefined if not found\n *\n * @example\n * ```typescript\n * const mappings = {\n *   firstName: 'name.givenName',\n *   email: 'emails[0]',\n *   picture: ['profileUrl', 'profile', 'avatar'] // fallback options\n * };\n *\n * const user = {\n *   name: { givenName: 'John' },\n *   emails: ['john@example.com'],\n *   profileUrl: 'https://example.com/avatar.jpg'\n * };\n *\n * getMappedUserProfileValue('firstName', mappings, user); // 'John'\n * getMappedUserProfileValue('email', mappings, user); // 'john@example.com'\n * getMappedUserProfileValue('picture', mappings, user); // 'https://example.com/avatar.jpg'\n * ```\n */\nconst getMappedUserProfileValue = (key: string, mappings: Record<string, string | string[]>, user: User): any => {\n  if (!key || !mappings || !user) {\n    return undefined;\n  }\n\n  const mapping = mappings[key];\n\n  if (!mapping) {\n    // If no mapping defined, try to get the value directly from the user object\n    return get(user, key);\n  }\n\n  // If mapping is an array, try each path until we find a value\n  if (Array.isArray(mapping)) {\n    for (const path of mapping) {\n      const value = get(user, path);\n      if (value !== undefined && value !== null && value !== '') {\n        return value;\n      }\n    }\n    return undefined;\n  }\n\n  // For single string mapping, get the value directly\n  return get(user, mapping);\n};\n\nexport default getMappedUserProfileValue;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {CSSProperties, FC, JSX, useMemo} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\n\nexport interface AvatarProps {\n  /**\n   * Alternative text for the avatar image\n   */\n  alt?: string;\n  /**\n   * Background generation strategy\n   * - 'random': Generate background color based on ASCII values of the name\n   * - 'none': Use default theme background\n   * - string: Use custom background color\n   * @default 'random'\n   */\n  background?: 'random' | 'none' | string;\n  /**\n   * Optional className for the avatar\n   */\n  className?: string;\n  /**\n   * The URL of the avatar image\n   */\n  imageUrl?: string;\n  /**\n   * The name to use for generating initials when no image is provided\n   */\n  name?: string;\n  /**\n   * The size of the avatar in pixels\n   */\n  size?: number;\n  /**\n   * The variant of the avatar shape\n   * @default 'circular'\n   */\n  variant?: 'circular' | 'square';\n}\n\nconst useStyles = ({\n  size,\n  variant,\n  backgroundColor,\n}: {\n  size: number;\n  variant: 'circular' | 'square';\n  backgroundColor?: string;\n}): {\n  avatar: CSSProperties;\n  image: CSSProperties;\n} => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      avatar: {\n        alignItems: 'center',\n        background: backgroundColor || theme.vars.colors.background.surface,\n        border: backgroundColor ? 'none' : `1px solid ${theme.vars.colors.border}`,\n        borderRadius: variant === 'circular' ? '50%' : '8px',\n        color: backgroundColor ? '#ffffff' : theme.vars.colors.text.primary,\n        display: 'flex',\n        fontSize: `${size * 0.4}px`,\n        fontWeight: 600,\n        height: `${size}px`,\n        justifyContent: 'center',\n        overflow: 'hidden',\n        textShadow: backgroundColor ? '0 1px 2px rgba(0, 0, 0, 0.1)' : 'none',\n        width: `${size}px`,\n      } as CSSProperties,\n      image: {\n        height: '100%',\n        objectFit: 'cover',\n        width: '100%',\n      } as CSSProperties,\n    }),\n    [size, theme, colorScheme, variant, backgroundColor],\n  );\n};\n\nexport const Avatar: FC<AvatarProps> = ({\n  alt = 'User avatar',\n  background = 'random',\n  className = '',\n  imageUrl,\n  name,\n  size = 64,\n  variant = 'circular',\n}): JSX.Element => {\n  const generateBackgroundColor = (inputString: string): string => {\n    const hash = inputString.split('').reduce((acc, char) => {\n      const charCode = char.charCodeAt(0);\n      return ((acc << 5) - acc + charCode) & 0xffffffff;\n    }, 0);\n\n    const seed = Math.abs(hash);\n\n    const generateColor = (offset: number): string => {\n      const hue1 = (seed + offset) % 360;\n      const hue2 = (hue1 + 60 + (seed % 120)) % 360;\n\n      const saturation = 70 + (seed % 20);\n      const lightness1 = 55 + (seed % 15);\n      const lightness2 = 60 + ((seed + offset) % 15);\n\n      return `hsl(${hue1}, ${saturation}%, ${lightness1}%), hsl(${hue2}, ${saturation}%, ${lightness2}%)`;\n    };\n\n    const angle = 45 + (seed % 91);\n\n    const colors = generateColor(seed);\n    return `linear-gradient(${angle}deg, ${colors})`;\n  };\n\n  const backgroundColor = useMemo(() => {\n    if (!name || imageUrl) {\n      return undefined;\n    }\n\n    if (background === 'random') {\n      return generateBackgroundColor(name);\n    }\n\n    if (background === 'none') {\n      return undefined;\n    }\n\n    return background;\n  }, [background, name, imageUrl]);\n\n  const styles: {avatar: CSSProperties; image: CSSProperties} = useStyles({\n    size,\n    variant,\n    backgroundColor,\n  });\n\n  const getInitials = (fullName: string): string =>\n    fullName\n      .split(' ')\n      .map((part: string) => part[0])\n      .slice(0, 2)\n      .join('')\n      .toUpperCase();\n\n  const renderContent = (): JSX.Element | string => {\n    if (imageUrl) {\n      return <img src={imageUrl} alt={alt} style={styles.image} />;\n    }\n    if (name) {\n      return getInitials(name);\n    }\n\n    // Skeleton loading animation\n    return (\n      <div\n        style={{\n          width: '100%',\n          height: '100%',\n          background: 'linear-gradient(90deg, #f0f0f0 25%, #e0e0e0 50%, #f0f0f0 75%)',\n          backgroundSize: '200% 100%',\n          animation: 'skeleton-loading 1.5s infinite',\n          borderRadius: variant === 'circular' ? '50%' : '8px',\n        }}\n      />\n    );\n  };\n\n  return (\n    <div style={styles.avatar} className={clsx(withVendorCSSClassPrefix('avatar'), className)}>\n      <style>\n        {`\n          @keyframes skeleton-loading {\n            0% {\n              background-position: -200% 0;\n            }\n            100% {\n              background-position: 200% 0;\n            }\n          }\n        `}\n      </style>\n      {renderContent()}\n    </div>\n  );\n};\n\nexport default Avatar;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  flip,\n  shift,\n  useClick,\n  useDismiss,\n  useRole,\n  useInteractions,\n  useMergeRefs,\n  FloatingFocusManager,\n  FloatingOverlay,\n  FloatingPortal,\n  useId,\n  UseFloatingReturn,\n  UseInteractionsReturn,\n} from '@floating-ui/react';\nimport clsx from 'clsx';\nimport React, {CSSProperties, useMemo} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport Button from '../Button/Button';\nimport {X} from '../Icons';\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      overlay: {\n        backgroundColor: 'rgba(0, 0, 0, 0.5)',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        zIndex: 9999,\n      } as CSSProperties,\n      content: {\n        background: theme.colors.background.surface,\n        borderRadius: theme.borderRadius.large,\n        boxShadow: `0 2px 8px ${colorScheme === 'dark' ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.15)'}`,\n        outline: 'none',\n        maxWidth: '90vw',\n        maxHeight: '90vh',\n        overflowY: 'auto',\n        zIndex: 10000,\n      } as CSSProperties,\n      dropdownContent: {\n        background: theme.colors.background.surface,\n        borderRadius: theme.borderRadius.large,\n        boxShadow: `0 2px 8px ${colorScheme === 'dark' ? 'rgba(0, 0, 0, 0.3)' : 'rgba(0, 0, 0, 0.15)'}`,\n        outline: 'none',\n        maxWidth: '90vw',\n        maxHeight: '90vh',\n        overflowY: 'auto',\n        zIndex: 10000,\n      } as CSSProperties,\n      header: {\n        display: 'flex',\n        justifyContent: 'space-between',\n        alignItems: 'center',\n        padding: `${theme.spacing.unit * 3}px ${theme.spacing.unit * 4.5}px`,\n        borderBottom: `1px solid ${theme.colors.border}`,\n      } as CSSProperties,\n      headerTitle: {\n        margin: 0,\n        fontSize: '1.2rem',\n        fontWeight: 600,\n        color: theme.colors.text.primary,\n      } as CSSProperties,\n      contentBody: {\n        padding: `${theme.spacing.unit * 2}px`,\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\n// Modal Dialog hook and components\ninterface DialogOptions {\n  initialOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  open?: boolean;\n}\n\n// Return type for dialog hook\ninterface DialogHookReturn extends UseFloatingReturn, UseInteractionsReturn {\n  descriptionId: string | undefined;\n  labelId: string | undefined;\n  open: boolean;\n  setDescriptionId: React.Dispatch<React.SetStateAction<string | undefined>>;\n  setLabelId: React.Dispatch<React.SetStateAction<string | undefined>>;\n  setOpen: (open: boolean) => void;\n}\n\nexport function useDialog({\n  initialOpen = false,\n  open: controlledOpen,\n  onOpenChange: setControlledOpen,\n}: DialogOptions = {}): DialogHookReturn {\n  const [uncontrolledOpen, setUncontrolledOpen] = React.useState(initialOpen);\n  const [labelId, setLabelId] = React.useState<string | undefined>();\n  const [descriptionId, setDescriptionId] = React.useState<string | undefined>();\n\n  const open = controlledOpen ?? uncontrolledOpen;\n  const setOpen = setControlledOpen ?? setUncontrolledOpen;\n\n  const data = useFloating({\n    open,\n    onOpenChange: setOpen,\n  });\n\n  const {context} = data;\n\n  const click = useClick(context, {\n    enabled: controlledOpen == null,\n  });\n  const dismiss = useDismiss(context, {outsidePressEvent: 'mousedown'});\n  const role = useRole(context);\n\n  const interactions = useInteractions([click, dismiss, role]);\n\n  return React.useMemo(\n    () => ({\n      open,\n      setOpen,\n      ...interactions,\n      ...data,\n      labelId,\n      descriptionId,\n      setLabelId,\n      setDescriptionId,\n    }),\n    [open, setOpen, interactions, data, labelId, descriptionId],\n  );\n}\n\n// Dropdown Popover hook\ninterface PopoverOptions {\n  initialOpen?: boolean;\n  offset?: number;\n  onOpenChange?: (open: boolean) => void;\n  open?: boolean;\n  placement?: 'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end';\n}\n\n// Return type for popover hook\ninterface PopoverHookReturn extends UseFloatingReturn, UseInteractionsReturn {\n  descriptionId: string | undefined;\n  labelId: string | undefined;\n  open: boolean;\n  setDescriptionId: React.Dispatch<React.SetStateAction<string | undefined>>;\n  setLabelId: React.Dispatch<React.SetStateAction<string | undefined>>;\n  setOpen: (open: boolean) => void;\n}\n\nexport function usePopover({\n  initialOpen = false,\n  open: controlledOpen,\n  onOpenChange: setControlledOpen,\n  placement = 'bottom',\n  offset: offsetValue = 5,\n}: PopoverOptions = {}): PopoverHookReturn {\n  const [uncontrolledOpen, setUncontrolledOpen] = React.useState(initialOpen);\n  const [labelId, setLabelId] = React.useState<string | undefined>();\n  const [descriptionId, setDescriptionId] = React.useState<string | undefined>();\n\n  const open = controlledOpen ?? uncontrolledOpen;\n  const setOpen = setControlledOpen ?? setUncontrolledOpen;\n\n  const data = useFloating({\n    open,\n    onOpenChange: setOpen,\n    middleware: [offset(offsetValue), flip(), shift()],\n    whileElementsMounted: autoUpdate,\n    placement,\n  });\n\n  const {context} = data;\n\n  const click = useClick(context);\n  const dismiss = useDismiss(context, {outsidePressEvent: 'mousedown'});\n  const role = useRole(context);\n\n  const interactions = useInteractions([click, dismiss, role]);\n\n  return React.useMemo(\n    () => ({\n      open,\n      setOpen,\n      ...interactions,\n      ...data,\n      labelId,\n      descriptionId,\n      setLabelId,\n      setDescriptionId,\n    }),\n    [open, setOpen, interactions, data, labelId, descriptionId],\n  );\n}\n\n// Context types\ntype DialogContextType =\n  | (DialogHookReturn & {\n      setDescriptionId: React.Dispatch<React.SetStateAction<string | undefined>>;\n      setLabelId: React.Dispatch<React.SetStateAction<string | undefined>>;\n    })\n  | null;\n\ntype PopoverContextType =\n  | (PopoverHookReturn & {\n      setDescriptionId: React.Dispatch<React.SetStateAction<string | undefined>>;\n      setLabelId: React.Dispatch<React.SetStateAction<string | undefined>>;\n    })\n  | null;\n\nconst DialogContext = React.createContext<DialogContextType>(null);\nconst PopoverContext = React.createContext<PopoverContextType>(null);\n\nexport const useDialogContext = (): DialogHookReturn => {\n  const context = React.useContext(DialogContext);\n  if (context == null) {\n    throw new Error('Dialog components must be wrapped in <Dialog />');\n  }\n  return context;\n};\n\nexport const usePopoverContext = (): PopoverHookReturn => {\n  const context = React.useContext(PopoverContext);\n  if (context == null) {\n    throw new Error('Popover components must be wrapped in <Popover />');\n  }\n  return context;\n};\n\n// Dialog Components (Modal)\nexport function Dialog({children, ...options}: {children: React.ReactNode} & DialogOptions) {\n  const dialog = useDialog(options);\n  return <DialogContext.Provider value={dialog}>{children}</DialogContext.Provider>;\n}\n\ninterface DialogTriggerProps {\n  asChild?: boolean;\n  children: React.ReactNode;\n}\n\nexport const DialogTrigger = React.forwardRef<HTMLElement, React.HTMLProps<HTMLElement> & DialogTriggerProps>(\n  ({children, asChild = false, ...props}, propRef) => {\n    const context = useDialogContext();\n    const childrenRef = (children as any).ref;\n    const ref = useMergeRefs([context.refs.setReference, propRef, childrenRef]);\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(\n        children,\n        context.getReferenceProps({\n          ref,\n          ...props,\n          ...(children.props as any),\n          'data-state': context.open ? 'open' : 'closed',\n        }),\n      );\n    }\n\n    return (\n      <button ref={ref} data-state={context.open ? 'open' : 'closed'} {...context.getReferenceProps(props)}>\n        {children}\n      </button>\n    );\n  },\n);\n\nexport const DialogContent = React.forwardRef<HTMLDivElement, React.HTMLProps<HTMLDivElement>>((props, propRef) => {\n  const {context: floatingContext, ...context} = useDialogContext();\n  const ref = useMergeRefs([context.refs.setFloating, propRef]);\n  const styles = useStyles();\n\n  if (!floatingContext.open) return null;\n\n  return (\n    <FloatingPortal>\n      <FloatingOverlay className={withVendorCSSClassPrefix('popover-overlay')} style={styles.overlay} lockScroll>\n        <FloatingFocusManager context={floatingContext}>\n          <div\n            ref={ref}\n            style={styles.content}\n            className={clsx(withVendorCSSClassPrefix('popover-content'), props.className)}\n            aria-labelledby={context.labelId}\n            aria-describedby={context.descriptionId}\n            {...context.getFloatingProps(props)}\n          >\n            {props.children}\n          </div>\n        </FloatingFocusManager>\n      </FloatingOverlay>\n    </FloatingPortal>\n  );\n});\n\n// Popover Components (Dropdown)\nexport function Popover({children, ...options}: {children: React.ReactNode} & PopoverOptions) {\n  const popover = usePopover(options);\n  return <PopoverContext.Provider value={popover}>{children}</PopoverContext.Provider>;\n}\n\ninterface PopoverTriggerProps {\n  asChild?: boolean;\n  children: React.ReactNode;\n}\n\nexport const PopoverTrigger = React.forwardRef<HTMLElement, React.HTMLProps<HTMLElement> & PopoverTriggerProps>(\n  ({children, asChild = false, ...props}, propRef) => {\n    const context = usePopoverContext();\n    const childrenRef = (children as any).ref;\n    const ref = useMergeRefs([context.refs.setReference, propRef, childrenRef]);\n\n    if (asChild && React.isValidElement(children)) {\n      return React.cloneElement(\n        children,\n        context.getReferenceProps({\n          ref,\n          ...props,\n          ...(children.props as any),\n          'data-state': context.open ? 'open' : 'closed',\n        }),\n      );\n    }\n\n    return (\n      <button ref={ref} data-state={context.open ? 'open' : 'closed'} {...context.getReferenceProps(props)}>\n        {children}\n      </button>\n    );\n  },\n);\n\nexport const PopoverContent = React.forwardRef<HTMLDivElement, React.HTMLProps<HTMLDivElement>>((props, propRef) => {\n  const {context: floatingContext, ...context} = usePopoverContext();\n  const ref = useMergeRefs([context.refs.setFloating, propRef]);\n  const styles = useStyles();\n\n  if (!floatingContext.open) return null;\n\n  return (\n    <FloatingPortal>\n      <FloatingFocusManager context={floatingContext}>\n        <div\n          ref={ref}\n          style={{...styles.dropdownContent, ...context.floatingStyles}}\n          className={clsx(withVendorCSSClassPrefix('popover-content'), props.className)}\n          aria-labelledby={context.labelId}\n          aria-describedby={context.descriptionId}\n          {...context.getFloatingProps(props)}\n        >\n          {props.children}\n        </div>\n      </FloatingFocusManager>\n    </FloatingPortal>\n  );\n});\n\n// Shared components\nexport const PopoverHeading = React.forwardRef<HTMLHeadingElement, React.HTMLProps<HTMLHeadingElement>>(\n  ({children, ...props}, ref) => {\n    const context = usePopoverContext();\n    const styles = useStyles();\n    const id = useId();\n\n    React.useLayoutEffect(() => {\n      context.setLabelId(id);\n      return () => context.setLabelId(undefined);\n    }, [id, context.setLabelId]);\n\n    return (\n      <div style={styles.header}>\n        <h2 {...props} ref={ref} id={id} style={styles.headerTitle}>\n          {children}\n        </h2>\n        <Button color=\"tertiary\" variant=\"text\" size=\"small\" onClick={() => context.setOpen(false)} aria-label=\"Close\">\n          <X width={16} height={16} />\n        </Button>\n      </div>\n    );\n  },\n);\n\nexport const DialogHeading = React.forwardRef<HTMLHeadingElement, React.HTMLProps<HTMLHeadingElement>>(\n  ({children, ...props}, ref) => {\n    const context = useDialogContext();\n    const styles = useStyles();\n    const id = useId();\n\n    React.useLayoutEffect(() => {\n      context.setLabelId(id);\n      return () => context.setLabelId(undefined);\n    }, [id, context.setLabelId]);\n\n    return (\n      <div style={styles.header}>\n        <h2 {...props} ref={ref} id={id} style={styles.headerTitle}>\n          {children}\n        </h2>\n        <Button color=\"tertiary\" variant=\"text\" size=\"small\" onClick={() => context.setOpen(false)} aria-label=\"Close\">\n          <X width={16} height={16} />\n        </Button>\n      </div>\n    );\n  },\n);\n\nexport const PopoverDescription = React.forwardRef<HTMLParagraphElement, React.HTMLProps<HTMLParagraphElement>>(\n  ({children, ...props}, ref) => {\n    const context = usePopoverContext();\n    const id = useId();\n\n    React.useLayoutEffect(() => {\n      context.setDescriptionId(id);\n      return () => context.setDescriptionId(undefined);\n    }, [id, context.setDescriptionId]);\n\n    return (\n      <p {...props} ref={ref} id={id}>\n        {children}\n      </p>\n    );\n  },\n);\n\nexport const DialogDescription = React.forwardRef<HTMLParagraphElement, React.HTMLProps<HTMLParagraphElement>>(\n  ({children, ...props}, ref) => {\n    const context = useDialogContext();\n    const id = useId();\n\n    React.useLayoutEffect(() => {\n      context.setDescriptionId(id);\n      return () => context.setDescriptionId(undefined);\n    }, [id, context.setDescriptionId]);\n\n    return (\n      <p {...props} ref={ref} id={id}>\n        {children}\n      </p>\n    );\n  },\n);\n\nexport const PopoverClose = React.forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement>>(\n  (props, ref) => {\n    const context = usePopoverContext();\n    return <button type=\"button\" {...props} ref={ref} onClick={() => context.setOpen(false)} />;\n  },\n);\n\nexport const DialogClose = React.forwardRef<HTMLButtonElement, React.ButtonHTMLAttributes<HTMLButtonElement>>(\n  (props, ref) => {\n    const context = useDialogContext();\n    return <button type=\"button\" {...props} ref={ref} onClick={() => context.setOpen(false)} />;\n  },\n);\n\n// Legacy API compatibility (for existing code)\ninterface LegacyPopoverProps {\n  children: React.ReactNode;\n  className?: string;\n  isOpen: boolean;\n  mode?: 'modal' | 'dropdown';\n  offset?: number;\n  onClose: () => void;\n  placement?: 'top' | 'bottom' | 'left' | 'right' | 'top-start' | 'top-end' | 'bottom-start' | 'bottom-end';\n  trigger?: HTMLElement | null;\n}\n\n// Legacy Header component for backward compatibility\nconst LegacyPopoverHeader: React.FC<{children?: React.ReactNode}> = ({children}) => {\n  const styles = useStyles();\n\n  return <div style={styles.header}>{children && <h3 style={styles.headerTitle}>{children}</h3>}</div>;\n};\n\n// Legacy Content component for backward compatibility\nconst LegacyPopoverContent: React.FC<{children: React.ReactNode}> = ({children}) => {\n  const styles = useStyles();\n  return <div style={styles.contentBody}>{children}</div>;\n};\n\n// Legacy component for backward compatibility\nexport const LegacyPopover: React.FC<LegacyPopoverProps> & {\n  Content: typeof LegacyPopoverContent;\n  Header: typeof LegacyPopoverHeader;\n} = ({isOpen, children, onClose, className = '', mode = 'modal', trigger, placement, offset}) => {\n  if (mode === 'modal') {\n    return (\n      <Dialog open={isOpen} onOpenChange={onClose}>\n        <DialogContent className={className}>{children}</DialogContent>\n      </Dialog>\n    );\n  }\n\n  return (\n    <Popover open={isOpen} onOpenChange={onClose} placement={placement} offset={offset}>\n      <PopoverContent className={className}>{children}</PopoverContent>\n    </Popover>\n  );\n};\n\nLegacyPopover.Header = LegacyPopoverHeader;\nLegacyPopover.Content = LegacyPopoverContent;\n\n// Export the legacy component as default for backward compatibility\nexport default LegacyPopover;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * LogOut icon component.\n */\nconst LogOut: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"m16 17 5-5-5-5\" />\n    <path d=\"M21 12H9\" />\n    <path d=\"M9 21H5a2 2 0 0 1-2-2V5a2 2 0 0 1 2-2h4\" />\n  </svg>\n);\n\nexport default LogOut;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * Plus (add) icon component.\n */\nconst Plus: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M5 12h14\" />\n    <path d=\"M12 5v14\" />\n  </svg>\n);\n\nexport default Plus;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * User icon component.\n */\nconst User: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M19 21v-2a4 4 0 0 0-4-4H9a4 4 0 0 0-4 4v2\" />\n    <circle cx=\"12\" cy=\"7\" r=\"4\" />\n  </svg>\n);\n\nexport default User;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, SVGProps} from 'react';\n\n/**\n * X (close) icon component.\n */\nconst X: FC<SVGProps<SVGSVGElement>> = props => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    width=\"24\"\n    height=\"24\"\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n    {...props}\n  >\n    <path d=\"M18 6 6 18\" />\n    <path d=\"m6 6 12 12\" />\n  </svg>\n);\n\nexport default X;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {CSSProperties, FC, ReactNode, useCallback, useState, useMemo} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport clsx from 'clsx';\nimport FormControl from '../FormControl/FormControl';\nimport InputLabel from '../InputLabel/InputLabel';\nimport TextField from '../TextField/TextField';\nimport DatePicker from '../DatePicker/DatePicker';\nimport Checkbox from '../Checkbox/Checkbox';\nimport Button from '../Button/Button';\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\n\nexport interface MultiInputProps {\n  /**\n   * Label text to display above the inputs\n   */\n  label?: string;\n  /**\n   * Error message to display below the inputs\n   */\n  error?: string;\n  /**\n   * Additional CSS class names\n   */\n  className?: string;\n  /**\n   * Whether the field is required\n   */\n  required?: boolean;\n  /**\n   * Whether the field is disabled\n   */\n  disabled?: boolean;\n  /**\n   * Helper text to display below the inputs\n   */\n  helperText?: string;\n  /**\n   * Placeholder text for input fields\n   */\n  placeholder?: string;\n  /**\n   * Array of values\n   */\n  values: string[];\n  /**\n   * Callback when values change\n   */\n  onChange: (values: string[]) => void;\n  /**\n   * Custom style object\n   */\n  style?: CSSProperties;\n  /**\n   * Input type\n   */\n  type?: 'text' | 'email' | 'tel' | 'url' | 'password' | 'date' | 'boolean';\n  /**\n   * Field type for different input components\n   */\n  fieldType?: 'STRING' | 'DATE_TIME' | 'BOOLEAN';\n  /**\n   * Icon to display at the start (left) of each input\n   */\n  startIcon?: ReactNode;\n  /**\n   * Icon to display at the end (right) of each input (in addition to add/remove buttons)\n   */\n  endIcon?: ReactNode;\n  /**\n   * Minimum number of fields to show (default: 1)\n   */\n  minFields?: number;\n  /**\n   * Maximum number of fields to allow (default: unlimited)\n   */\n  maxFields?: number;\n}\n\nconst useStyles = () => {\n  const {theme} = useTheme();\n\n  return useMemo(\n    () => ({\n      container: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: `${theme.spacing.unit}px`,\n      },\n      inputRow: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: `${theme.spacing.unit}px`,\n        position: 'relative' as const,\n      },\n      inputWrapper: {\n        flex: 1,\n      },\n      plusIcon: {\n        background: 'var(--asgardeo-color-secondary-main)',\n        borderRadius: '50%',\n        outline: '4px var(--asgardeo-color-secondary-main) auto',\n        color: 'var(--asgardeo-color-secondary-contrastText)',\n      },\n      listContainer: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: `${theme.spacing.unit * 0}px`,\n      },\n      listItem: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        padding: `${theme.spacing.unit}px ${theme.spacing.unit * 1.5}px`,\n        backgroundColor: theme.colors.background.surface,\n        borderRadius: theme.borderRadius.medium,\n        fontSize: '1rem',\n        color: theme.colors.text.primary,\n      },\n      removeButton: {\n        padding: `${theme.spacing.unit / 2}px`,\n        minWidth: 'auto',\n        color: theme.colors.error.main,\n      },\n    }),\n    [theme],\n  );\n};\n\nconst MultiInput: FC<MultiInputProps> = ({\n  label,\n  error,\n  required,\n  className,\n  disabled,\n  helperText,\n  placeholder = 'Enter value',\n  values = [],\n  onChange,\n  style = {},\n  type = 'text',\n  fieldType = 'STRING',\n  startIcon,\n  endIcon,\n  minFields = 1,\n  maxFields,\n}) => {\n  const styles = useStyles();\n\n  const PlusIcon = ({style}) => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n      style={style}\n    >\n      <path d=\"M12 5v14M5 12h14\" />\n    </svg>\n  );\n\n  const BinIcon = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M3 6h18M8 6V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2m3 0v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6h14ZM10 11v6M14 11v6\" />\n    </svg>\n  );\n\n  const handleAddValue = useCallback(\n    (newValue: string) => {\n      if (newValue.trim() !== '' && (!maxFields || values.length < maxFields)) {\n        onChange([...values, newValue.trim()]);\n      }\n    },\n    [values, onChange, maxFields],\n  );\n\n  const handleRemoveValue = useCallback(\n    (index: number) => {\n      if (values.length > minFields) {\n        const updatedValues = values.filter((_, i) => i !== index);\n        onChange(updatedValues);\n      }\n    },\n    [values, onChange, minFields],\n  );\n\n  const renderInputField = useCallback(\n    (\n      value: string,\n      onValueChange: (value: string) => void,\n      attachedEndIcon?: ReactNode,\n      onEndIconClick?: () => void,\n    ) => {\n      const handleInputChange = (e: any) => {\n        const newValue = e.target ? e.target.value : e;\n        onValueChange(newValue);\n      };\n\n      const handleKeyDown = (e: React.KeyboardEvent) => {\n        if (e.key === 'Enter' && onEndIconClick) {\n          e.preventDefault();\n          onEndIconClick();\n        }\n      };\n\n      const finalEndIcon = attachedEndIcon || endIcon;\n\n      const commonProps = {\n        value,\n        onChange: handleInputChange,\n        onKeyDown: handleKeyDown,\n        placeholder,\n        disabled,\n        startIcon,\n        endIcon: finalEndIcon,\n        onEndIconClick,\n        error,\n      };\n\n      switch (fieldType) {\n        case 'DATE_TIME':\n          return <DatePicker {...commonProps} />;\n        case 'BOOLEAN':\n          return (\n            <Checkbox\n              {...commonProps}\n              checked={value === 'true' || Boolean(value)}\n              onChange={(e: any) => onValueChange(e.target.checked ? 'true' : 'false')}\n            />\n          );\n        default:\n          return <TextField {...commonProps} type={type} />;\n      }\n    },\n    [placeholder, disabled, startIcon, endIcon, error, fieldType, type],\n  );\n\n  const canAddMore = !maxFields || values.length < maxFields;\n  const canRemove = values.length > minFields;\n\n  // State for the current input value\n  const [currentInputValue, setCurrentInputValue] = useState('');\n\n  const handleInputSubmit = useCallback(() => {\n    if (currentInputValue.trim() !== '') {\n      handleAddValue(currentInputValue);\n      setCurrentInputValue('');\n    }\n  }, [currentInputValue, handleAddValue]);\n\n  return (\n    <FormControl\n      error={error}\n      helperText={helperText}\n      className={clsx(withVendorCSSClassPrefix('multi-input'), className)}\n      style={style}\n    >\n      {label && (\n        <InputLabel required={required} error={!!error}>\n          {label}\n        </InputLabel>\n      )}\n      <div style={styles.container}>\n        {/* Input field at the top */}\n        <div style={styles.inputRow}>\n          <div style={styles.inputWrapper}>\n            {renderInputField(\n              currentInputValue,\n              setCurrentInputValue,\n              canAddMore ? <PlusIcon style={styles.plusIcon} /> : undefined,\n              canAddMore ? handleInputSubmit : undefined,\n            )}\n          </div>\n        </div>\n\n        {/* List of added items */}\n        {values.length > 0 && (\n          <div style={styles.listContainer}>\n            {values.map((value, index) => (\n              <div key={index} style={styles.listItem}>\n                <span>{value}</span>\n                {canRemove && (\n                  <Button\n                    size=\"small\"\n                    color=\"secondary\"\n                    variant=\"text\"\n                    onClick={() => handleRemoveValue(index)}\n                    disabled={disabled}\n                    title=\"Remove value\"\n                    style={styles.removeButton}\n                  >\n                    <BinIcon />\n                  </Button>\n                )}\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </FormControl>\n  );\n};\n\nexport default MultiInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  User,\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  updateMeProfile as baseUpdateMeProfile,\n  UpdateMeProfileConfig as BaseUpdateMeProfileConfig,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the updateMeProfile request (React-specific)\n */\nexport interface UpdateMeProfileConfig extends Omit<BaseUpdateMeProfileConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Updates the user profile information at the specified SCIM2 Me endpoint.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Configuration object with URL, payload and optional request config.\n * @returns A promise that resolves with the updated user profile information.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * await updateMeProfile({\n *   url: \"https://api.asgardeo.io/t/<ORG>/scim2/Me\",\n *   payload: { \"urn:scim:wso2:schema\": { mobileNumbers: [\"0777933830\"] } }\n * });\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * await updateMeProfile({\n *   url: \"https://api.asgardeo.io/t/<ORG>/scim2/Me\",\n *   payload: { \"urn:scim:wso2:schema\": { mobileNumbers: [\"0777933830\"] } },\n *   fetcher: customFetchFunction\n * });\n * ```\n */\nconst updateMeProfile = async ({fetcher, ...requestConfig}: UpdateMeProfileConfig): Promise<User> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'PATCH',\n      headers: config.headers as Record<string, string>,\n      data: config.body ? JSON.parse(config.body as string) : undefined,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseUpdateMeProfile({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default updateMeProfile;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, ReactElement} from 'react';\nimport BaseUserProfile, {BaseUserProfileProps} from './BaseUserProfile';\nimport updateMeProfile from '../../../api/updateMeProfile';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useUser from '../../../contexts/User/useUser';\nimport {User} from '@asgardeo/browser';\n\n/**\n * Props for the UserProfile component.\n * Extends BaseUserProfileProps but makes the user prop optional since it will be obtained from useAsgardeo\n */\nexport type UserProfileProps = Omit<BaseUserProfileProps, 'user' | 'profile' | 'flattenedProfile' | 'schemas'>;\n\n/**\n * UserProfile component displays the authenticated user's profile information in a\n * structured and styled format. It shows user details such as display name, email,\n * username, and other available profile information from Asgardeo.\n *\n * This component is the React-specific implementation that uses the BaseUserProfile\n * and automatically retrieves the user data from Asgardeo context if not provided.\n *\n * @example\n * ```tsx\n * // Basic usage - will use user from Asgardeo context\n * <UserProfile />\n *\n * // With explicit user data\n * <UserProfile user={specificUser} />\n *\n * // With card layout and custom fallback\n * <UserProfile\n *   cardLayout={true}\n *   fallback={<div>Please sign in to view your profile</div>}\n * />\n * ```\n */\nconst UserProfile: FC<UserProfileProps> = ({...rest}: UserProfileProps): ReactElement => {\n  const {baseUrl} = useAsgardeo();\n  const {profile, flattenedProfile, schemas, onUpdateProfile} = useUser();\n\n  const handleProfileUpdate = async (payload: any): Promise<void> => {\n    const response: User = await updateMeProfile({baseUrl, payload});\n\n    onUpdateProfile(response);\n  };\n\n  return (\n    <BaseUserProfile\n      profile={profile}\n      flattenedProfile={flattenedProfile}\n      schemas={schemas}\n      onUpdate={handleProfileUpdate}\n      {...rest}\n    />\n  );\n};\n\nexport default UserProfile;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  flip,\n  shift,\n  useClick,\n  useDismiss,\n  useRole,\n  useInteractions,\n  FloatingFocusManager,\n  FloatingPortal,\n} from '@floating-ui/react';\nimport clsx from 'clsx';\nimport {CSSProperties, FC, ReactElement, ReactNode, useMemo, useRef, useState} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport getMappedUserProfileValue from '../../../utils/getMappedUserProfileValue';\nimport {Avatar} from '../../primitives/Avatar/Avatar';\nimport Button from '../../primitives/Button/Button';\nimport LogOut from '../../primitives/Icons/LogOut';\nimport User from '../../primitives/Icons/User';\nimport Typography from '../../primitives/Typography/Typography';\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      trigger: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} * 0.5)`,\n        border: 'none',\n        backgroundColor: 'none',\n        cursor: 'pointer',\n        borderRadius: theme.vars.borderRadius.medium,\n        '&:hover': {\n          backgroundColor: theme.vars.colors.background.surface,\n        },\n      } as CSSProperties,\n      userName: {\n        color: theme.vars.colors.text.primary,\n        fontWeight: 500,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        maxWidth: '120px',\n      } as CSSProperties,\n      dropdownContent: {\n        minWidth: '270px',\n        maxWidth: '500px',\n        backgroundColor: theme.vars.colors.background.surface,\n        borderRadius: theme.vars.borderRadius.medium,\n        boxShadow: theme.vars.shadows.medium,\n        border: `1px solid ${theme.vars.colors.border}`,\n        outline: 'none',\n        zIndex: 1000,\n      } as CSSProperties,\n      dropdownMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n      } as CSSProperties,\n      menuItem: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} * 1.5) calc(${theme.vars.spacing.unit} * 2)`,\n        width: '100%',\n        color: theme.vars.colors.text.primary,\n        textDecoration: 'none',\n        border: 'none',\n        backgroundColor: 'none',\n        cursor: 'pointer',\n        fontSize: '0.875rem',\n        textAlign: 'left',\n        borderRadius: theme.vars.borderRadius.medium,\n        transition: 'background-color 0.15s ease-in-out',\n      } as CSSProperties,\n      menuItemAnchor: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} * 1.5) calc(${theme.vars.spacing.unit} * 2)`,\n        width: '100%',\n        color: theme.vars.colors.text.primary,\n        textDecoration: 'none',\n        border: 'none',\n        background: 'none',\n        cursor: 'pointer',\n        fontSize: '0.875rem',\n        textAlign: 'left',\n        borderRadius: theme.vars.borderRadius.medium,\n        transition: 'background-color 0.15s ease-in-out',\n      } as CSSProperties,\n      divider: {\n        margin: `calc(${theme.vars.spacing.unit} * 0.5) 0`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n      } as CSSProperties,\n      dropdownHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} * 1.5)`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n      } as CSSProperties,\n      headerInfo: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: `calc(${theme.vars.spacing.unit} / 4)`,\n        flex: 1,\n        minWidth: 0,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      } as CSSProperties,\n      headerName: {\n        color: theme.vars.colors.text.primary,\n        fontSize: '1rem',\n        fontWeight: 500,\n        margin: 0,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      } as CSSProperties,\n      headerEmail: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n        margin: 0,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      } as CSSProperties,\n      loadingContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '80px',\n        gap: theme.vars.spacing.unit,\n      } as CSSProperties,\n      loadingText: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\ninterface MenuItem {\n  href?: string;\n  icon?: ReactNode;\n  label: ReactNode;\n  onClick?: () => void;\n}\n\nexport interface BaseUserDropdownProps {\n  /**\n   * Mapping of component attribute names to identity provider field names.\n   * Allows customizing which user profile fields should be used for each attribute.\n   */\n  attributeMapping?: {\n    [key: string]: string | string[] | undefined;\n    firstName?: string | string[];\n    lastName?: string | string[];\n    picture?: string | string[];\n    username?: string | string[];\n  };\n  /**\n   * Optional size for the avatar\n   */\n  avatarSize?: number;\n  /**\n   * Optional className for the dropdown container.\n   */\n  className?: string;\n  /**\n   * Optional element to render when no user is signed in.\n   */\n  fallback?: ReactElement;\n  /**\n   * Whether the user data is currently loading\n   */\n  isLoading?: boolean;\n  /**\n   * Menu items to display in the dropdown\n   */\n  menuItems?: MenuItem[];\n  /**\n   * Callback function for \"Manage Profile\" action\n   */\n  onManageProfile?: () => void;\n  /**\n   * Callback function for \"Sign Out\" action\n   */\n  onSignOut?: () => void;\n  /**\n   * The HTML element ID where the portal should be mounted\n   */\n  portalId?: string;\n  /**\n   * Show dropdown header with user information\n   */\n  showDropdownHeader?: boolean;\n  /**\n   * Show user's display name next to avatar in the trigger button\n   */\n  showTriggerLabel?: boolean;\n  /**\n   * The user object containing profile information\n   */\n  user: any;\n}\n\n/**\n * BaseUserDropdown component displays a user avatar with a dropdown menu.\n * When clicked, it shows a popover with customizable menu items.\n * This component serves as the base for framework-specific implementations.\n */\nexport const BaseUserDropdown: FC<BaseUserDropdownProps> = ({\n  fallback = null,\n  className = '',\n  user,\n  isLoading = false,\n  portalId = 'asgardeo-user-dropdown',\n  menuItems = [],\n  showTriggerLabel = false,\n  avatarSize = 32,\n  onManageProfile,\n  onSignOut,\n  attributeMapping = {},\n}): ReactElement => {\n  const styles = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [hoveredItemIndex, setHoveredItemIndex] = useState<number | null>(null);\n  const {theme, colorScheme} = useTheme();\n\n  const {refs, floatingStyles, context} = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    placement: 'bottom-end',\n    middleware: [offset(5), flip({fallbackAxisSideDirection: 'end'}), shift({padding: 5})],\n    whileElementsMounted: autoUpdate,\n  });\n\n  const click = useClick(context);\n  const dismiss = useDismiss(context);\n  const role = useRole(context);\n\n  const {getReferenceProps, getFloatingProps} = useInteractions([click, dismiss, role]);\n\n  const defaultAttributeMappings = {\n    picture: ['profile', 'profileUrl', 'picture', 'URL'],\n    firstName: ['name.givenName', 'given_name'],\n    lastName: ['name.familyName', 'family_name'],\n    email: ['emails'],\n    username: ['userName', 'username', 'user_name'],\n  };\n\n  const mergedMappings = {...defaultAttributeMappings, ...attributeMapping};\n\n  const getDisplayName = () => {\n    const firstName = getMappedUserProfileValue('firstName', mergedMappings, user);\n    const lastName = getMappedUserProfileValue('lastName', mergedMappings, user);\n\n    if (firstName && lastName) {\n      return `${firstName} ${lastName}`;\n    }\n\n    return getMappedUserProfileValue('username', mergedMappings, user) || '';\n  };\n\n  if (fallback && !user && !isLoading) {\n    return fallback;\n  }\n\n  const handleMenuItemClick = (item: MenuItem) => {\n    if (item.onClick) {\n      item.onClick();\n    }\n    setIsOpen(false);\n  };\n\n  // Create default menu items\n  const defaultMenuItems: MenuItem[] = [];\n\n  if (onManageProfile) {\n    defaultMenuItems.push({\n      label: 'Manage Profile',\n      onClick: onManageProfile,\n      icon: <User width=\"16\" height=\"16\" />,\n    });\n  }\n\n  if (onSignOut) {\n    defaultMenuItems.push({\n      label: 'Sign Out',\n      onClick: onSignOut,\n      icon: <LogOut width=\"16\" height=\"16\" />,\n    });\n  }\n\n  // Merge custom menu items with default ones\n  const allMenuItems = [...menuItems];\n  if (defaultMenuItems.length > 0) {\n    // Add divider before default items if there are custom items\n    if (menuItems.length > 0) {\n      allMenuItems.push({label: '', onClick: undefined}); // Divider placeholder\n    }\n    allMenuItems.push(...defaultMenuItems);\n  }\n\n  return (\n    <div className={clsx(withVendorCSSClassPrefix('user-dropdown'), className)}>\n      <Button\n        ref={refs.setReference}\n        className={withVendorCSSClassPrefix('user-dropdown__trigger')}\n        style={styles.trigger}\n        color=\"tertiary\"\n        variant=\"text\"\n        size=\"medium\"\n        {...getReferenceProps()}\n      >\n        <Avatar\n          imageUrl={getMappedUserProfileValue('picture', mergedMappings, user)}\n          name={getDisplayName()}\n          size={avatarSize}\n          alt={`${getDisplayName()}'s avatar`}\n        />\n        {showTriggerLabel && (\n          <Typography\n            variant=\"body2\"\n            className={withVendorCSSClassPrefix('user-dropdown__trigger-label')}\n            style={styles.userName}\n          >\n            {getDisplayName()}\n          </Typography>\n        )}\n      </Button>\n\n      {isOpen && (\n        <FloatingPortal id={portalId}>\n          <FloatingFocusManager context={context} modal={false}>\n            <div\n              ref={refs.setFloating}\n              className={withVendorCSSClassPrefix('user-dropdown__content')}\n              style={{...floatingStyles, ...styles.dropdownContent}}\n              {...getFloatingProps()}\n            >\n              <div className={withVendorCSSClassPrefix('user-dropdown__header')} style={styles.dropdownHeader}>\n                <Avatar\n                  imageUrl={getMappedUserProfileValue('picture', mergedMappings, user)}\n                  name={getDisplayName()}\n                  size={avatarSize * 1.25}\n                  alt={`${getDisplayName()}'s avatar`}\n                />\n                <div className={withVendorCSSClassPrefix('user-dropdown__header-info')} style={styles.headerInfo}>\n                  <Typography\n                    noWrap\n                    className={withVendorCSSClassPrefix('user-dropdown__header-name')}\n                    variant=\"body1\"\n                    fontWeight=\"medium\"\n                  >\n                    {getDisplayName()}\n                  </Typography>\n                  <Typography\n                    noWrap\n                    className={withVendorCSSClassPrefix('user-dropdown__header-email')}\n                    variant=\"caption\"\n                    color=\"secondary\"\n                  >\n                    {getMappedUserProfileValue('username', mergedMappings, user) ||\n                      getMappedUserProfileValue('email', mergedMappings, user)}\n                  </Typography>\n                </div>\n              </div>\n              <div className={withVendorCSSClassPrefix('user-dropdown__menu')} style={styles.dropdownMenu}>\n                {allMenuItems.map((item, index) => (\n                  <div key={index}>\n                    {item.label === '' ? (\n                      // Render divider for empty label placeholder\n                      <div className={withVendorCSSClassPrefix('user-dropdown__menu-divider')} style={styles.divider} />\n                    ) : item.href ? (\n                      <a\n                        href={item.href}\n                        style={{\n                          ...styles.menuItemAnchor,\n                          backgroundColor: hoveredItemIndex === index ? theme.vars.colors.action?.hover : 'transparent',\n                        }}\n                        className={withVendorCSSClassPrefix('user-dropdown__menu-item')}\n                        onMouseEnter={() => setHoveredItemIndex(index)}\n                        onMouseLeave={() => setHoveredItemIndex(null)}\n                        onFocus={() => setHoveredItemIndex(index)}\n                        onBlur={() => setHoveredItemIndex(null)}\n                      >\n                        {item.icon}\n                        <span>{item.label}</span>\n                      </a>\n                    ) : (\n                      <Button\n                        onClick={() => handleMenuItemClick(item)}\n                        style={{\n                          ...styles.menuItem,\n                          backgroundColor: hoveredItemIndex === index ? theme.vars.colors.action?.hover : 'transparent',\n                        }}\n                        className={withVendorCSSClassPrefix('user-dropdown__menu-item')}\n                        color=\"tertiary\"\n                        variant=\"text\"\n                        size=\"small\"\n                        startIcon={item.icon}\n                        onMouseEnter={() => setHoveredItemIndex(index)}\n                        onMouseLeave={() => setHoveredItemIndex(null)}\n                      >\n                        {item.label}\n                      </Button>\n                    )}\n                  </div>\n                ))}\n              </div>\n            </div>\n          </FloatingFocusManager>\n        </FloatingPortal>\n      )}\n    </div>\n  );\n};\n\nexport default BaseUserDropdown;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, ReactElement, ReactNode, useState} from 'react';\nimport BaseUserDropdown, {BaseUserDropdownProps} from './BaseUserDropdown';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport UserProfile from '../UserProfile/UserProfile';\n\n/**\n * Render props data passed to the children function\n */\nexport interface UserDropdownRenderProps {\n  /** Function to close the profile dialog */\n  closeProfile: () => void;\n  /** Whether user data is currently loading */\n  isLoading: boolean;\n  /** Whether the profile dialog is currently open */\n  isProfileOpen: boolean;\n  /** Function to open the user profile dialog */\n  openProfile: () => void;\n  /** Function to sign out the user */\n  signOut: () => void;\n  /** The authenticated user object */\n  user: any;\n}\n\n/**\n * Props for the UserDropdown component.\n * Extends BaseUserDropdownProps but excludes user, onManageProfile, and onSignOut since they're handled internally\n */\nexport type UserDropdownProps = Omit<BaseUserDropdownProps, 'user' | 'onManageProfile'> & {\n  /**\n   * Render prop function that receives user state and actions.\n   * When provided, this completely replaces the default dropdown rendering.\n   */\n  children?: (props: UserDropdownRenderProps) => ReactNode;\n  /**\n   * Custom render function for the dropdown content.\n   * When provided, this replaces just the dropdown content while keeping the trigger.\n   */\n  renderDropdown?: (props: UserDropdownRenderProps) => ReactNode;\n  /**\n   * Custom render function for the trigger button.\n   * When provided, this replaces just the trigger button while keeping the dropdown.\n   */\n  renderTrigger?: (props: UserDropdownRenderProps) => ReactNode;\n};\n\n/**\n * UserDropdown component displays a user avatar with a dropdown menu.\n * When clicked, it shows a popover with customizable menu items.\n * This component is the React-specific implementation that uses the BaseUserDropdown\n * and automatically retrieves the user data from Asgardeo context.\n *\n * Supports render props for complete customization of the dropdown appearance and behavior.\n *\n * @example\n * ```tsx\n * // Basic usage - will use user from Asgardeo context\n * <UserDropdown menuItems={[\n *   { label: 'Profile', onClick: () => {} },\n *   { label: 'Settings', href: '/settings' },\n *   { label: 'Sign Out', onClick: () => {} }\n * ]} />\n *\n * // With custom configuration\n * <UserDropdown\n *   showTriggerLabel={true}\n *   avatarSize={40}\n *   fallback={<div>Please sign in</div>}\n * />\n *\n * // Using render props for complete customization\n * <UserDropdown>\n *   {({ user, isLoading, openProfile, signOut }) => (\n *     <div>\n *       <button onClick={openProfile}>\n *         {user?.name || 'Loading...'}\n *       </button>\n *       <button onClick={signOut}>Logout</button>\n *     </div>\n *   )}\n * </UserDropdown>\n *\n * // Using partial render props\n * <UserDropdown\n *   renderTrigger={({ user, openProfile }) => (\n *     <button onClick={openProfile} className=\"custom-trigger\">\n *       Welcome, {user?.name}!\n *     </button>\n *   )}\n * />\n * ```\n */\nconst UserDropdown: FC<UserDropdownProps> = ({\n  children,\n  renderTrigger,\n  renderDropdown,\n  onSignOut,\n  ...rest\n}: UserDropdownProps): ReactElement => {\n  const {user, isLoading, signOut} = useAsgardeo();\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n\n  const handleManageProfile = () => {\n    setIsProfileOpen(true);\n  };\n\n  const handleSignOut = () => {\n    signOut();\n    onSignOut && onSignOut();\n  };\n\n  const closeProfile = () => {\n    setIsProfileOpen(false);\n  };\n\n  // Prepare render props data\n  const renderProps: UserDropdownRenderProps = {\n    user,\n    isLoading: isLoading as boolean,\n    openProfile: handleManageProfile,\n    signOut: handleSignOut,\n    isProfileOpen,\n    closeProfile,\n  };\n\n  // If children render prop is provided, use it for complete customization\n  if (children) {\n    return (\n      <>\n        {children(renderProps)}\n        <UserProfile mode=\"popup\" open={isProfileOpen} onOpenChange={setIsProfileOpen} />\n      </>\n    );\n  }\n\n  // If partial render props are provided, customize specific parts\n  if (renderTrigger || renderDropdown) {\n    // This would require significant changes to BaseUserDropdown to support partial customization\n    // For now, we'll provide a simple implementation that shows how it could work\n    return (\n      <>\n        {renderTrigger ? (\n          renderTrigger(renderProps)\n        ) : (\n          <BaseUserDropdown\n            user={user}\n            isLoading={isLoading}\n            onManageProfile={handleManageProfile}\n            onSignOut={handleSignOut}\n            {...rest}\n          />\n        )}\n        {/* Note: renderDropdown would need BaseUserDropdown modifications to implement properly */}\n        <UserProfile mode=\"popup\" open={isProfileOpen} onOpenChange={setIsProfileOpen} />\n      </>\n    );\n  }\n\n  // Default behavior - use BaseUserDropdown as before\n  return (\n    <>\n      <BaseUserDropdown\n        user={user}\n        isLoading={isLoading}\n        onManageProfile={handleManageProfile}\n        onSignOut={handleSignOut}\n        {...rest}\n      />\n      {isProfileOpen && <UserProfile mode=\"popup\" open={isProfileOpen} onOpenChange={setIsProfileOpen} />}\n    </>\n  );\n};\n\nexport default UserDropdown;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  flip,\n  shift,\n  useClick,\n  useDismiss,\n  useRole,\n  useInteractions,\n  FloatingFocusManager,\n  FloatingPortal,\n} from '@floating-ui/react';\nimport clsx from 'clsx';\nimport {CSSProperties, FC, ReactElement, ReactNode, useMemo, useState} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport useTranslation from '../../../hooks/useTranslation';\nimport {Avatar} from '../../primitives/Avatar/Avatar';\nimport Button from '../../primitives/Button/Button';\nimport Building from '../../primitives/Icons/Building';\nimport Check from '../../primitives/Icons/Check';\nimport ChevronDown from '../../primitives/Icons/ChevronDown';\nimport Typography from '../../primitives/Typography/Typography';\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      trigger: {\n        display: 'inline-flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} * 0.75) ${theme.vars.spacing.unit}`,\n        border: `1px solid ${theme.vars.colors.border}`,\n        background: theme.vars.colors.background.surface,\n        cursor: 'pointer',\n        borderRadius: theme.vars.borderRadius.medium,\n        minWidth: '160px',\n        '&:hover': {\n          backgroundColor: theme.vars.colors.background.surface,\n        },\n      } as CSSProperties,\n      orgName: {\n        color: theme.vars.colors.text.primary,\n        fontWeight: 500,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        flex: 1,\n      } as CSSProperties,\n      dropdownContent: {\n        minWidth: '280px',\n        maxWidth: '400px',\n        backgroundColor: theme.vars.colors.background.surface,\n        borderRadius: theme.vars.borderRadius.medium,\n        boxShadow: theme.vars.shadows.medium,\n        border: `1px solid ${theme.vars.colors.border}`,\n        outline: 'none',\n        zIndex: 1000,\n      } as CSSProperties,\n      dropdownMenu: {\n        display: 'flex',\n        flexDirection: 'column',\n        width: '100%',\n      } as CSSProperties,\n      menuItem: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} * 1.5) calc(${theme.vars.spacing.unit} * 2)`,\n        width: '100%',\n        color: theme.vars.colors.text.primary,\n        textDecoration: 'none',\n        border: 'none',\n        backgroundColor: 'none',\n        cursor: 'pointer',\n        fontSize: '0.875rem',\n        textAlign: 'left',\n        borderRadius: theme.vars.borderRadius.medium,\n        transition: 'background-color 0.15s ease-in-out',\n        '&:hover': {\n          backgroundColor: theme.vars.colors.action?.hover || 'rgba(0, 0, 0, 0.04)',\n        },\n      } as CSSProperties,\n      organizationInfo: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: `calc(${theme.vars.spacing.unit} / 4)`,\n        flex: 1,\n        minWidth: 0,\n        overflow: 'hidden',\n      } as CSSProperties,\n      organizationName: {\n        color: theme.vars.colors.text.primary,\n        fontSize: '0.875rem',\n        fontWeight: 500,\n        margin: 0,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      } as CSSProperties,\n      organizationMeta: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.75rem',\n        margin: 0,\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n      } as CSSProperties,\n      divider: {\n        margin: `calc(${theme.vars.spacing.unit} * 0.5) 0`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n      } as CSSProperties,\n      dropdownHeader: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        padding: `${theme.vars.spacing.unit} calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      loadingContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '80px',\n        gap: theme.vars.spacing.unit,\n      } as CSSProperties,\n      loadingText: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n      } as CSSProperties,\n      errorContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        minHeight: '80px',\n        padding: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      errorText: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n        textAlign: 'center',\n      } as CSSProperties,\n      manageButton: {\n        minWidth: 'auto',\n        marginLeft: 'auto',\n      } as CSSProperties,\n      roleCapitalized: {\n        textTransform: 'capitalize',\n      } as CSSProperties,\n      sectionHeader: {\n        textTransform: 'uppercase',\n        letterSpacing: '0.05em',\n        color: theme.vars.colors.text.secondary,\n      } as CSSProperties,\n      sectionHeaderContainer: {\n        borderTop: 'none',\n        borderBottom: 'none',\n        paddingBottom: `calc(${theme.vars.spacing.unit} / 2)`,\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\ninterface MenuItem {\n  href?: string;\n  icon?: ReactNode;\n  label: ReactNode;\n  onClick?: () => void;\n}\n\n/**\n * Interface for organization data.\n */\nexport interface Organization {\n  /**\n   * Avatar URL for the organization.\n   */\n  avatar?: string;\n  /**\n   * Unique identifier for the organization.\n   */\n  id: string;\n  /**\n   * Number of members in the organization.\n   */\n  memberCount?: number;\n  /**\n   * Additional metadata for the organization.\n   */\n  metadata?: Record<string, any>;\n  /**\n   * Display name of the organization.\n   */\n  name: string;\n  /**\n   * User's role in the organization.\n   */\n  role?: 'owner' | 'admin' | 'member';\n  /**\n   * URL slug for the organization.\n   */\n  slug?: string;\n}\n\n/**\n * Props interface for the BaseOrganizationSwitcher component.\n */\nexport interface BaseOrganizationSwitcherProps {\n  /**\n   * Optional size for the avatar\n   */\n  avatarSize?: number;\n  /**\n   * Custom class name for styling.\n   */\n  className?: string;\n  /**\n   * Currently selected organization.\n   */\n  currentOrganization?: Organization;\n  /**\n   * Error message to display.\n   */\n  error?: string;\n  /**\n   * Optional element to render when no organization is selected.\n   */\n  fallback?: ReactElement;\n  /**\n   * Whether the component is in a loading state.\n   */\n  loading?: boolean;\n  /**\n   * Additional menu items to display at the bottom of the dropdown.\n   */\n  menuItems?: MenuItem[];\n  /**\n   * Handler for when an organization is selected.\n   */\n  onOrganizationSwitch: (organization: Organization) => void;\n  /**\n   * Handler for when the manage profile button is clicked.\n   */\n  onManageProfile?: () => void;\n  /**\n   * List of available organizations.\n   */\n  organizations: Organization[];\n  /**\n   * The HTML element ID where the portal should be mounted\n   */\n  portalId?: string;\n  /**\n   * Custom render function for the error state.\n   */\n  renderError?: (error: string) => ReactElement;\n  /**\n   * Custom render function for the loading state.\n   */\n  renderLoading?: () => ReactElement;\n  /**\n   * Custom render function for the organization item.\n   */\n  renderOrganization?: (organization: Organization, isSelected: boolean) => ReactElement;\n  /**\n   * Whether to show the member count.\n   */\n  showMemberCount?: boolean;\n  /**\n   * Whether to show the role badge.\n   */\n  showRole?: boolean;\n  /**\n   * Show organization name next to avatar in the trigger button\n   */\n  showTriggerLabel?: boolean;\n  /**\n   * Custom styles for the component.\n   */\n  style?: React.CSSProperties;\n}\n\n/**\n * BaseOrganizationSwitcher component displays an organization selector with a dropdown menu.\n * When clicked, it shows a popover with available organizations to switch between.\n * This component serves as the base for framework-specific implementations.\n */\nexport const BaseOrganizationSwitcher: FC<BaseOrganizationSwitcherProps> = ({\n  organizations,\n  currentOrganization,\n  loading = false,\n  error,\n  onOrganizationSwitch,\n  onManageProfile,\n  className = '',\n  style,\n  renderOrganization,\n  renderLoading,\n  renderError,\n  showRole = false,\n  showMemberCount = true,\n  menuItems = [],\n  portalId = 'asgardeo-organization-switcher',\n  showTriggerLabel = true,\n  avatarSize = 24,\n  fallback = null,\n}): ReactElement => {\n  const styles = useStyles();\n  const [isOpen, setIsOpen] = useState(false);\n  const [hoveredItemIndex, setHoveredItemIndex] = useState<number | null>(null);\n  const {theme, colorScheme} = useTheme();\n  const {t} = useTranslation();\n\n  const {refs, floatingStyles, context} = useFloating({\n    open: isOpen,\n    onOpenChange: setIsOpen,\n    placement: 'bottom-end',\n    middleware: [offset(5), flip({fallbackAxisSideDirection: 'end'}), shift({padding: 5})],\n    whileElementsMounted: autoUpdate,\n  });\n\n  const click = useClick(context);\n  const dismiss = useDismiss(context);\n  const role = useRole(context);\n\n  const {getReferenceProps, getFloatingProps} = useInteractions([click, dismiss, role]);\n\n  if (fallback && !currentOrganization && !loading && organizations.length === 0) {\n    return fallback;\n  }\n\n  const handleOrganizationSwitch = (organization: Organization): void => {\n    onOrganizationSwitch(organization);\n    setIsOpen(false);\n  };\n\n  const handleMenuItemClick = (item: MenuItem): void => {\n    if (item.onClick) {\n      item.onClick();\n    }\n    setIsOpen(false);\n  };\n\n  // Filter out current organization from switchable list\n  const switchableOrganizations: Organization[] = organizations.filter(\n    (org: Organization): boolean => org.id !== currentOrganization?.id,\n  );\n\n  const defaultRenderOrganization = (organization: Organization, isSelected: boolean) => (\n    <>\n      <Avatar\n        variant=\"square\"\n        imageUrl={organization.avatar}\n        name={organization.name}\n        size={avatarSize * 1.25}\n        alt={`${organization.name} avatar`}\n      />\n      <div style={styles.organizationInfo}>\n        <Typography variant=\"body2\" fontWeight=\"medium\" style={styles.organizationName}>\n          {organization.name}\n        </Typography>\n        <div style={styles.organizationMeta}>\n          {showMemberCount && organization.memberCount !== undefined && (\n            <span>\n              {organization.memberCount}{' '}\n              {organization.memberCount === 1 ? t('organization.switcher.member') : t('organization.switcher.members')}\n            </span>\n          )}\n          {showRole && organization.role && showMemberCount && organization.memberCount !== undefined && (\n            <span> \u2022 </span>\n          )}\n          {showRole && organization.role && <span style={styles.roleCapitalized}>{organization.role}</span>}\n        </div>\n      </div>\n      {isSelected && <Check width=\"16\" height=\"16\" color={theme.vars.colors.text.primary} />}\n    </>\n  );\n\n  const defaultRenderLoading = () => (\n    <div style={styles.loadingContainer}>\n      <Typography variant=\"caption\" style={styles.loadingText}>\n        {t('organization.switcher.loading.organizations')}\n      </Typography>\n    </div>\n  );\n\n  const defaultRenderError = (errorMessage: string) => (\n    <div style={styles.errorContainer}>\n      <Typography variant=\"caption\" style={styles.errorText}>\n        {errorMessage}\n      </Typography>\n    </div>\n  );\n\n  return (\n    <div className={clsx(withVendorCSSClassPrefix('organization-switcher'), className)} style={style}>\n      <Button\n        ref={refs.setReference}\n        className={withVendorCSSClassPrefix('organization-switcher__trigger')}\n        style={styles.trigger}\n        color=\"tertiary\"\n        variant=\"outline\"\n        size=\"medium\"\n        {...getReferenceProps()}\n      >\n        {currentOrganization ? (\n          <>\n            <Avatar\n              variant=\"square\"\n              imageUrl={currentOrganization.avatar}\n              name={currentOrganization.name}\n              size={avatarSize}\n              alt={`${currentOrganization.name} avatar`}\n            />\n            {showTriggerLabel && (\n              <Typography\n                variant=\"body2\"\n                className={withVendorCSSClassPrefix('organization-switcher__trigger-label')}\n                style={styles.orgName}\n              >\n                {currentOrganization.name}\n              </Typography>\n            )}\n          </>\n        ) : (\n          <>\n            <Building width={avatarSize} height={avatarSize} />\n            {showTriggerLabel && (\n              <Typography\n                variant=\"body2\"\n                className={withVendorCSSClassPrefix('organization-switcher__trigger-label')}\n                style={styles.orgName}\n              >\n                {t('organization.switcher.select.organization')}\n              </Typography>\n            )}\n          </>\n        )}\n        <ChevronDown width=\"16\" height=\"16\" />\n      </Button>\n\n      {isOpen && (\n        <FloatingPortal id={portalId}>\n          <FloatingFocusManager context={context} modal={false}>\n            <div\n              ref={refs.setFloating}\n              className={withVendorCSSClassPrefix('organization-switcher__content')}\n              style={{...floatingStyles, ...styles.dropdownContent}}\n              {...getFloatingProps()}\n            >\n              {/* Header - Current Organization */}\n              {currentOrganization && (\n                <div\n                  className={withVendorCSSClassPrefix('organization-switcher__header')}\n                  style={styles.dropdownHeader}\n                >\n                  <Avatar\n                    variant=\"square\"\n                    imageUrl={currentOrganization.avatar}\n                    name={currentOrganization.name}\n                    size={avatarSize * 1.5}\n                    alt={`${currentOrganization.name} avatar`}\n                  />\n                  <div\n                    className={withVendorCSSClassPrefix('organization-switcher__header-info')}\n                    style={styles.organizationInfo}\n                  >\n                    <Typography\n                      noWrap\n                      className={withVendorCSSClassPrefix('organization-switcher__header-name')}\n                      variant=\"body1\"\n                      fontWeight=\"medium\"\n                      style={styles.organizationName}\n                    >\n                      {currentOrganization.name}\n                    </Typography>\n                    <div style={styles.organizationMeta}>\n                      {showMemberCount && currentOrganization.memberCount !== undefined && (\n                        <Typography\n                          noWrap\n                          className={withVendorCSSClassPrefix('organization-switcher__header-meta')}\n                          variant=\"caption\"\n                          color=\"secondary\"\n                        >\n                          {currentOrganization.memberCount}{' '}\n                          {currentOrganization.memberCount === 1\n                            ? t('organization.switcher.member')\n                            : t('organization.switcher.members')}\n                          {showRole && currentOrganization.role && <span> \u2022 {currentOrganization.role}</span>}\n                        </Typography>\n                      )}\n                      {showRole &&\n                        currentOrganization.role &&\n                        (!showMemberCount || currentOrganization.memberCount === undefined) && (\n                          <Typography\n                            noWrap\n                            className={withVendorCSSClassPrefix('organization-switcher__header-role')}\n                            variant=\"caption\"\n                            color=\"secondary\"\n                            style={styles.roleCapitalized}\n                          >\n                            {currentOrganization.role}\n                          </Typography>\n                        )}\n                    </div>\n                  </div>\n                  {onManageProfile && (\n                    <Button\n                      onClick={onManageProfile}\n                      color=\"tertiary\"\n                      variant=\"outline\"\n                      size=\"small\"\n                      aria-label=\"Manage Organization Profile\"\n                      style={styles.manageButton}\n                      endIcon={\n                        <svg\n                          width=\"16\"\n                          height=\"16\"\n                          viewBox=\"0 0 24 24\"\n                          fill=\"none\"\n                          stroke=\"currentColor\"\n                          strokeWidth=\"2\"\n                          strokeLinecap=\"round\"\n                          strokeLinejoin=\"round\"\n                        >\n                          <circle cx=\"12\" cy=\"12\" r=\"3\" />\n                          <path d=\"M19.4 15a1.65 1.65 0 0 0 .33 1.82l.06.06a2 2 0 0 1 0 2.83 2 2 0 0 1-2.83 0l-.06-.06a1.65 1.65 0 0 0-1.82-.33 1.65 1.65 0 0 0-1 1.51V21a2 2 0 0 1-2 2 2 2 0 0 1-2-2v-.09A1.65 1.65 0 0 0 9 19.4a1.65 1.65 0 0 0-1.82.33l-.06.06a2 2 0 0 1-2.83 0 2 2 0 0 1 0-2.83l.06-.06a1.65 1.65 0 0 0 .33-1.82 1.65 1.65 0 0 0-1.51-1H3a2 2 0 0 1-2-2 2 2 0 0 1 2-2h.09A1.65 1.65 0 0 0 4.6 9a1.65 1.65 0 0 0-.33-1.82l-.06-.06a2 2 0 0 1 0-2.83 2 2 0 0 1 2.83 0l.06.06a1.65 1.65 0 0 0 1.82.33H9a1.65 1.65 0 0 0 1 1.51V3a2 2 0 0 1 2-2 2 2 0 0 1 2 2v.09a1.65 1.65 0 0 0 1 1.51 1.65 1.65 0 0 0 1.82-.33l.06-.06a2 2 0 0 1 2.83 0 2 2 0 0 1 0 2.83l-.06.06a1.65 1.65 0 0 0-.33 1.82V9a1.65 1.65 0 0 0 1.51 1H21a2 2 0 0 1 2 2 2 2 0 0 1-2 2h-.09a1.65 1.65 0 0 0-1.51 1z\" />\n                        </svg>\n                      }\n                    >\n                      {t('organization.switcher.manage.button')}\n                    </Button>\n                  )}\n                </div>\n              )}\n\n              {/* Section Header for Other Organizations */}\n              {organizations.length > 1 && (\n                <div\n                  style={{\n                    ...styles.dropdownHeader,\n                    ...styles.sectionHeaderContainer,\n                    borderTop: currentOrganization ? `1px solid ${theme.vars.colors.border}` : 'none',\n                  }}\n                >\n                  <Typography variant=\"caption\" fontWeight={600} style={styles.sectionHeader}>\n                    {t('organization.switcher.switch.organization')}\n                  </Typography>\n                </div>\n              )}\n\n              {/* Content */}\n              <div className={withVendorCSSClassPrefix('organization-switcher__menu')} style={styles.dropdownMenu}>\n                {loading ? (\n                  renderLoading ? (\n                    renderLoading()\n                  ) : (\n                    defaultRenderLoading()\n                  )\n                ) : error ? (\n                  renderError ? (\n                    renderError(error)\n                  ) : (\n                    defaultRenderError(error)\n                  )\n                ) : (\n                  <>\n                    {switchableOrganizations.map((organization: Organization): ReactElement => {\n                      const isSelected: boolean = false; // Never selected since we exclude current org\n                      return (\n                        <Button\n                          key={organization.id}\n                          onClick={(): void => handleOrganizationSwitch(organization)}\n                          className={withVendorCSSClassPrefix('organization-switcher__menu-item')}\n                          color=\"tertiary\"\n                          variant=\"text\"\n                          size=\"small\"\n                          style={{\n                            ...styles.menuItem,\n                            backgroundColor:\n                              hoveredItemIndex === switchableOrganizations.indexOf(organization)\n                                ? theme.vars.colors.action?.hover\n                                : 'transparent',\n                          }}\n                          onMouseEnter={(): void => setHoveredItemIndex(switchableOrganizations.indexOf(organization))}\n                          onMouseLeave={(): void => setHoveredItemIndex(null)}\n                        >\n                          {renderOrganization\n                            ? renderOrganization(organization, isSelected)\n                            : defaultRenderOrganization(organization, isSelected)}\n                        </Button>\n                      );\n                    })}\n\n                    {/* Menu Items */}\n                    {menuItems.length > 0 && (\n                      <>\n                        <div\n                          className={withVendorCSSClassPrefix('organization-switcher__menu-divider')}\n                          style={styles.divider}\n                        />\n                        {menuItems.map(\n                          (item, index: number): ReactElement => (\n                            <div key={index}>\n                              {item.href ? (\n                                <a\n                                  href={item.href}\n                                  style={{\n                                    ...styles.menuItem,\n                                    backgroundColor:\n                                      hoveredItemIndex === switchableOrganizations.length + index\n                                        ? theme.vars.colors.action?.hover\n                                        : 'transparent',\n                                  }}\n                                  className={withVendorCSSClassPrefix('organization-switcher__menu-item')}\n                                  onMouseEnter={(): void => setHoveredItemIndex(switchableOrganizations.length + index)}\n                                  onMouseLeave={(): void => setHoveredItemIndex(null)}\n                                  onFocus={(): void => setHoveredItemIndex(switchableOrganizations.length + index)}\n                                  onBlur={(): void => setHoveredItemIndex(null)}\n                                >\n                                  {item.icon}\n                                  <span>{item.label}</span>\n                                </a>\n                              ) : (\n                                <Button\n                                  onClick={(): void => handleMenuItemClick(item)}\n                                  style={{\n                                    ...styles.menuItem,\n                                    backgroundColor:\n                                      hoveredItemIndex === switchableOrganizations.length + index\n                                        ? theme.vars.colors.action?.hover\n                                        : 'transparent',\n                                  }}\n                                  className={withVendorCSSClassPrefix('organization-switcher__menu-item')}\n                                  color=\"tertiary\"\n                                  variant=\"text\"\n                                  size=\"small\"\n                                  startIcon={item.icon}\n                                  onMouseEnter={(): void => setHoveredItemIndex(switchableOrganizations.length + index)}\n                                  onMouseLeave={(): void => setHoveredItemIndex(null)}\n                                >\n                                  {item.label}\n                                </Button>\n                              )}\n                            </div>\n                          ),\n                        )}\n                      </>\n                    )}\n                  </>\n                )}\n              </div>\n            </div>\n          </FloatingFocusManager>\n        </FloatingPortal>\n      )}\n    </div>\n  );\n};\n\nexport default BaseOrganizationSwitcher;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\n\nexport interface BuildingProps {\n  /**\n   * Color of the icon.\n   */\n  color?: string;\n  /**\n   * Height of the icon.\n   */\n  height?: number | string;\n  /**\n   * Width of the icon.\n   */\n  width?: number | string;\n}\n\n/**\n * Building Icon component.\n *\n * @param props - Props injected to the component.\n * @returns Building Icon component.\n */\nconst Building: FC<BuildingProps> = ({color = 'currentColor', height = 24, width = 24}: BuildingProps) => (\n  <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path\n      d=\"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\"\n      stroke={color}\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    />\n    <path d=\"M6 12h4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M6 8h4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M14 8h4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M14 12h4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M6 18h4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n    <path d=\"M14 18h4\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </svg>\n);\n\nBuilding.displayName = 'Building';\n\nexport default Building;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\n\nexport interface CheckProps {\n  /**\n   * Color of the icon.\n   */\n  color?: string;\n  /**\n   * Height of the icon.\n   */\n  height?: number | string;\n  /**\n   * Width of the icon.\n   */\n  width?: number | string;\n}\n\n/**\n * Check Icon component.\n *\n * @param props - Props injected to the component.\n * @returns Check Icon component.\n */\nconst Check: FC<CheckProps> = ({color = 'currentColor', height = 24, width = 24}: CheckProps) => (\n  <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"M20 6 9 17l-5-5\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </svg>\n);\n\nCheck.displayName = 'Check';\n\nexport default Check;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\n\nexport interface ChevronDownProps {\n  /**\n   * Color of the icon.\n   */\n  color?: string;\n  /**\n   * Height of the icon.\n   */\n  height?: number | string;\n  /**\n   * Width of the icon.\n   */\n  width?: number | string;\n}\n\n/**\n * ChevronDown Icon component.\n *\n * @param props - Props injected to the component.\n * @returns ChevronDown Icon component.\n */\nconst ChevronDown: FC<ChevronDownProps> = ({color = 'currentColor', height = 24, width = 24}: ChevronDownProps) => (\n  <svg width={width} height={height} viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n    <path d=\"m6 9 6 6 6-6\" stroke={color} strokeWidth=\"2\" strokeLinecap=\"round\" strokeLinejoin=\"round\" />\n  </svg>\n);\n\nChevronDown.displayName = 'ChevronDown';\n\nexport default ChevronDown;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, ReactElement, useState} from 'react';\n\nimport BaseOrganizationSwitcher, {BaseOrganizationSwitcherProps, Organization} from './BaseOrganizationSwitcher';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useOrganization from '../../../contexts/Organization/useOrganization';\nimport useTranslation from '../../../hooks/useTranslation';\nimport {CreateOrganization} from '../CreateOrganization/CreateOrganization';\nimport OrganizationProfile from '../OrganizationProfile/OrganizationProfile';\nimport OrganizationList from '../OrganizationList/OrganizationList';\nimport BuildingAlt from '../../primitives/Icons/BuildingAlt';\n\n/**\n * Props interface for the OrganizationSwitcher component.\n * Makes organizations optional since they'll be retrieved from OrganizationContext.\n */\nexport interface OrganizationSwitcherProps\n  extends Omit<BaseOrganizationSwitcherProps, 'organizations' | 'currentOrganization' | 'onOrganizationSwitch'> {\n  /**\n   * Optional override for current organization (will use context if not provided)\n   */\n  currentOrganization?: Organization;\n  /**\n   * Fallback element to render when the user is not signed in.\n   */\n  fallback?: ReactElement;\n  /**\n   * Optional callback for organization switch (will use context if not provided)\n   */\n  onOrganizationSwitch?: (organization: Organization) => Promise<void> | void;\n  /**\n   * Optional override for organizations list (will use context if not provided)\n   */\n  organizations?: Organization[];\n}\n\n/**\n * OrganizationSwitcher component that provides organization switching functionality.\n * This component automatically retrieves organizations from the OrganizationContext.\n * You can also override the organizations, currentOrganization, and onOrganizationSwitch\n * by passing them as props.\n *\n * @example\n * ```tsx\n * import { OrganizationSwitcher } from '@asgardeo/react';\n *\n * // Basic usage - uses OrganizationContext\n * <OrganizationSwitcher />\n *\n * // With custom organization switch handler\n * <OrganizationSwitcher\n *   onOrganizationSwitch={(org) => {\n *     console.log('Switching to:', org.name);\n *     // Custom logic here\n *   }}\n * />\n *\n * // With fallback for unauthenticated users\n * <OrganizationSwitcher\n *   fallback={<div>Please sign in to view organizations</div>}\n * />\n * ```\n */\nexport const OrganizationSwitcher: FC<OrganizationSwitcherProps> = ({\n  currentOrganization: propCurrentOrganization,\n  fallback = null,\n  onOrganizationSwitch: propOnOrganizationSwitch,\n  organizations: propOrganizations,\n  ...props\n}: OrganizationSwitcherProps): ReactElement => {\n  const {isSignedIn} = useAsgardeo();\n  const {\n    currentOrganization: contextCurrentOrganization,\n    myOrganizations: contextOrganizations,\n    switchOrganization,\n    isLoading,\n    error,\n  } = useOrganization();\n  const [isCreateOrgOpen, setIsCreateOrgOpen] = useState(false);\n  const [isProfileOpen, setIsProfileOpen] = useState(false);\n  const [isOrganizationListOpen, setIsOrganizationListOpen] = useState(false);\n  const {t} = useTranslation();\n\n  if (!isSignedIn && fallback) {\n    return fallback;\n  }\n\n  if (!isSignedIn) {\n    return <></>;\n  }\n\n  const organizations: Organization[] = propOrganizations || contextOrganizations || [];\n  const currentOrganization: Organization | null = propCurrentOrganization || contextCurrentOrganization;\n  const onOrganizationSwitch: (organization: Organization) => Promise<void> | void =\n    propOnOrganizationSwitch || switchOrganization;\n\n  const handleManageOrganizations = (): void => {\n    setIsOrganizationListOpen(true);\n  };\n\n  const handleManageOrganization = (): void => {\n    setIsProfileOpen(true);\n  };\n\n  const defaultMenuItems: Array<{icon?: ReactElement; label: string; onClick: () => void}> = [];\n\n  if (currentOrganization) {\n    defaultMenuItems.push({\n      icon: <BuildingAlt />,\n      label: t('organization.switcher.manage.organizations'),\n      onClick: handleManageOrganizations,\n    });\n  }\n\n  defaultMenuItems.push({\n    icon: (\n      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n        <path d=\"M12 5v14m-7-7h14\" />\n      </svg>\n    ),\n    label: t('organization.switcher.create.organization'),\n    onClick: (): void => setIsCreateOrgOpen(true),\n  });\n\n  const menuItems = props.menuItems ? [...defaultMenuItems, ...props.menuItems] : defaultMenuItems;\n\n  return (\n    <>\n      <BaseOrganizationSwitcher\n        organizations={organizations}\n        currentOrganization={currentOrganization}\n        onOrganizationSwitch={onOrganizationSwitch}\n        loading={isLoading}\n        error={error}\n        menuItems={menuItems}\n        onManageProfile={handleManageOrganization}\n        {...props}\n      />\n      <CreateOrganization\n        mode=\"popup\"\n        open={isCreateOrgOpen}\n        onOpenChange={setIsCreateOrgOpen}\n        onSuccess={(org: Organization) => {\n          if (org && onOrganizationSwitch) {\n            onOrganizationSwitch(org);\n          }\n          setIsCreateOrgOpen(false);\n        }}\n      />\n      {currentOrganization && (\n        <OrganizationProfile\n          organizationId={currentOrganization.id}\n          mode=\"popup\"\n          open={isProfileOpen}\n          onOpenChange={setIsProfileOpen}\n          cardLayout={true}\n          loadingFallback={<div>{t('organization.profile.loading')}</div>}\n          errorFallback={<div>{t('organization.profile.error')}</div>}\n        />\n      )}\n      <OrganizationList\n        mode=\"popup\"\n        open={isOrganizationListOpen}\n        onOpenChange={setIsOrganizationListOpen}\n        title={t('organization.switcher.manage.organizations')}\n        onOrganizationSelect={(organization: Organization) => {\n          if (onOrganizationSwitch) {\n            onOrganizationSwitch(organization);\n          }\n          setIsOrganizationListOpen(false);\n        }}\n      />\n    </>\n  );\n};\n\nexport default OrganizationSwitcher;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, ReactElement, useState} from 'react';\n\nimport {BaseCreateOrganization, BaseCreateOrganizationProps} from './BaseCreateOrganization';\nimport {CreateOrganizationPayload} from '@asgardeo/browser';\nimport createOrganization from '../../../api/createOrganization';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useOrganization from '../../../contexts/Organization/useOrganization';\n\n/**\n * Props interface for the CreateOrganization component.\n */\nexport interface CreateOrganizationProps extends Omit<BaseCreateOrganizationProps, 'onSubmit' | 'loading' | 'error'> {\n  /**\n   * Fallback element to render when the user is not signed in.\n   */\n  fallback?: ReactElement;\n  /**\n   * Custom organization creation handler (will use default API if not provided).\n   */\n  onCreateOrganization?: (payload: CreateOrganizationPayload) => Promise<any>;\n}\n\n/**\n * CreateOrganization component that provides organization creation functionality.\n * This component automatically integrates with the Asgardeo and Organization contexts.\n *\n * @example\n * ```tsx\n * import { CreateOrganization } from '@asgardeo/react';\n *\n * // Basic usage - uses default API and contexts\n * <CreateOrganization\n *   onSuccess={(org) => console.log('Created:', org)}\n *   onCancel={() => navigate('/organizations')}\n * />\n *\n * // With custom organization creation handler\n * <CreateOrganization\n *   onCreateOrganization={async (payload) => {\n *     const result = await myCustomAPI.createOrganization(payload);\n *     return result;\n *   }}\n *   onSuccess={(org) => {\n *     console.log('Organization created:', org.name);\n *     // Custom success logic here\n *   }}\n * />\n *\n * // With fallback for unauthenticated users\n * <CreateOrganization\n *   fallback={<div>Please sign in to create an organization</div>}\n * />\n * ```\n */\nexport const CreateOrganization: FC<CreateOrganizationProps> = ({\n  onCreateOrganization,\n  fallback = null,\n  onSuccess,\n  defaultParentId,\n  ...props\n}: CreateOrganizationProps): ReactElement => {\n  const {isSignedIn, baseUrl} = useAsgardeo();\n  const {currentOrganization, revalidateMyOrganizations} = useOrganization();\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState<string | null>(null);\n\n  // Don't render if not authenticated\n  if (!isSignedIn && fallback) {\n    return fallback;\n  }\n\n  if (!isSignedIn) {\n    return <></>;\n  }\n\n  // Use current organization as parent if no defaultParentId provided\n  const parentId: string = defaultParentId || currentOrganization?.id || '';\n\n  const handleSubmit = async (payload: CreateOrganizationPayload): Promise<void> => {\n    setLoading(true);\n    setError(null);\n\n    try {\n      let result: any;\n\n      if (onCreateOrganization) {\n        // Use the provided custom creation function\n        result = await onCreateOrganization(payload);\n      } else {\n        // Use the default API\n        if (!baseUrl) {\n          throw new Error('Base URL is required for organization creation');\n        }\n        result = await createOrganization({\n          baseUrl,\n          payload: {\n            ...payload,\n            parentId,\n          },\n        });\n      }\n\n      // Refresh organizations list to include the new organization\n      await revalidateMyOrganizations();\n\n      // Call success callback if provided\n      if (onSuccess) {\n        onSuccess(result);\n      }\n    } catch (createError) {\n      const errorMessage: string = createError instanceof Error ? createError.message : 'Failed to create organization';\n      setError(errorMessage);\n      throw createError; // Re-throw to allow form to handle it\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  return (\n    <BaseCreateOrganization\n      onSubmit={handleSubmit}\n      loading={loading}\n      error={error}\n      defaultParentId={parentId}\n      onSuccess={onSuccess}\n      {...props}\n    />\n  );\n};\n\nexport default CreateOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix, CreateOrganizationPayload} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {ChangeEvent, CSSProperties, FC, ReactElement, ReactNode, useMemo, useState} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport useTranslation from '../../../hooks/useTranslation';\nimport Alert from '../../primitives/Alert/Alert';\nimport Button from '../../primitives/Button/Button';\nimport {Dialog, DialogContent, DialogHeading} from '../../primitives/Popover/Popover';\nimport FormControl from '../../primitives/FormControl/FormControl';\nimport InputLabel from '../../primitives/InputLabel/InputLabel';\nimport TextField from '../../primitives/TextField/TextField';\nimport Typography from '../../primitives/Typography/Typography';\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      root: {\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n        minWidth: '600px',\n        margin: '0 auto',\n      } as CSSProperties,\n      card: {\n        background: theme.vars.colors.background.surface,\n        borderRadius: theme.vars.borderRadius.large,\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n      } as CSSProperties,\n      content: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      form: {\n        display: 'flex',\n        flexDirection: 'column',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n        width: '100%',\n      } as CSSProperties,\n      header: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: `calc(${theme.vars.spacing.unit} * 1.5)`,\n        marginBottom: `calc(${theme.vars.spacing.unit} * 1.5)`,\n      } as CSSProperties,\n      field: {\n        display: 'flex',\n        alignItems: 'center',\n        padding: `${theme.vars.spacing.unit} 0`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n        minHeight: '32px',\n      } as CSSProperties,\n      textarea: {\n        width: '100%',\n        padding: `${theme.vars.spacing.unit} calc(${theme.vars.spacing.unit} * 1.5)`,\n        border: `1px solid ${theme.vars.colors.border}`,\n        borderRadius: theme.vars.borderRadius.medium,\n        fontSize: theme.vars.typography.fontSizes.md,\n        color: theme.vars.colors.text.primary,\n        backgroundColor: theme.vars.colors.background.surface,\n        fontFamily: 'inherit',\n        minHeight: '80px',\n        resize: 'vertical',\n        outline: 'none',\n        '&:focus': {\n          borderColor: theme.vars.colors.primary.main,\n          boxShadow: `0 0 0 2px ${theme.vars.colors.primary.main}20`,\n        },\n        '&:disabled': {\n          backgroundColor: theme.vars.colors.background.disabled,\n          color: theme.vars.colors.text.secondary,\n          cursor: 'not-allowed',\n        },\n      } as CSSProperties,\n      avatarContainer: {\n        alignItems: 'flex-start',\n        display: 'flex',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n        marginBottom: theme.vars.spacing.unit,\n      } as CSSProperties,\n      actions: {\n        display: 'flex',\n        gap: theme.vars.spacing.unit,\n        justifyContent: 'flex-end',\n        paddingTop: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      infoContainer: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: theme.vars.spacing.unit,\n      } as CSSProperties,\n      value: {\n        color: theme.vars.colors.text.primary,\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        overflow: 'hidden',\n        minHeight: '32px',\n        lineHeight: '32px',\n      } as CSSProperties,\n      popup: {\n        padding: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\n/**\n * Interface for organization form data.\n */\nexport interface OrganizationFormData {\n  description: string;\n  handle: string;\n  name: string;\n}\n\n/**\n * Props interface for the BaseCreateOrganization component.\n */\nexport interface BaseCreateOrganizationProps {\n  cardLayout?: boolean;\n  className?: string;\n  defaultParentId?: string;\n  error?: string | null;\n  initialValues?: Partial<OrganizationFormData>;\n  loading?: boolean;\n  mode?: 'inline' | 'popup';\n  onCancel?: () => void;\n  onOpenChange?: (open: boolean) => void;\n  onSubmit?: (payload: CreateOrganizationPayload) => void | Promise<void>;\n  onSuccess?: (organization: any) => void;\n  open?: boolean;\n  renderAdditionalFields?: () => ReactNode;\n  style?: CSSProperties;\n  title?: string;\n}\n\n/**\n * BaseCreateOrganization component provides the core functionality for creating organizations.\n * This component serves as the base for framework-specific implementations.\n */\nexport const BaseCreateOrganization: FC<BaseCreateOrganizationProps> = ({\n  cardLayout = true,\n  className = '',\n  defaultParentId = '',\n  error,\n  initialValues = {},\n  loading = false,\n  mode = 'inline',\n  onCancel,\n  onOpenChange,\n  onSubmit,\n  onSuccess,\n  open = false,\n  renderAdditionalFields,\n  style,\n  title = 'Create Organization',\n}): ReactElement => {\n  const styles = useStyles();\n  const {theme} = useTheme();\n  const {t} = useTranslation();\n  const [formData, setFormData] = useState<OrganizationFormData>({\n    description: '',\n    handle: '',\n    name: '',\n    ...initialValues,\n  });\n  const [formErrors, setFormErrors] = useState<Partial<OrganizationFormData> & {avatar?: string}>({});\n\n  const validateForm = (): boolean => {\n    const errors: Partial<OrganizationFormData> = {};\n\n    if (!formData.name.trim()) {\n      errors.name = 'Organization name is required';\n    }\n\n    if (!formData.handle.trim()) {\n      errors.handle = 'Organization handle is required';\n    } else if (!/^[a-z0-9-]+$/.test(formData.handle)) {\n      errors.handle = 'Handle can only contain lowercase letters, numbers, and hyphens';\n    }\n\n    if (!formData.description.trim()) {\n      errors.description = 'Organization description is required';\n    }\n\n    setFormErrors(errors);\n    return Object.keys(errors).length === 0;\n  };\n\n  const handleInputChange = (field: keyof OrganizationFormData, value: string): void => {\n    setFormData(prev => ({\n      ...prev,\n      [field]: value,\n    }));\n\n    // Clear error when user starts typing\n    if (formErrors[field]) {\n      setFormErrors(prev => ({\n        ...prev,\n        [field]: undefined,\n      }));\n    }\n  };\n\n  const handleNameChange = (value: string): void => {\n    handleInputChange('name', value);\n\n    // Auto-generate handle from name if handle is empty or matches previous auto-generated value\n    if (!formData.handle || formData.handle === generateHandleFromName(formData.name)) {\n      const newHandle = generateHandleFromName(value);\n      handleInputChange('handle', newHandle);\n    }\n  };\n\n  const generateHandleFromName = (name: string): string => {\n    return name\n      .toLowerCase()\n      .replace(/[^a-z0-9\\s-]/g, '') // Remove special characters except spaces and hyphens\n      .replace(/\\s+/g, '-') // Replace spaces with hyphens\n      .replace(/-+/g, '-') // Replace multiple hyphens with single hyphen\n      .replace(/^-|-$/g, ''); // Remove leading/trailing hyphens\n  };\n\n  const handleSubmit = async (e: React.FormEvent): Promise<void> => {\n    e.preventDefault();\n\n    if (!validateForm() || loading) {\n      return;\n    }\n\n    const payload: CreateOrganizationPayload = {\n      description: formData.description.trim(),\n      orgHandle: formData.handle.trim(),\n      name: formData.name.trim(),\n      parentId: defaultParentId,\n      type: 'TENANT',\n    };\n\n    try {\n      await onSubmit?.(payload);\n      if (onSuccess) {\n        onSuccess(payload);\n      }\n    } catch (submitError) {\n      // Error handling is done by parent component\n      console.error('Form submission error:', submitError);\n    }\n  };\n\n  const containerStyle = {\n    ...styles.root,\n    ...(cardLayout ? styles.card : {}),\n  };\n\n  const createOrganizationContent = (\n    <div\n      className={clsx(withVendorCSSClassPrefix('create-organization'), className)}\n      style={{...containerStyle, ...style}}\n    >\n      <div className={withVendorCSSClassPrefix('create-organization__content')} style={styles.content}>\n        <form\n          id=\"create-organization-form\"\n          className={withVendorCSSClassPrefix('create-organization__form')}\n          style={styles.form}\n          onSubmit={handleSubmit}\n        >\n          {/* Error Alert */}\n          {error && (\n            <Alert variant=\"error\" style={{marginBottom: `calc(${theme.vars.spacing.unit} * 2)`}}>\n              <Alert.Title>Error</Alert.Title>\n              <Alert.Description>{error}</Alert.Description>\n            </Alert>\n          )}\n\n          {/* Organization Name */}\n          <div className={withVendorCSSClassPrefix('create-organization__field-group')}>\n            <TextField\n              label={`${t('organization.create.name.label')}`}\n              placeholder={t('organization.create.name.placeholder')}\n              value={formData.name}\n              onChange={(e: ChangeEvent<HTMLInputElement>) => handleNameChange(e.target.value)}\n              disabled={loading}\n              required\n              error={formErrors.name}\n              className={withVendorCSSClassPrefix('create-organization__input')}\n            />\n          </div>\n\n          {/* Organization Handle */}\n          <div className={withVendorCSSClassPrefix('create-organization__field-group')}>\n            <TextField\n              label={`${t('organization.create.handle.label') || 'Organization Handle'}`}\n              placeholder={t('organization.create.handle.placeholder') || 'my-organization'}\n              value={formData.handle}\n              onChange={(e: ChangeEvent<HTMLInputElement>) => handleInputChange('handle', e.target.value)}\n              disabled={loading}\n              required\n              error={formErrors.handle}\n              helperText=\"This will be your organization's unique identifier. Only lowercase letters, numbers, and hyphens are allowed.\"\n              className={withVendorCSSClassPrefix('create-organization__input')}\n            />\n          </div>\n\n          {/* Organization Description */}\n          <div className={withVendorCSSClassPrefix('create-organization__field-group')}>\n            <FormControl error={formErrors.description}>\n              <InputLabel required>{t('organization.create.description.label')}</InputLabel>\n              <textarea\n                className={withVendorCSSClassPrefix('create-organization__textarea')}\n                style={{\n                  ...styles.textarea,\n                  borderColor: formErrors.description ? theme.vars.colors.error.main : theme.vars.colors.border,\n                }}\n                placeholder={t('organization.create.description.placeholder')}\n                value={formData.description}\n                onChange={(e: ChangeEvent<HTMLTextAreaElement>) => handleInputChange('description', e.target.value)}\n                disabled={loading}\n                required\n              />\n            </FormControl>\n          </div>\n\n          {/* Additional Fields */}\n          {renderAdditionalFields && renderAdditionalFields()}\n        </form>\n\n        {/* Actions */}\n        <div className={withVendorCSSClassPrefix('create-organization__actions')} style={styles.actions}>\n          {onCancel && (\n            <Button type=\"button\" variant=\"outline\" onClick={onCancel} disabled={loading}>\n              {t('organization.create.cancel')}\n            </Button>\n          )}\n          <Button type=\"submit\" variant=\"solid\" color=\"primary\" disabled={loading} form=\"create-organization-form\">\n            {loading ? t('organization.create.creating') : t('organization.create.button')}\n          </Button>\n        </div>\n      </div>\n    </div>\n  );\n\n  if (mode === 'popup') {\n    return (\n      <Dialog open={open} onOpenChange={onOpenChange}>\n        <DialogContent>\n          <DialogHeading>{title}</DialogHeading>\n          <div style={{padding: `calc(${theme.vars.spacing.unit} * 2)`}}>{createOrganizationContent}</div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return createOrganizationContent;\n};\n\nexport default BaseCreateOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  Organization,\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  createOrganization as baseCreateOrganization,\n  CreateOrganizationConfig as BaseCreateOrganizationConfig,\n  CreateOrganizationPayload,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the createOrganization request (React-specific)\n */\nexport interface CreateOrganizationConfig extends Omit<BaseCreateOrganizationConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Creates a new organization.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Configuration object containing baseUrl, payload and optional request config.\n * @returns A promise that resolves with the created organization information.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * try {\n *   const organization = await createOrganization({\n *     baseUrl: \"https://api.asgardeo.io/t/<ORGANIZATION>\",\n *     payload: {\n *       description: \"Share your screens\",\n *       name: \"Team Viewer\",\n *       orgHandle: \"team-viewer\",\n *       parentId: \"f4825104-4948-40d9-ab65-a960eee3e3d5\",\n *       type: \"TENANT\"\n *     }\n *   });\n *   console.log(organization);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to create organization:', error.message);\n *   }\n * }\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * try {\n *   const organization = await createOrganization({\n *     baseUrl: \"https://api.asgardeo.io/t/<ORGANIZATION>\",\n *     payload: {\n *       description: \"Share your screens\",\n *       name: \"Team Viewer\",\n *       orgHandle: \"team-viewer\",\n *       parentId: \"f4825104-4948-40d9-ab65-a960eee3e3d5\",\n *       type: \"TENANT\"\n *     },\n *     fetcher: customFetchFunction\n *   });\n *   console.log(organization);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to create organization:', error.message);\n *   }\n * }\n * ```\n */\nconst createOrganization = async ({fetcher, ...requestConfig}: CreateOrganizationConfig): Promise<Organization> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'POST',\n      headers: config.headers as Record<string, string>,\n      data: config.body ? JSON.parse(config.body as string) : undefined,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseCreateOrganization({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default createOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC, ReactElement, useEffect, useState} from 'react';\nimport BaseOrganizationProfile, {BaseOrganizationProfileProps} from './BaseOrganizationProfile';\nimport {OrganizationDetails} from '@asgardeo/browser';\nimport getOrganization from '../../../api/getOrganization';\nimport updateOrganization, {createPatchOperations} from '../../../api/updateOrganization';\nimport useAsgardeo from '../../../contexts/Asgardeo/useAsgardeo';\nimport useTranslation from '../../../hooks/useTranslation';\n\n/**\n * Props for the OrganizationProfile component.\n * Extends BaseOrganizationProfileProps but makes the organization prop optional\n * since it will be fetched using the organizationId\n */\nexport type OrganizationProfileProps = Omit<BaseOrganizationProfileProps, 'organization' | 'mode'> & {\n  /**\n   * Component to show when there's an error loading organization data.\n   */\n  errorFallback?: ReactElement;\n\n  /**\n   * Component to show while loading organization data.\n   */\n  loadingFallback?: ReactElement;\n\n  /**\n   * Display mode for the component.\n   */\n  mode?: 'default' | 'popup';\n\n  /**\n   * Callback fired when the popup should be closed (only used in popup mode).\n   */\n  onOpenChange?: (open: boolean) => void;\n\n  /**\n   * Callback fired when the organization should be updated.\n   */\n  onUpdate?: (payload: any) => Promise<void>;\n\n  /**\n   * Whether the popup is open (only used in popup mode).\n   */\n  open?: boolean;\n\n  /**\n   * The ID of the organization to fetch and display.\n   */\n  organizationId: string;\n\n  /**\n   * Custom title for the popup dialog (only used in popup mode).\n   */\n  popupTitle?: string;\n};\n\n/**\n * OrganizationProfile component displays organization information in a\n * structured and styled format. It automatically fetches organization details\n * using the provided organization ID and displays them using BaseOrganizationProfile.\n *\n * The component supports editing functionality, allowing users to modify organization\n * fields inline. Updates are automatically synced with the backend via the SCIM2 API.\n *\n * This component is the React-specific implementation that automatically\n * retrieves the organization data from Asgardeo API.\n *\n * @example\n * ```tsx\n * // Basic usage with editing enabled (default)\n * <OrganizationProfile organizationId=\"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\" />\n *\n * // Read-only mode\n * <OrganizationProfile\n *   organizationId=\"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\"\n *   editable={false}\n * />\n *\n * // With card layout and custom fallbacks\n * <OrganizationProfile\n *   organizationId=\"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\"\n *   cardLayout={true}\n *   loadingFallback={<div>Loading organization...</div>}\n *   errorFallback={<div>Failed to load organization</div>}\n *   fallback={<div>No organization data available</div>}\n * />\n *\n * // With custom fields configuration and update callback\n * <OrganizationProfile\n *   organizationId=\"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\"\n *   fields={[\n *     { key: 'id', label: 'Organization ID', editable: false },\n *     { key: 'name', label: 'Organization Name', editable: true },\n *     { key: 'description', label: 'Description', editable: true, render: (value) => value || 'No description' },\n *     { key: 'created', label: 'Created Date', editable: false, render: (value) => new Date(value).toLocaleDateString() },\n *     { key: 'lastModified', label: 'Last Modified Date', editable: false, render: (value) => new Date(value).toLocaleDateString() },\n *     { key: 'attributes', label: 'Custom Attributes', editable: true }\n *   ]}\n *   onUpdate={async (payload) => {\n *     console.log('Organization updated:', payload);\n *     // payload contains the updated field values\n *     // The component automatically converts these to patch operations\n *   }}\n * />\n *\n * // In popup mode\n * <OrganizationProfile\n *   organizationId=\"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\"\n *   mode=\"popup\"\n *   open={isOpen}\n *   onOpenChange={setIsOpen}\n *   popupTitle=\"Edit Organization Profile\"\n * />\n * ```\n */\nconst OrganizationProfile: FC<OrganizationProfileProps> = ({\n  organizationId,\n  mode = 'default',\n  open = false,\n  onOpenChange,\n  onUpdate,\n  popupTitle,\n  loadingFallback = <div>Loading organization...</div>,\n  errorFallback = <div>Failed to load organization data</div>,\n  ...rest\n}: OrganizationProfileProps): ReactElement => {\n  const {baseUrl} = useAsgardeo();\n  const {t} = useTranslation();\n  const [organization, setOrganization] = useState<OrganizationDetails | null>(null);\n  const [loading, setLoading] = useState<boolean>(true);\n  const [error, setError] = useState<boolean>(false);\n\n  const fetchOrganization = async () => {\n    if (!baseUrl || !organizationId) {\n      setLoading(false);\n      setError(true);\n      return;\n    }\n\n    try {\n      setLoading(true);\n      setError(false);\n      const orgData = await getOrganization({\n        baseUrl,\n        organizationId,\n      });\n      setOrganization(orgData);\n    } catch (err) {\n      console.error('Failed to fetch organization:', err);\n      setError(true);\n      setOrganization(null);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    fetchOrganization();\n  }, [baseUrl, organizationId]);\n\n  const handleOrganizationUpdate = async (payload: any): Promise<void> => {\n    if (!baseUrl || !organizationId) return;\n\n    try {\n      // Convert payload to patch operations format\n      const operations = createPatchOperations(payload);\n\n      await updateOrganization({\n        baseUrl,\n        organizationId,\n        operations,\n      });\n      // Refetch organization data after update\n      await fetchOrganization();\n\n      // Call the optional onUpdate callback\n      if (onUpdate) {\n        await onUpdate(payload);\n      }\n    } catch (err) {\n      console.error('Failed to update organization:', err);\n      throw err;\n    }\n  };\n\n  return (\n    <BaseOrganizationProfile\n      organization={organization}\n      onUpdate={handleOrganizationUpdate}\n      mode={mode === 'popup' ? 'popup' : 'inline'}\n      open={open}\n      onOpenChange={onOpenChange}\n      title={popupTitle || t('organization.profile.title')}\n      {...rest}\n    />\n  );\n};\n\nexport default OrganizationProfile;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix, OrganizationDetails} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {FC, ReactElement, useMemo, CSSProperties, useState, useCallback, useRef} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport {Avatar} from '../../primitives/Avatar/Avatar';\nimport Button from '../../primitives/Button/Button';\nimport Checkbox from '../../primitives/Checkbox/Checkbox';\nimport DatePicker from '../../primitives/DatePicker/DatePicker';\nimport KeyValueInput from '../../primitives/KeyValueInput/KeyValueInput';\nimport {Dialog, DialogContent, DialogHeading} from '../../primitives/Popover/Popover';\nimport TextField from '../../primitives/TextField/TextField';\nimport Card from '../../primitives/Card/Card';\n\n/**\n * Formats a date string to a human-readable format\n */\nconst formatDate = (dateString?: string): string => {\n  if (!dateString) return '-';\n  try {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'long',\n      day: 'numeric',\n    });\n  } catch {\n    return dateString;\n  }\n};\n\nexport interface BaseOrganizationProfileProps {\n  /**\n   * Callback fired when the cancel button is clicked (only used in editable mode).\n   */\n  cancelButtonText?: string;\n\n  /**\n   * Whether to display the profile in a card layout.\n   */\n  cardLayout?: boolean;\n\n  /**\n   * CSS class name for styling the component.\n   */\n  className?: string;\n\n  /**\n   * Whether the organization profile is editable.\n   */\n  editable?: boolean;\n\n  /**\n   * Component to render when no organization data is available.\n   */\n  fallback?: ReactElement;\n\n  /**\n   * Array of field configurations to display. Each field specifies what organization data to show.\n   */\n  fields?: Array<{\n    key: keyof OrganizationDetails | 'attributes';\n    label: string;\n    editable?: boolean;\n    render?: (value: any, organization: OrganizationDetails) => React.ReactNode;\n  }>;\n\n  /**\n   * Display mode for the component.\n   */\n  mode?: 'inline' | 'popup';\n\n  /**\n   * Callback fired when a field value changes.\n   */\n  onChange?: (field: string, value: any) => void;\n\n  /**\n   * Callback fired when the popup should be closed (only used in popup mode).\n   */\n  onOpenChange?: (open: boolean) => void;\n\n  /**\n   * Callback fired when the form is submitted (only used in editable mode).\n   */\n  onSubmit?: (data: any) => void;\n\n  /**\n   * Callback fired when the organization should be updated.\n   */\n  onUpdate?: (payload: any) => Promise<void>;\n\n  /**\n   * Whether the popup is open (only used in popup mode).\n   */\n  open?: boolean;\n\n  /**\n   * The organization details to display.\n   */\n  organization?: OrganizationDetails | null;\n\n  /**\n   * Text for the save button (only used in editable mode).\n   */\n  saveButtonText?: string;\n\n  /**\n   * Custom title for the profile.\n   */\n  title?: string;\n}\n\n/**\n * BaseOrganizationProfile component displays organization information in a\n * structured and styled format. It shows organization details such as name,\n * description, status, and other available information with support for inline editing.\n *\n * This is the base component that can be used in any context where you have\n * an organization object available. It provides editing capabilities similar to\n * the UserProfile component, allowing users to modify organization fields directly.\n *\n * @example\n * ```tsx\n * // Basic usage\n * <BaseOrganizationProfile organization={organizationData} />\n *\n * // With editing enabled and update handler\n * <BaseOrganizationProfile\n *   organization={organizationData}\n *   editable={true}\n *   onUpdate={async (payload) => {\n *     await updateOrganizationAPI(orgId, payload);\n *   }}\n * />\n *\n * // With card layout and custom title\n * <BaseOrganizationProfile\n *   organization={organizationData}\n *   cardLayout={true}\n *   title=\"Organization Details\"\n *   fallback={<div>No organization data available</div>}\n * />\n *\n * // With custom fields configuration\n * <BaseOrganizationProfile\n *   organization={organizationData}\n *   fields={[\n *     { key: 'id', label: 'Organization ID', editable: false },\n *     { key: 'name', label: 'Organization Name', editable: true },\n *     { key: 'description', label: 'Description', editable: true, render: (value) => value || 'No description' },\n *     { key: 'created', label: 'Created Date', editable: false, render: (value) => new Date(value).toLocaleDateString() },\n *     { key: 'attributes', label: 'Custom Attributes', editable: true }\n *   ]}\n *   onUpdate={handleUpdate}\n * />\n *\n * // In popup mode\n * <BaseOrganizationProfile\n *   organization={organizationData}\n *   mode=\"popup\"\n *   open={isOpen}\n *   onOpenChange={setIsOpen}\n *   title=\"Edit Organization\"\n * />\n * ```\n * <BaseOrganizationProfile\n *   organization={organizationData}\n *   fields={[\n *     { key: 'id', label: 'Organization ID' },\n *     { key: 'name', label: 'Organization Name' },\n *     { key: 'description', label: 'Description', render: (value) => value || 'No description' },\n *     { key: 'created', label: 'Created Date', render: (value) => new Date(value).toLocaleDateString() },\n *     { key: 'attributes', label: 'Custom Attributes' }\n *   ]}\n * />\n * ```\n */\nconst BaseOrganizationProfile: FC<BaseOrganizationProfileProps> = ({\n  fallback = null,\n  className = '',\n  cardLayout = true,\n  organization,\n  title = 'Organization Profile',\n  mode = 'inline',\n  editable = true,\n  onChange,\n  onOpenChange,\n  onSubmit,\n  onUpdate,\n  open = false,\n  saveButtonText = 'Save Changes',\n  cancelButtonText = 'Cancel',\n  fields = [\n    {\n      key: 'id',\n      label: 'Organization ID',\n      editable: false,\n    },\n    {\n      key: 'name',\n      label: 'Organization Name',\n      editable: true,\n    },\n    {\n      key: 'description',\n      label: 'Organization Description',\n      editable: true,\n      render: value => value || '-',\n    },\n    {\n      key: 'created',\n      label: 'Created Date',\n      editable: false,\n      render: value => formatDate(value),\n    },\n    {\n      key: 'lastModified',\n      label: 'Last Modified Date',\n      editable: false,\n      render: value => formatDate(value),\n    },\n  ],\n}): ReactElement => {\n  const {theme} = useTheme();\n  const [editedOrganization, setEditedOrganization] = useState(organization);\n  const [editingFields, setEditingFields] = useState<Record<string, boolean>>({});\n  const triggerRef = useRef<HTMLButtonElement>(null);\n\n  const PencilIcon = () => (\n    <svg\n      width=\"16\"\n      height=\"16\"\n      viewBox=\"0 0 24 24\"\n      fill=\"none\"\n      stroke=\"currentColor\"\n      strokeWidth=\"2\"\n      strokeLinecap=\"round\"\n      strokeLinejoin=\"round\"\n    >\n      <path d=\"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\" />\n    </svg>\n  );\n\n  const toggleFieldEdit = useCallback((fieldName: string) => {\n    setEditingFields(prev => ({\n      ...prev,\n      [fieldName]: !prev[fieldName],\n    }));\n  }, []);\n\n  const getFieldPlaceholder = useCallback((fieldKey: string): string => {\n    const fieldLabels: Record<string, string> = {\n      name: 'organization name',\n      description: 'organization description',\n      orgHandle: 'organization handle',\n      status: 'organization status',\n      type: 'organization type',\n    };\n\n    const fieldLabel = fieldLabels[fieldKey] || fieldKey.toLowerCase();\n    return `Enter ${fieldLabel}`;\n  }, []);\n\n  const handleFieldSave = useCallback(\n    (fieldKey: string): void => {\n      if (!onUpdate || !fieldKey) return;\n\n      const fieldValue: any =\n        editedOrganization && fieldKey && editedOrganization[fieldKey as keyof OrganizationDetails] !== undefined\n          ? editedOrganization[fieldKey as keyof OrganizationDetails]\n          : organization && organization[fieldKey as keyof OrganizationDetails] !== undefined\n          ? organization[fieldKey as keyof OrganizationDetails]\n          : '';\n\n      const payload: Record<string, any> = {\n        [fieldKey]: fieldValue,\n      };\n\n      onUpdate(payload);\n      // Exit edit mode for this field after save\n      toggleFieldEdit(fieldKey);\n    },\n    [editedOrganization, organization, onUpdate, toggleFieldEdit],\n  );\n\n  const handleFieldCancel = useCallback(\n    (fieldKey: string) => {\n      setEditedOrganization(prev => ({\n        ...prev,\n        [fieldKey]: organization?.[fieldKey as keyof OrganizationDetails],\n      }));\n      toggleFieldEdit(fieldKey);\n    },\n    [organization, toggleFieldEdit],\n  );\n\n  const formatLabel = (key: string): string =>\n    key\n      .split(/(?=[A-Z])|_/)\n      .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n      .join(' ');\n\n  const getStatusColor = (status?: string): string => {\n    switch (status?.toUpperCase()) {\n      case 'ACTIVE':\n        return theme.vars.colors.success.main;\n      case 'INACTIVE':\n        return theme.vars.colors.warning.main;\n      case 'SUSPENDED':\n        return theme.vars.colors.error.main;\n      default:\n        return theme.vars.colors.text.secondary;\n    }\n  };\n\n  const getOrgInitials = (name?: string): string => {\n    if (!name) return 'ORG';\n    return name\n      .split(' ')\n      .map(word => word.charAt(0))\n      .join('')\n      .toUpperCase()\n      .slice(0, 2);\n  };\n\n  const styles = useStyles();\n\n  // Renders individual field in view or edit mode\n  const renderField = (\n    field: any,\n    isEditing: boolean,\n    onEditValue?: (value: any) => void,\n    onStartEdit?: () => void,\n  ): ReactElement | null => {\n    if (!field) return null;\n\n    const {key, label, editable: fieldEditable = true} = field;\n    const value =\n      key === 'attributes' ? organization?.attributes || {} : organization?.[key as keyof OrganizationDetails];\n\n    const renderedValue = field.render ? field.render(value, organization) : value;\n\n    // If editing, show input field\n    if (isEditing && onEditValue && fieldEditable && editable) {\n      const fieldValue =\n        editedOrganization && key && editedOrganization[key as keyof OrganizationDetails] !== undefined\n          ? editedOrganization[key as keyof OrganizationDetails]\n          : value || '';\n\n      const commonProps = {\n        label: undefined,\n        value: typeof fieldValue === 'object' ? JSON.stringify(fieldValue) : String(fieldValue || ''),\n        onChange: (e: any) => onEditValue(e.target ? e.target.value : e),\n        placeholder: getFieldPlaceholder(key),\n        style: {\n          marginBottom: 0,\n        },\n      };\n\n      let fieldInput: ReactElement;\n\n      if (key === 'attributes') {\n        // For attributes, use KeyValueInput component\n        const attributesValue = typeof fieldValue === 'object' && fieldValue !== null ? fieldValue : {};\n        fieldInput = (\n          <KeyValueInput\n            value={attributesValue}\n            onChange={pairs => {\n              const attributesObject = pairs.reduce((acc, pair) => {\n                acc[pair.key] = pair.value;\n                return acc;\n              }, {} as Record<string, any>);\n              onEditValue(attributesObject);\n            }}\n            onAdd={pair => {\n              if (onUpdate) {\n                const operation = {\n                  operation: 'ADD',\n                  path: `/attributes/${pair.key}`,\n                  value: pair.value,\n                };\n                onUpdate([operation]);\n              }\n            }}\n            onRemove={(pair, index) => {\n              if (onUpdate) {\n                const operation = {\n                  operation: 'REMOVE',\n                  path: `/attributes/${pair.key}`,\n                  value: '',\n                };\n                onUpdate([operation]);\n              }\n            }}\n            label=\"\"\n            keyPlaceholder=\"Attribute name\"\n            valuePlaceholder=\"Attribute value\"\n            helperText=\"Add custom attributes as key-value pairs\"\n          />\n        );\n      } else {\n        fieldInput = <TextField {...commonProps} />;\n      }\n\n      return (\n        <>\n          <span style={styles.label}>{label}</span>\n          <div style={styles.value}>{fieldInput}</div>\n        </>\n      );\n    }\n\n    // Default: view mode\n    const hasValue = value !== undefined && value !== null && value !== '';\n    const isFieldEditable = editable && fieldEditable;\n\n    let displayValue: string | ReactElement;\n    if (hasValue) {\n      displayValue =\n        key === 'attributes' && typeof value === 'object' && value !== null ? (\n          <KeyValueInput value={value} readOnly={true} label=\"\" />\n        ) : (\n          String(renderedValue)\n        );\n    } else if (isFieldEditable) {\n      displayValue = getFieldPlaceholder(key);\n    } else {\n      displayValue = '-';\n    }\n\n    return (\n      <>\n        <span style={styles.label}>{label}</span>\n        <div\n          style={{\n            ...styles.value,\n            fontStyle: hasValue ? 'normal' : 'italic',\n            opacity: hasValue ? 1 : 0.7,\n          }}\n        >\n          {!hasValue && isFieldEditable && onStartEdit ? (\n            <Button\n              onClick={onStartEdit}\n              variant=\"text\"\n              color=\"secondary\"\n              size=\"small\"\n              title=\"Click to edit\"\n              style={{\n                fontStyle: 'italic',\n                textDecoration: 'underline',\n                opacity: 0.7,\n                padding: 0,\n                minHeight: 'auto',\n              }}\n            >\n              {displayValue}\n            </Button>\n          ) : (\n            displayValue\n          )}\n        </div>\n      </>\n    );\n  };\n\n  const renderOrganizationField = (field: any) => {\n    if (!field || !field.key) return null;\n\n    const hasValue =\n      organization?.[field.key as keyof OrganizationDetails] !== undefined &&\n      organization?.[field.key as keyof OrganizationDetails] !== '' &&\n      organization?.[field.key as keyof OrganizationDetails] !== null;\n    const isFieldEditing = editingFields[field.key];\n    const isFieldEditable = editable && field.editable !== false;\n\n    // Show field if: has value, currently editing, or is editable\n    const shouldShow = hasValue || isFieldEditing || isFieldEditable;\n\n    if (!shouldShow) {\n      return null;\n    }\n\n    const fieldStyle = {\n      ...styles.field,\n      display: 'flex',\n      alignItems: 'center',\n      gap: theme.vars.spacing.unit,\n    };\n\n    return (\n      <div style={fieldStyle} key={field.key}>\n        <div style={{flex: 1, display: 'flex', alignItems: 'center', gap: theme.vars.spacing.unit}}>\n          {renderField(\n            field,\n            isFieldEditing,\n            value => {\n              const tempEditedOrganization = {...editedOrganization};\n              tempEditedOrganization[field.key as keyof OrganizationDetails] = value;\n              setEditedOrganization(tempEditedOrganization);\n            },\n            () => toggleFieldEdit(field.key),\n          )}\n        </div>\n        {isFieldEditable && (\n          <div style={{display: 'flex', alignItems: 'center', gap: `calc(${theme.vars.spacing.unit} / 2)`}}>\n            {isFieldEditing ? (\n              <>\n                <Button\n                  onClick={() => handleFieldSave(field.key)}\n                  color=\"primary\"\n                  variant=\"solid\"\n                  size=\"small\"\n                  title=\"Save changes\"\n                >\n                  {saveButtonText}\n                </Button>\n                <Button\n                  onClick={() => handleFieldCancel(field.key)}\n                  color=\"secondary\"\n                  variant=\"solid\"\n                  size=\"small\"\n                  title=\"Cancel editing\"\n                >\n                  {cancelButtonText}\n                </Button>\n              </>\n            ) : (\n              // Only show pencil icon when there's a value\n              hasValue && (\n                <Button\n                  onClick={() => toggleFieldEdit(field.key)}\n                  variant=\"text\"\n                  color=\"secondary\"\n                  size=\"small\"\n                  title=\"Edit field\"\n                  style={{\n                    minWidth: 'auto',\n                    padding: `calc(${theme.vars.spacing.unit} / 2)`,\n                    minHeight: 'auto',\n                  }}\n                >\n                  <PencilIcon />\n                </Button>\n              )\n            )}\n          </div>\n        )}\n      </div>\n    );\n  };\n\n  if (!organization) {\n    return fallback;\n  }\n\n  const containerStyle = {\n    ...styles.root,\n    ...(cardLayout ? styles.card : {}),\n  };\n\n  const profileContent = (\n    <Card style={containerStyle} className={clsx(withVendorCSSClassPrefix('organization-profile'), className)}>\n      <div style={styles.header}>\n        <Avatar name={getOrgInitials(organization.name)} size={80} alt={`${organization.name} logo`} />\n        <div style={styles.orgInfo}>\n          <h2 style={styles.name}>{organization.name}</h2>\n          {organization.orgHandle && <p style={styles.handle}>@{organization.orgHandle}</p>}\n        </div>\n      </div>\n\n      <div style={styles.infoContainer}>{fields.map((field, index) => renderOrganizationField(field))}</div>\n    </Card>\n  );\n\n  if (mode === 'popup') {\n    return (\n      <Dialog open={open} onOpenChange={onOpenChange}>\n        <DialogContent>\n          <DialogHeading>{title}</DialogHeading>\n          <div style={{padding: `calc(${theme.vars.spacing.unit} * 2)`}}>{profileContent}</div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return profileContent;\n};\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      root: {\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n        minWidth: '600px',\n        margin: '0 auto',\n      } as CSSProperties,\n      card: {\n        background: theme.vars.colors.background.surface,\n        borderRadius: theme.vars.borderRadius.large,\n      } as CSSProperties,\n      header: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n        marginBottom: `calc(${theme.vars.spacing.unit} * 3)`,\n        paddingBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      orgInfo: {\n        flex: 1,\n      } as CSSProperties,\n      name: {\n        fontSize: '1.5rem',\n        fontWeight: 600,\n        margin: '0 0 8px 0',\n        color: theme.vars.colors.text.primary,\n      } as CSSProperties,\n      handle: {\n        fontSize: '1rem',\n        color: theme.vars.colors.text.secondary,\n        margin: '0',\n        fontFamily: 'monospace',\n      } as CSSProperties,\n      infoContainer: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: theme.vars.spacing.unit,\n      } as CSSProperties,\n      field: {\n        display: 'flex',\n        alignItems: 'flex-start',\n        padding: `calc(${theme.vars.spacing.unit} / 2) 0`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n        minHeight: '28px',\n      } as CSSProperties,\n      lastField: {\n        borderBottom: 'none',\n      } as CSSProperties,\n      label: {\n        fontSize: '0.875rem',\n        fontWeight: 500,\n        color: theme.vars.colors.text.secondary,\n        width: '120px',\n        flexShrink: 0,\n        lineHeight: '28px',\n      } as CSSProperties,\n      value: {\n        color: theme.vars.colors.text.primary,\n        flex: 1,\n        display: 'flex',\n        alignItems: 'center',\n        gap: theme.vars.spacing.unit,\n        overflow: 'hidden',\n        minHeight: '28px',\n        lineHeight: '28px',\n        wordBreak: 'break-word' as const,\n      } as CSSProperties,\n      statusBadge: {\n        padding: `calc(${theme.vars.spacing.unit} / 2) ${theme.vars.spacing.unit}`,\n        borderRadius: theme.vars.borderRadius.small,\n        fontSize: '0.75rem',\n        fontWeight: 500,\n        color: 'white',\n        textTransform: 'uppercase' as const,\n        letterSpacing: '0.5px',\n      } as CSSProperties,\n      permissionsList: {\n        display: 'flex',\n        flexWrap: 'wrap' as const,\n        gap: `calc(${theme.vars.spacing.unit} / 2)`,\n      } as CSSProperties,\n      permissionBadge: {\n        padding: `calc(${theme.vars.spacing.unit} / 4) ${theme.vars.spacing.unit}`,\n        borderRadius: theme.vars.borderRadius.small,\n        fontSize: '0.75rem',\n        backgroundColor: theme.vars.colors.primary.main,\n        color: theme.vars.colors.primary.contrastText,\n        border: `1px solid ${theme.vars.colors.border}`,\n      } as CSSProperties,\n      attributesList: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: `calc(${theme.vars.spacing.unit} / 4)`,\n      } as CSSProperties,\n      attributeItem: {\n        display: 'flex',\n        gap: theme.vars.spacing.unit,\n        padding: `calc(${theme.vars.spacing.unit} / 4) 0`,\n        alignItems: 'center',\n      } as CSSProperties,\n      attributeKey: {\n        fontSize: '0.75rem',\n        fontWeight: 500,\n        color: theme.vars.colors.text.secondary,\n        minWidth: '80px',\n        flexShrink: 0,\n      } as CSSProperties,\n      attributeValue: {\n        fontSize: '0.75rem',\n        color: theme.vars.colors.text.primary,\n        wordBreak: 'break-word' as const,\n        flex: 1,\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\nexport default BaseOrganizationProfile;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {FC, ReactElement, useState, useCallback, CSSProperties} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport Button from '../Button/Button';\nimport TextField from '../TextField/TextField';\nimport {Plus, X} from '../Icons';\n\nexport interface KeyValuePair {\n  key: string;\n  value: string;\n}\n\nexport interface KeyValueInputProps {\n  /**\n   * CSS class name for styling the component.\n   */\n  className?: string;\n\n  /**\n   * Whether the input is disabled.\n   */\n  disabled?: boolean;\n\n  /**\n   * Error message to display.\n   */\n  error?: string;\n\n  /**\n   * Help text to display below the input.\n   */\n  helperText?: string;\n\n  /**\n   * Label for the key input field.\n   */\n  keyLabel?: string;\n\n  /**\n   * Placeholder text for the key input field.\n   */\n  keyPlaceholder?: string;\n\n  /**\n   * Label for the component.\n   */\n  label?: string;\n\n  /**\n   * Maximum number of key-value pairs allowed.\n   */\n  maxPairs?: number;\n  /**\n   * Callback fired when the key-value pairs change.\n   */\n  onChange?: (pairs: KeyValuePair[]) => void;\n\n  /**\n   * Callback fired when a pair is added.\n   */\n  onAdd?: (pair: KeyValuePair) => void;\n\n  /**\n   * Callback fired when a pair is removed.\n   */\n  onRemove?: (pair: KeyValuePair, index: number) => void;\n\n  /**\n   * Whether the component is in read-only mode.\n   */\n  readOnly?: boolean;\n\n  /**\n   * Text for the remove button.\n   */\n  removeButtonText?: string;\n\n  /**\n   * Whether the component is required.\n   */\n  required?: boolean;\n\n  /**\n   * Current key-value pairs.\n   */\n  value?: Record<string, any> | KeyValuePair[];\n\n  /**\n   * Label for the value input field.\n   */\n  valueLabel?: string;\n\n  /**\n   * Placeholder text for the value input field.\n   */\n  valuePlaceholder?: string;\n}\n\n/**\n * KeyValueInput component allows users to manage key-value pairs with add/remove functionality.\n * It provides a user-friendly interface for editing organization attributes or similar data structures.\n *\n * @example\n * ```tsx\n * // Basic usage\n * <KeyValueInput\n *   label=\"Organization Attributes\"\n *   onChange={(pairs) => console.log(pairs)}\n * />\n *\n * // With initial values\n * <KeyValueInput\n *   label=\"Organization Attributes\"\n *   value={{department: 'IT', location: 'New York'}}\n *   onChange={(pairs) => console.log(pairs)}\n * />\n *\n * // With add/remove callbacks\n * <KeyValueInput\n *   label=\"Custom Attributes\"\n *   value={attributes}\n *   onChange={(pairs) => setAttributes(pairs)}\n *   onAdd={(pair) => console.log('Added:', pair)}\n *   onRemove={(pair, index) => console.log('Removed:', pair, 'at index:', index)}\n * />\n * ```\n */\nconst KeyValueInput: FC<KeyValueInputProps> = ({\n  className = '',\n  disabled = false,\n  error,\n  helperText,\n  keyLabel = 'Key',\n  keyPlaceholder = 'Enter key',\n  label,\n  maxPairs,\n  onChange,\n  onAdd,\n  onRemove,\n  readOnly = false,\n  removeButtonText = 'Remove',\n  required = false,\n  value = {},\n  valueLabel = 'Value',\n  valuePlaceholder = 'Enter value',\n}): ReactElement => {\n  const {theme} = useTheme();\n\n  // Convert value to array format\n  const initialPairs: KeyValuePair[] = Array.isArray(value)\n    ? value\n    : Object.entries(value).map(([key, val]) => ({key, value: String(val)}));\n\n  const [pairs, setPairs] = useState<KeyValuePair[]>(initialPairs);\n  const [newKey, setNewKey] = useState('');\n  const [newValue, setNewValue] = useState('');\n\n  const handleAddPair = useCallback(() => {\n    if (!newKey.trim() || !newValue.trim()) return;\n    if (maxPairs && pairs.length >= maxPairs) return;\n\n    const newPair: KeyValuePair = {\n      key: newKey.trim(),\n      value: newValue.trim(),\n    };\n\n    const updatedPairs = [...pairs, newPair];\n    setPairs(updatedPairs);\n    setNewKey('');\n    setNewValue('');\n\n    if (onChange) {\n      onChange(updatedPairs);\n    }\n\n    if (onAdd) {\n      onAdd(newPair);\n    }\n  }, [newKey, newValue, pairs, maxPairs, onChange, onAdd]);\n\n  const handleRemovePair = useCallback(\n    (index: number) => {\n      const pairToRemove = pairs[index];\n      const updatedPairs = pairs.filter((_, i) => i !== index);\n      setPairs(updatedPairs);\n\n      if (onChange) {\n        onChange(updatedPairs);\n      }\n\n      if (onRemove) {\n        onRemove(pairToRemove, index);\n      }\n    },\n    [pairs, onChange, onRemove],\n  );\n\n  const handleUpdatePair = useCallback(\n    (index: number, field: 'key' | 'value', newVal: string) => {\n      const updatedPairs = pairs.map((pair, i) => {\n        if (i === index) {\n          return {...pair, [field]: newVal};\n        }\n        return pair;\n      });\n      setPairs(updatedPairs);\n\n      if (onChange) {\n        onChange(updatedPairs);\n      }\n    },\n    [pairs, onChange],\n  );\n\n  const canAddMore = !maxPairs || pairs.length < maxPairs;\n  const isAddDisabled = disabled || readOnly || !canAddMore || !newKey.trim() || !newValue.trim();\n\n  const styles = {\n    container: {\n      display: 'flex',\n      flexDirection: 'column' as const,\n      gap: `calc(${theme.vars.spacing.unit} / 2)`,\n    } as CSSProperties,\n    label: {\n      fontSize: '0.875rem',\n      fontWeight: 500,\n      color: theme.vars.colors.text.primary,\n      marginBottom: `calc(${theme.vars.spacing.unit} / 2)`,\n    } as CSSProperties,\n    pairsList: {\n      display: 'flex',\n      flexDirection: 'column' as const,\n      gap: `calc(${theme.vars.spacing.unit} / 4)`,\n    } as CSSProperties,\n    pairRow: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: `calc(${theme.vars.spacing.unit} / 2)`,\n      padding: `calc(${theme.vars.spacing.unit} / 2)`,\n      borderRadius: theme.vars.borderRadius.small,\n      backgroundColor: 'transparent',\n      border: 'none',\n      '&:hover': {\n        backgroundColor: theme.vars.colors.action.hover,\n      },\n    } as CSSProperties,\n    pairInput: {\n      flex: 1,\n      minWidth: 0,\n    } as CSSProperties,\n    addRow: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: `calc(${theme.vars.spacing.unit} / 2)`,\n      padding: `calc(${theme.vars.spacing.unit} / 2)`,\n      border: 'none',\n      borderRadius: theme.vars.borderRadius.small,\n      backgroundColor: 'transparent',\n      marginTop: `calc(${theme.vars.spacing.unit} / 2)`,\n    } as CSSProperties,\n    removeButton: {\n      minWidth: 'auto',\n      width: '24px',\n      height: '24px',\n      padding: '0',\n      backgroundColor: 'transparent',\n      color: theme.vars.colors.text.secondary,\n      border: 'none',\n      borderRadius: theme.vars.borderRadius.small,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        backgroundColor: theme.vars.colors.action.hover,\n        color: theme.vars.colors.error.main,\n      },\n    } as CSSProperties,\n    addButton: {\n      minWidth: 'auto',\n      width: '24px',\n      height: '24px',\n      padding: '0',\n      backgroundColor: 'transparent',\n      color: theme.vars.colors.primary.main,\n      border: 'none',\n      borderRadius: theme.vars.borderRadius.small,\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      '&:hover': {\n        backgroundColor: theme.vars.colors.primary.main,\n        color: theme.vars.colors.primary.contrastText,\n      },\n    } as CSSProperties,\n    helperText: {\n      fontSize: '0.75rem',\n      color: error ? theme.vars.colors.error.main : theme.vars.colors.text.secondary,\n      marginTop: `calc(${theme.vars.spacing.unit} / 2)`,\n    } as CSSProperties,\n    emptyState: {\n      padding: theme.vars.spacing.unit,\n      textAlign: 'center' as const,\n      color: theme.vars.colors.text.secondary,\n      fontStyle: 'italic',\n      fontSize: '0.75rem',\n    } as CSSProperties,\n    readOnlyPair: {\n      display: 'flex',\n      alignItems: 'center',\n      gap: `calc(${theme.vars.spacing.unit} / 2)`,\n      padding: `calc(${theme.vars.spacing.unit} / 4) 0`,\n      minHeight: '20px',\n    } as CSSProperties,\n    readOnlyKey: {\n      fontSize: '0.75rem',\n      fontWeight: 500,\n      color: theme.vars.colors.text.secondary,\n      minWidth: '80px',\n      flexShrink: 0,\n    } as CSSProperties,\n    readOnlyValue: {\n      fontSize: '0.75rem',\n      color: theme.vars.colors.text.primary,\n      wordBreak: 'break-word' as const,\n      flex: 1,\n    } as CSSProperties,\n  };\n\n  return (\n    <div className={clsx(withVendorCSSClassPrefix('key-value-input'), className)} style={styles.container}>\n      {label && (\n        <label style={styles.label}>\n          {label}\n          {required && <span style={{color: theme.vars.colors.error.main}}> *</span>}\n        </label>\n      )}\n\n      <div style={styles.pairsList}>\n        {pairs.length === 0 && readOnly ? (\n          <div style={styles.emptyState}>No attributes defined</div>\n        ) : readOnly ? (\n          pairs.map((pair, index) => (\n            <div key={`${pair.key}-${index}`} style={styles.readOnlyPair}>\n              <span style={styles.readOnlyKey}>{pair.key}:</span>\n              <span style={styles.readOnlyValue}>{pair.value}</span>\n            </div>\n          ))\n        ) : (\n          pairs.map((pair, index) => (\n            <div key={`${pair.key}-${index}`} style={styles.pairRow}>\n              <TextField\n                placeholder={keyPlaceholder}\n                value={pair.key}\n                onChange={e => handleUpdatePair(index, 'key', e.target.value)}\n                disabled={disabled || readOnly}\n                style={styles.pairInput}\n                aria-label={`${keyLabel} ${index + 1}`}\n              />\n              <TextField\n                placeholder={valuePlaceholder}\n                value={pair.value}\n                onChange={e => handleUpdatePair(index, 'value', e.target.value)}\n                disabled={disabled || readOnly}\n                style={styles.pairInput}\n                aria-label={`${valueLabel} ${index + 1}`}\n              />\n              {!readOnly && (\n                <Button\n                  variant=\"outline\"\n                  size=\"small\"\n                  onClick={() => handleRemovePair(index)}\n                  disabled={disabled}\n                  style={styles.removeButton}\n                  aria-label={`${removeButtonText} ${pair.key}`}\n                >\n                  <X width={16} height={16} />\n                </Button>\n              )}\n            </div>\n          ))\n        )}\n\n        {!readOnly && (\n          <div style={styles.addRow}>\n            <TextField\n              placeholder={keyPlaceholder}\n              value={newKey}\n              onChange={e => setNewKey(e.target.value)}\n              disabled={disabled}\n              style={styles.pairInput}\n              aria-label=\"New key\"\n            />\n            <TextField\n              placeholder={valuePlaceholder}\n              value={newValue}\n              onChange={e => setNewValue(e.target.value)}\n              disabled={disabled}\n              style={styles.pairInput}\n              aria-label=\"New value\"\n              onKeyPress={e => {\n                if (e.key === 'Enter' && !isAddDisabled) {\n                  handleAddPair();\n                }\n              }}\n            />\n            <Button\n              variant=\"solid\"\n              size=\"small\"\n              onClick={handleAddPair}\n              disabled={isAddDisabled}\n              style={styles.addButton}\n              aria-label=\"Add new key-value pair\"\n            >\n              <Plus width={16} height={16} />\n            </Button>\n          </div>\n        )}\n      </div>\n\n      {(helperText || error) && <div style={styles.helperText}>{error || helperText}</div>}\n\n      {maxPairs && (\n        <div style={styles.helperText}>\n          {pairs.length} of {maxPairs} pairs used\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default KeyValueInput;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  getOrganization as baseGetOrganization,\n  GetOrganizationConfig as BaseGetOrganizationConfig,\n  OrganizationDetails,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the getOrganization request (React-specific)\n */\nexport interface GetOrganizationConfig extends Omit<BaseGetOrganizationConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Retrieves detailed information for a specific organization.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Configuration object containing baseUrl, organizationId, and request config.\n * @returns A promise that resolves with the organization details.\n * @example\n * ```typescript\n * // Using default Asgardeo SPA client httpClient\n * try {\n *   const organization = await getOrganization({\n *     baseUrl: \"https://api.asgardeo.io/t/dxlab\",\n *     organizationId: \"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\"\n *   });\n *   console.log(organization);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get organization:', error.message);\n *   }\n * }\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * try {\n *   const organization = await getOrganization({\n *     baseUrl: \"https://api.asgardeo.io/t/dxlab\",\n *     organizationId: \"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\",\n *     fetcher: customFetchFunction\n *   });\n *   console.log(organization);\n * } catch (error) {\n *   if (error instanceof AsgardeoAPIError) {\n *     console.error('Failed to get organization:', error.message);\n *   }\n * }\n * ```\n */\nconst getOrganization = async ({fetcher, ...requestConfig}: GetOrganizationConfig): Promise<OrganizationDetails> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'GET',\n      headers: config.headers as Record<string, string>,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseGetOrganization({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\nexport default getOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {\n  HttpInstance,\n  AsgardeoSPAClient,\n  HttpRequestConfig,\n  updateOrganization as baseUpdateOrganization,\n  UpdateOrganizationConfig as BaseUpdateOrganizationConfig,\n  OrganizationDetails,\n  createPatchOperations,\n} from '@asgardeo/browser';\n\nconst httpClient: HttpInstance = AsgardeoSPAClient.getInstance().httpRequest.bind(AsgardeoSPAClient.getInstance());\n\n/**\n * Configuration for the updateOrganization request (React-specific)\n */\nexport interface UpdateOrganizationConfig extends Omit<BaseUpdateOrganizationConfig, 'fetcher'> {\n  /**\n   * Optional custom fetcher function. If not provided, the Asgardeo SPA client's httpClient will be used\n   * which is a wrapper around axios http.request\n   */\n  fetcher?: (url: string, config: RequestInit) => Promise<Response>;\n}\n\n/**\n * Updates the organization information using the Organizations Management API.\n * This function uses the Asgardeo SPA client's httpClient by default, but allows for custom fetchers.\n *\n * @param config - Configuration object with baseUrl, organizationId, operations and optional request config.\n * @returns A promise that resolves with the updated organization information.\n * @example\n * ```typescript\n * // Using the helper function to create operations automatically\n * const operations = createPatchOperations({\n *   name: \"Updated Organization Name\",      // Will use REPLACE\n *   description: \"\",                        // Will use REMOVE (empty string)\n *   customField: \"Some value\"              // Will use REPLACE\n * });\n *\n * await updateOrganization({\n *   baseUrl: \"https://api.asgardeo.io/t/<ORG>\",\n *   organizationId: \"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\",\n *   operations\n * });\n *\n * // Or manually specify operations\n * await updateOrganization({\n *   baseUrl: \"https://api.asgardeo.io/t/<ORG>\",\n *   organizationId: \"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\",\n *   operations: [\n *     { operation: \"REPLACE\", path: \"/name\", value: \"Updated Organization Name\" },\n *     { operation: \"REMOVE\", path: \"/description\" }\n *   ]\n * });\n * ```\n *\n * @example\n * ```typescript\n * // Using custom fetcher\n * await updateOrganization({\n *   baseUrl: \"https://api.asgardeo.io/t/<ORG>\",\n *   organizationId: \"0d5e071b-d3d3-475d-b3c6-1a20ee2fa9b1\",\n *   operations: [\n *     { operation: \"REPLACE\", path: \"/name\", value: \"Updated Organization Name\" }\n *   ],\n *   fetcher: customFetchFunction\n * });\n * ```\n */\nconst updateOrganization = async ({\n  fetcher,\n  ...requestConfig\n}: UpdateOrganizationConfig): Promise<OrganizationDetails> => {\n  const defaultFetcher = async (url: string, config: RequestInit): Promise<Response> => {\n    const response = await httpClient({\n      url,\n      method: config.method || 'PATCH',\n      headers: config.headers as Record<string, string>,\n      data: config.body ? JSON.parse(config.body as string) : undefined,\n    } as HttpRequestConfig);\n\n    return {\n      ok: response.status >= 200 && response.status < 300,\n      status: response.status,\n      statusText: response.statusText || '',\n      json: () => Promise.resolve(response.data),\n      text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data)),\n    } as Response;\n  };\n\n  return baseUpdateOrganization({\n    ...requestConfig,\n    fetcher: fetcher || defaultFetcher,\n  });\n};\n\n// Re-export the helper function\nexport {createPatchOperations};\n\nexport default updateOrganization;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AllOrganizationsApiResponse, Organization} from '@asgardeo/browser';\nimport {FC, ReactElement, useEffect, useState} from 'react';\nimport {BaseOrganizationListProps, OrganizationWithSwitchAccess} from './BaseOrganizationList';\nimport BaseOrganizationList from './BaseOrganizationList';\nimport useOrganization from '../../../contexts/Organization/useOrganization';\n\n/**\n * Configuration options for the OrganizationList component.\n */\nexport interface OrganizationListConfig {\n  /**\n   * Whether to automatically fetch organizations on mount\n   */\n  autoFetch?: boolean;\n  /**\n   * Filter string for organizations\n   */\n  filter?: string;\n  /**\n   * Number of organizations to fetch per page\n   */\n  limit?: number;\n  /**\n   * Whether to include recursive organizations\n   */\n  recursive?: boolean;\n}\n\n/**\n * Props interface for the OrganizationList component.\n * Uses the enhanced OrganizationContext instead of the useOrganizations hook.\n */\nexport interface OrganizationListProps\n  extends Omit<\n      BaseOrganizationListProps,\n      | 'myOrganizations'\n      | 'allOrganizations'\n      | 'error'\n      | 'fetchMore'\n      | 'hasMore'\n      | 'isLoading'\n      | 'isLoadingMore'\n      | 'myOrganizations'\n    >,\n    OrganizationListConfig {\n  /**\n   * Function called when an organization is selected/clicked\n   */\n  onOrganizationSelect?: (organization: OrganizationWithSwitchAccess) => void;\n}\n\n/**\n * OrganizationList component that provides organization listing functionality with pagination.\n * This component uses the enhanced OrganizationContext, eliminating the polling issue and\n * providing better integration with the existing context system.\n *\n * @example\n * ```tsx\n * import { OrganizationList } from '@asgardeo/react';\n *\n * // Basic usage\n * <OrganizationList />\n *\n * // With custom limit and filter\n * <OrganizationList\n *   limit={20}\n *   filter=\"active\"\n *   onOrganizationSelect={(org) => {\n *     console.log('Selected organization:', org.name);\n *   }}\n * />\n *\n * // As a popup dialog\n * <OrganizationList\n *   mode=\"popup\"\n *   open={isOpen}\n *   onOpenChange={setIsOpen}\n *   title=\"Select Organization\"\n * />\n *\n * // With custom organization renderer\n * <OrganizationList\n *   renderOrganization={(org) => (\n *     <div key={org.id}>\n *       <h3>{org.name}</h3>\n *       <p>Can switch: {org.canSwitch ? 'Yes' : 'No'}</p>\n *     </div>\n *   )}\n * />\n * ```\n */\nexport const OrganizationList: FC<OrganizationListProps> = ({\n  autoFetch = true,\n  filter = '',\n  limit = 10,\n  onOrganizationSelect,\n  recursive = false,\n  ...baseProps\n}: OrganizationListProps): ReactElement => {\n  const {getAllOrganizations, error, isLoading, myOrganizations} = useOrganization();\n\n  const [allOrganizations, setAllOrganizations] = useState<AllOrganizationsApiResponse>({\n    organizations: [],\n  });\n\n  useEffect(() => {\n    (async () => {\n      setAllOrganizations(await getAllOrganizations());\n    })();\n  }, []);\n\n  return (\n    <BaseOrganizationList\n      allOrganizations={allOrganizations}\n      myOrganizations={myOrganizations}\n      error={error}\n      isLoading={isLoading}\n      onOrganizationSelect={onOrganizationSelect}\n      {...baseProps}\n    />\n  );\n};\n\nexport default OrganizationList;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {AllOrganizationsApiResponse, Organization, withVendorCSSClassPrefix} from '@asgardeo/browser';\nimport clsx from 'clsx';\nimport {FC, ReactElement, ReactNode, useMemo, CSSProperties} from 'react';\nimport useTheme from '../../../contexts/Theme/useTheme';\nimport useTranslation from '../../../hooks/useTranslation';\nimport {Dialog, DialogContent, DialogHeading} from '../../primitives/Popover/Popover';\nimport Avatar from '../../primitives/Avatar/Avatar';\nimport Button from '../../primitives/Button/Button';\nimport Typography from '../../primitives/Typography/Typography';\nimport Spinner from '../../primitives/Spinner/Spinner';\n\nexport interface OrganizationWithSwitchAccess extends Organization {\n  canSwitch: boolean;\n}\n\n/**\n * Props interface for the BaseOrganizationList component.\n */\nexport interface BaseOrganizationListProps {\n  /**\n   * Additional CSS class names to apply to the container\n   */\n  className?: string;\n  /**\n   * List of organizations discoverable to the signed-in user.\n   */\n  allOrganizations: AllOrganizationsApiResponse;\n  /**\n   * List of organizations associated to the signed-in user.\n   */\n  myOrganizations: Organization[];\n  /**\n   * Error message to display\n   */\n  error?: string | null;\n  /**\n   * Function called when \"Load More\" is clicked\n   */\n  fetchMore?: () => Promise<void>;\n  /**\n   * Whether there are more organizations to load\n   */\n  hasMore?: boolean;\n  /**\n   * Whether the initial data is loading\n   */\n  isLoading?: boolean;\n  /**\n   * Whether more data is being loaded\n   */\n  isLoadingMore?: boolean;\n  /**\n   * Function called when refresh is requested\n   */\n  onRefresh?: () => Promise<void>;\n  /**\n   * Custom renderer for when no organizations are found\n   */\n  renderEmpty?: () => ReactNode;\n  /**\n   * Custom renderer for the error state\n   */\n  renderError?: (error: string) => ReactNode;\n  /**\n   * Custom renderer for the load more button\n   */\n  renderLoadMore?: (onLoadMore: () => Promise<void>, isLoading: boolean) => ReactNode;\n  /**\n   * Custom renderer for the loading state\n   */\n  renderLoading?: () => ReactNode;\n  /**\n   * Custom renderer for each organization item\n   */\n  renderOrganization?: (organization: OrganizationWithSwitchAccess, index: number) => ReactNode;\n  /**\n   * Function called when an organization is selected/clicked\n   */\n  onOrganizationSelect?: (organization: OrganizationWithSwitchAccess) => void;\n  /**\n   * Inline styles to apply to the container\n   */\n  style?: React.CSSProperties;\n  /**\n   * Display mode: 'inline' for normal display, 'popup' for modal dialog\n   */\n  mode?: 'inline' | 'popup';\n  /**\n   * Function called when popup open state changes (only used in popup mode)\n   */\n  onOpenChange?: (open: boolean) => void;\n  /**\n   * Whether the popup is open (only used in popup mode)\n   */\n  open?: boolean;\n  /**\n   * Title for the popup dialog (only used in popup mode)\n   */\n  title?: string;\n  /**\n   * Whether to show the organization status in the list\n   */\n  showStatus?: boolean;\n}\n\n/**\n * Default organization item renderer\n */\nconst defaultRenderOrganization = (\n  organization: OrganizationWithSwitchAccess,\n  styles: any,\n  t: (key: string, params?: Record<string, string | number>) => string,\n  onOrganizationSelect?: (organization: OrganizationWithSwitchAccess) => void,\n  showStatus?: boolean,\n): ReactNode => {\n  return (\n    <div\n      key={organization.id}\n      style={{\n        ...styles.organizationItem,\n      }}\n    >\n      <div style={styles.organizationContent}>\n        <Avatar variant=\"square\" name={organization.name} size={48} alt={`${organization.name} logo`} />\n        <div style={styles.organizationInfo}>\n          <Typography variant=\"h6\" style={styles.organizationName}>\n            {organization.name}\n          </Typography>\n          <Typography variant=\"body2\" color=\"textSecondary\" style={styles.organizationHandle}>\n            @{organization.orgHandle}\n          </Typography>\n          {showStatus && (\n            <Typography variant=\"body2\" color=\"textSecondary\" style={styles.organizationStatus}>\n              {t('organization.switcher.status.label')}{' '}\n              <span\n                style={{\n                  ...styles.statusText,\n                  color: organization.status === 'ACTIVE' ? styles.activeColor : styles.inactiveColor,\n                }}\n              >\n                {organization.status}\n              </span>\n            </Typography>\n          )}\n        </div>\n      </div>\n      {organization.canSwitch && (\n        <div style={styles.organizationActions}>\n          <Button\n            onClick={e => {\n              e.stopPropagation();\n              onOrganizationSelect(organization);\n            }}\n            type=\"button\"\n            size=\"small\"\n          >\n            {t('organization.switcher.switch.button')}\n          </Button>\n        </div>\n      )}\n    </div>\n  );\n};\n\n/**\n * Default loading renderer\n */\nconst defaultRenderLoading = (\n  t: (key: string, params?: Record<string, string | number>) => string,\n  styles: any,\n): ReactNode => (\n  <div style={styles.loadingContainer}>\n    <Spinner size=\"medium\" />\n    <Typography variant=\"body1\" color=\"textSecondary\" style={styles.loadingText}>\n      {t('organization.switcher.loading.organizations')}\n    </Typography>\n  </div>\n);\n\n/**\n * Default error renderer\n */\nconst defaultRenderError = (\n  error: string,\n  t: (key: string, params?: Record<string, string | number>) => string,\n  styles: any,\n): ReactNode => (\n  <div style={styles.errorContainer}>\n    <Typography variant=\"body1\" color=\"error\">\n      <strong>{t('organization.switcher.error.prefix')}</strong> {error}\n    </Typography>\n  </div>\n);\n\n/**\n * Default load more button renderer\n */\nconst defaultRenderLoadMore = (\n  onLoadMore: () => Promise<void>,\n  isLoading: boolean,\n  t: (key: string, params?: Record<string, string | number>) => string,\n  styles: any,\n): ReactNode => (\n  <Button\n    onClick={onLoadMore}\n    disabled={isLoading}\n    style={{\n      ...styles.loadMoreButton,\n      ...(isLoading ? styles.loadMoreButtonDisabled : {}),\n    }}\n    type=\"button\"\n    fullWidth\n  >\n    {isLoading ? t('organization.switcher.loading.more') : t('organization.switcher.load.more')}\n  </Button>\n);\n\n/**\n * Default empty state renderer\n */\nconst defaultRenderEmpty = (\n  t: (key: string, params?: Record<string, string | number>) => string,\n  styles: any,\n): ReactNode => (\n  <div style={styles.emptyContainer}>\n    <Typography variant=\"body1\" color=\"textSecondary\" style={styles.emptyText}>\n      {t('organization.switcher.no.organizations')}\n    </Typography>\n  </div>\n);\n\n/**\n * BaseOrganizationList component displays a list of organizations with pagination support.\n * This component serves as the base for framework-specific implementations.\n *\n * @example\n * ```tsx\n * <BaseOrganizationList\n *   data={organizations}\n *   isLoading={isLoading}\n *   hasMore={hasMore}\n *   fetchMore={fetchMore}\n *   error={error}\n * />\n * ```\n */\nexport const BaseOrganizationList: FC<BaseOrganizationListProps> = ({\n  className = '',\n  allOrganizations,\n  myOrganizations,\n  error,\n  fetchMore,\n  hasMore = false,\n  isLoading = false,\n  isLoadingMore = false,\n  mode = 'inline',\n  onOpenChange,\n  onOrganizationSelect,\n  onRefresh,\n  open = false,\n  renderEmpty,\n  renderError,\n  renderLoading,\n  renderLoadMore,\n  renderOrganization,\n  style,\n  title = 'Organizations',\n  showStatus,\n}): ReactElement => {\n  const styles = useStyles();\n  const {t} = useTranslation();\n\n  // Combine allOrganizations with myOrganizations to determine which orgs can be switched to\n  const organizationsWithSwitchAccess: OrganizationWithSwitchAccess[] = useMemo(() => {\n    if (!allOrganizations?.organizations) {\n      return [];\n    }\n\n    // Create a Set of IDs from myOrganizations for faster lookup\n    const myOrgIds = new Set(myOrganizations?.map(org => org.id) || []);\n\n    return allOrganizations.organizations.map(org => ({\n      ...org,\n      canSwitch: myOrgIds.has(org.id),\n    }));\n  }, [allOrganizations?.organizations, myOrganizations]);\n\n  // Use custom renderers or defaults with styles and translations\n  const renderLoadingWithStyles = renderLoading || (() => defaultRenderLoading(t, styles));\n  const renderErrorWithStyles = renderError || ((error: string) => defaultRenderError(error, t, styles));\n  const renderEmptyWithStyles = renderEmpty || (() => defaultRenderEmpty(t, styles));\n  const renderLoadMoreWithStyles =\n    renderLoadMore ||\n    ((onLoadMore: () => Promise<void>, isLoading: boolean) => defaultRenderLoadMore(onLoadMore, isLoading, t, styles));\n  const renderOrganizationWithStyles =\n    renderOrganization ||\n    ((org: OrganizationWithSwitchAccess) =>\n      defaultRenderOrganization(org, styles, t, onOrganizationSelect, showStatus));\n\n  // Show loading state\n  if (isLoading && organizationsWithSwitchAccess?.length === 0) {\n    const loadingContent = (\n      <div\n        className={clsx(withVendorCSSClassPrefix('organization-list'), className)}\n        style={{...styles.root, ...style}}\n      >\n        {renderLoadingWithStyles()}\n      </div>\n    );\n\n    if (mode === 'popup') {\n      return (\n        <Dialog open={open} onOpenChange={onOpenChange}>\n          <DialogContent>\n            <DialogHeading>{title}</DialogHeading>\n            <div style={styles.popupContent}>{loadingContent}</div>\n          </DialogContent>\n        </Dialog>\n      );\n    }\n\n    return loadingContent;\n  }\n\n  // Show error state\n  if (error && organizationsWithSwitchAccess?.length === 0) {\n    const errorContent = (\n      <div\n        className={clsx(withVendorCSSClassPrefix('organization-list'), className)}\n        style={{...styles.root, ...style}}\n      >\n        {renderErrorWithStyles(error)}\n      </div>\n    );\n\n    if (mode === 'popup') {\n      return (\n        <Dialog open={open} onOpenChange={onOpenChange}>\n          <DialogContent>\n            <DialogHeading>{title}</DialogHeading>\n            <div style={styles.popupContent}>{errorContent}</div>\n          </DialogContent>\n        </Dialog>\n      );\n    }\n\n    return errorContent;\n  }\n\n  // Show empty state\n  if (!isLoading && organizationsWithSwitchAccess?.length === 0) {\n    const emptyContent = (\n      <div\n        className={clsx(withVendorCSSClassPrefix('organization-list'), className)}\n        style={{...styles.root, ...style}}\n      >\n        {renderEmptyWithStyles()}\n      </div>\n    );\n\n    if (mode === 'popup') {\n      return (\n        <Dialog open={open} onOpenChange={onOpenChange}>\n          <DialogContent>\n            <DialogHeading>{title}</DialogHeading>\n            <div style={styles.popupContent}>{emptyContent}</div>\n          </DialogContent>\n        </Dialog>\n      );\n    }\n\n    return emptyContent;\n  }\n\n  const organizationListContent = (\n    <div className={clsx(withVendorCSSClassPrefix('organization-list'), className)} style={{...styles.root, ...style}}>\n      {/* Header with total count and refresh button */}\n      <div style={styles.header}>\n        <div style={styles.headerInfo}>\n          <Typography variant=\"body2\" color=\"textSecondary\" style={styles.subtitle}>\n            {t('organization.switcher.showing.count', {\n              showing: organizationsWithSwitchAccess?.length,\n              total: allOrganizations?.organizations?.length || 0,\n            })}\n          </Typography>\n        </div>\n        {onRefresh && (\n          <Button onClick={onRefresh} style={styles.refreshButton} type=\"button\" variant=\"outline\" size=\"small\">\n            {t('organization.switcher.refresh.button')}\n          </Button>\n        )}\n      </div>\n\n      {/* Organizations list */}\n      <div style={styles.listContainer}>\n        {organizationsWithSwitchAccess?.map((organization: OrganizationWithSwitchAccess, index: number) =>\n          renderOrganizationWithStyles(organization, index),\n        )}\n      </div>\n\n      {/* Error message for additional data */}\n      {error && organizationsWithSwitchAccess?.length > 0 && (\n        <div style={styles.errorMargin}>{renderErrorWithStyles(error)}</div>\n      )}\n\n      {/* Load more button */}\n      {hasMore && fetchMore && (\n        <div style={styles.loadMoreMargin}>{renderLoadMoreWithStyles(fetchMore, isLoadingMore)}</div>\n      )}\n    </div>\n  );\n\n  if (mode === 'popup') {\n    return (\n      <Dialog open={open} onOpenChange={onOpenChange}>\n        <DialogContent>\n          <DialogHeading>{title}</DialogHeading>\n          <div style={styles.popupContent}>{organizationListContent}</div>\n        </DialogContent>\n      </Dialog>\n    );\n  }\n\n  return organizationListContent;\n};\n\nconst useStyles = () => {\n  const {theme, colorScheme} = useTheme();\n\n  return useMemo(\n    () => ({\n      root: {\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n        minWidth: '600px',\n        margin: '0 auto',\n        background: theme.vars.colors.background.surface,\n        borderRadius: theme.vars.borderRadius.large,\n      } as CSSProperties,\n      header: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-between',\n        marginBottom: `calc(${theme.vars.spacing.unit} * 3)`,\n        paddingBottom: `calc(${theme.vars.spacing.unit} * 2)`,\n        borderBottom: `1px solid ${theme.vars.colors.border}`,\n      } as CSSProperties,\n      headerInfo: {\n        flex: 1,\n      } as CSSProperties,\n      title: {\n        fontSize: '1.5rem',\n        fontWeight: 600,\n        margin: '0 0 8px 0',\n        color: theme.vars.colors.text.primary,\n      } as CSSProperties,\n      subtitle: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n        margin: '0',\n      } as CSSProperties,\n      refreshButton: {\n        backgroundColor: theme.vars.colors.background.surface,\n        border: `1px solid ${theme.vars.colors.border}`,\n        borderRadius: theme.vars.borderRadius.small,\n        color: theme.vars.colors.text.primary,\n        cursor: 'pointer',\n        fontSize: '0.875rem',\n        padding: `${theme.vars.spacing.unit} calc(${theme.vars.spacing.unit} * 2)`,\n        transition: 'all 0.2s',\n      } as CSSProperties,\n      listContainer: {\n        display: 'flex',\n        flexDirection: 'column' as const,\n        gap: `calc(${theme.vars.spacing.unit} * 1.5)`,\n      } as CSSProperties,\n      organizationItem: {\n        border: `1px solid ${theme.vars.colors.border}`,\n        borderRadius: theme.vars.borderRadius.medium,\n        display: 'flex',\n        justifyContent: 'space-between',\n        padding: `calc(${theme.vars.spacing.unit} * 2)`,\n        transition: 'all 0.2s',\n        backgroundColor: theme.vars.colors.background.surface,\n      } as CSSProperties,\n      organizationContent: {\n        display: 'flex',\n        alignItems: 'center',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n        flex: 1,\n      } as CSSProperties,\n      organizationInfo: {\n        flex: 1,\n      } as CSSProperties,\n      organizationName: {\n        fontSize: '1.125rem',\n        fontWeight: 600,\n        margin: '0 0 4px 0',\n        color: theme.vars.colors.text.primary,\n      } as CSSProperties,\n      organizationHandle: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n        margin: '0 0 4px 0',\n        fontFamily: 'monospace',\n      } as CSSProperties,\n      organizationStatus: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '0.875rem',\n        margin: '0',\n      } as CSSProperties,\n      statusText: {\n        fontWeight: 500,\n      } as CSSProperties,\n      activeColor: theme.vars.colors.success.main,\n      inactiveColor: theme.vars.colors.error.main,\n      organizationActions: {\n        display: 'flex',\n        alignItems: 'center',\n      } as CSSProperties,\n      badge: {\n        borderRadius: theme.vars.borderRadius.large,\n        fontSize: '0.75rem',\n        fontWeight: 500,\n        padding: `calc(${theme.vars.spacing.unit} / 2) calc(${theme.vars.spacing.unit} * 1.5)`,\n        textTransform: 'uppercase' as const,\n        letterSpacing: '0.5px',\n      } as CSSProperties,\n      successBadge: {\n        backgroundColor: `color-mix(in srgb, ${theme.vars.colors.success.main} 20%, transparent)`,\n        color: theme.vars.colors.success.main,\n      } as CSSProperties,\n      errorBadge: {\n        backgroundColor: `color-mix(in srgb, ${theme.vars.colors.error.main} 20%, transparent)`,\n        color: theme.vars.colors.error.main,\n      } as CSSProperties,\n      loadingContainer: {\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n        textAlign: 'center' as const,\n        display: 'flex',\n        flexDirection: 'column' as const,\n        alignItems: 'center',\n        gap: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      loadingText: {\n        marginTop: theme.vars.spacing.unit,\n      } as CSSProperties,\n      errorContainer: {\n        backgroundColor: `color-mix(in srgb, ${theme.vars.colors.error.main} 20%, transparent)`,\n        border: `1px solid ${theme.vars.colors.error.main}`,\n        borderRadius: theme.vars.borderRadius.medium,\n        color: theme.vars.colors.error.main,\n        padding: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      emptyContainer: {\n        padding: `calc(${theme.vars.spacing.unit} * 4)`,\n        textAlign: 'center' as const,\n      } as CSSProperties,\n      emptyText: {\n        color: theme.vars.colors.text.secondary,\n        fontSize: '1rem',\n      } as CSSProperties,\n      loadMoreButton: {\n        backgroundColor: theme.vars.colors.primary.main,\n        border: 'none',\n        borderRadius: theme.vars.borderRadius.medium,\n        color: theme.vars.colors.primary.contrastText,\n        cursor: 'pointer',\n        fontSize: '0.875rem',\n        fontWeight: 500,\n        padding: `calc(${theme.vars.spacing.unit} * 1.5) calc(${theme.vars.spacing.unit} * 3)`,\n        width: '100%',\n        transition: 'all 0.2s',\n      } as CSSProperties,\n      loadMoreButtonDisabled: {\n        backgroundColor: theme.vars.colors.text.secondary,\n        cursor: 'not-allowed',\n        opacity: 0.6,\n      } as CSSProperties,\n      errorMargin: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 2)`,\n      } as CSSProperties,\n      loadMoreMargin: {\n        marginTop: `calc(${theme.vars.spacing.unit} * 3)`,\n      } as CSSProperties,\n      popupContent: {\n        padding: theme.vars.spacing.unit,\n      } as CSSProperties,\n    }),\n    [theme, colorScheme],\n  );\n};\n\nexport default BaseOrganizationList;\n", "/**\n * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).\n *\n * WSO2 LLC. licenses this file to you under the Apache License,\n * Version 2.0 (the \"License\"); you may not use this file except\n * in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing,\n * software distributed under the License is distributed on an\n * \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n * KIND, either express or implied. See the License for the\n * specific language governing permissions and limitations\n * under the License.\n */\n\nimport {FC} from 'react';\n\nexport interface BuildingAltProps {\n  /**\n   * Color of the icon.\n   */\n  color?: string;\n  /**\n   * Height of the icon.\n   */\n  height?: number | string;\n  /**\n   * Width of the icon.\n   */\n  width?: number | string;\n}\n\n/**\n * Alternative Building Icon component.\n *\n * @param props - Props injected to the component.\n * @returns Alternative Building Icon component.\n */\nconst BuildingAlt: FC<BuildingAltProps> = ({color = 'currentColor', height = 24, width = 24}: BuildingAltProps) => (\n  <svg\n    width={width}\n    height={height}\n    viewBox=\"0 0 24 24\"\n    fill=\"none\"\n    xmlns=\"http://www.w3.org/2000/svg\"\n    stroke=\"currentColor\"\n    strokeWidth=\"2\"\n    strokeLinecap=\"round\"\n    strokeLinejoin=\"round\"\n  >\n    <path d=\"M6 22V4a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v18Z\" />\n    <path d=\"M6 12H4a2 2 0 0 0-2 2v6a2 2 0 0 0 2 2h2\" />\n    <path d=\"M18 9h2a2 2 0 0 1 2 2v9a2 2 0 0 1-2 2h-2\" />\n    <path d=\"M10 6h4\" />\n    <path d=\"M10 10h4\" />\n    <path d=\"M10 14h4\" />\n    <path d=\"M10 18h4\" />\n  </svg>\n);\n\nBuildingAlt.displayName = 'BuildingAlt';\n\nexport default BuildingAlt;\n"],
  "mappings": "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",
  "names": ["User_default", "import_browser", "import_react", "import_browser", "import_browser", "baseGetMeOrganizations", "import_browser", "httpClient", "baseGetScim2Me", "import_browser", "httpClient", "baseGetSchemas", "import_browser", "httpClient", "baseGetAllOrganizations", "import_browser", "import_react", "import_react", "import_react", "import_browser", "import_react", "import_jsx_runtime", "fallbackLanguage", "import_browser", "import_react", "import_react", "import_jsx_runtime", "getAllOrganizations", "createOrganization", "import_react", "import_browser", "import_react", "import_react", "import_react", "import_jsx_runtime", "import_react", "import_browser", "import_jsx_runtime", "import_react", "import_react", "import_jsx_runtime", "import_jsx_runtime", "_baseUrl", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_react", "import_browser", "import_react", "import_browser", "import_clsx", "import_react", "import_react", "import_browser", "import_clsx", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "clsx", "import_jsx_runtime", "clsx", "import_browser", "import_react", "import_jsx_runtime", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "clsx", "import_browser", "import_react", "import_jsx_runtime", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "clsx", "import_browser", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_browser", "import_clsx", "import_react", "import_browser", "import_browser", "import_react", "import_clsx", "import_clsx", "import_browser", "import_jsx_runtime", "clsx", "import_jsx_runtime", "import_jsx_runtime", "import_browser", "import_jsx_runtime", "clsx", "import_clsx", "import_browser", "import_jsx_runtime", "clsx", "import_react", "import_clsx", "import_browser", "import_jsx_runtime", "clsx", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_clsx", "import_browser", "import_jsx_runtime", "clsx", "import_clsx", "import_browser", "import_jsx_runtime", "clsx", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "import_browser", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_browser", "import_react", "import_jsx_runtime", "import_browser", "import_react", "import_jsx_runtime", "import_browser", "import_react", "import_jsx_runtime", "import_jsx_runtime", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "import_react", "import_browser", "import_clsx", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "clsx", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "clsx", "level", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "import_clsx", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "useStyles", "error", "response", "variant", "import_jsx_runtime", "import_browser", "import_clsx", "import_react", "import_browser", "import_browser", "import_browser", "import_jsx_runtime", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "GoogleButton", "GoogleButton_default", "import_jsx_runtime", "import_browser", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "import_browser", "import_jsx_runtime", "Typography_default", "import_jsx_runtime", "Typography_default", "GoogleButton_default", "import_jsx_runtime", "useStyles", "error", "import_browser", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "User", "import_jsx_runtime", "import_jsx_runtime", "Organization", "import_browser", "import_clsx", "import_react", "import_browser", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "useStyles", "offset", "clsx", "import_browser", "import_react", "import_clsx", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "User", "User_default", "import_jsx_runtime", "import_jsx_runtime", "useStyles", "React", "clsx", "offset", "import_react", "import_clsx", "import_browser", "import_jsx_runtime", "useStyles", "style", "clsx", "import_jsx_runtime", "currentUser", "useStyles", "isEditable", "displayValue", "clsx", "import_browser", "httpClient", "baseUpdateMeProfile", "import_jsx_runtime", "UserProfile", "import_browser", "import_react", "import_clsx", "import_jsx_runtime", "useStyles", "User_default", "clsx", "import_react", "import_jsx_runtime", "import_browser", "import_react", "import_clsx", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "import_jsx_runtime", "useStyles", "defaultRenderOrganization", "defaultRenderLoading", "defaultRenderError", "clsx", "import_react", "import_react", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "useStyles", "clsx", "import_browser", "httpClient", "baseCreateOrganization", "import_jsx_runtime", "import_react", "import_browser", "import_clsx", "import_react", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "clsx", "import_jsx_runtime", "useStyles", "clsx", "import_browser", "httpClient", "baseGetOrganization", "import_browser", "httpClient", "baseUpdateOrganization", "import_jsx_runtime", "import_react", "import_browser", "import_clsx", "import_react", "import_jsx_runtime", "useStyles", "error", "isLoading", "clsx", "import_jsx_runtime", "getAllOrganizations", "import_jsx_runtime", "import_jsx_runtime"]
}
