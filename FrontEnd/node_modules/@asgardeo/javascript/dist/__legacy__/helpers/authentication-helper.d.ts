/**
 * Copyright (c) 2020, WSO2 LLC. (https://www.wso2.com). All Rights Reserved.
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { IsomorphicCrypto } from '../../IsomorphicCrypto';
import { OIDCDiscoveryEndpointsApiResponse, OIDCDiscoveryApiResponse } from '../../models/oidc-discovery';
import { TokenResponse } from '../../models/token';
import { User } from '../../models/user';
import StorageManager from '../../StorageManager';
export declare class AuthenticationHelper<T> {
    private _storageManager;
    private _config;
    private _oidcProviderMetaData;
    private _cryptoHelper;
    constructor(storageManager: StorageManager<T>, cryptoHelper: IsomorphicCrypto);
    resolveEndpoints(response: OIDCDiscoveryApiResponse): Promise<OIDCDiscoveryApiResponse>;
    resolveEndpointsExplicitly(): Promise<OIDCDiscoveryEndpointsApiResponse>;
    resolveEndpointsByBaseURL(): Promise<OIDCDiscoveryEndpointsApiResponse>;
    validateIdToken(idToken: string): Promise<boolean>;
    getAuthenticatedUserInfo(idToken: string): User;
    replaceCustomGrantTemplateTags(text: string, userId?: string): Promise<string>;
    clearSession(userId?: string): Promise<void>;
    handleTokenResponse(response: Response, userId?: string): Promise<TokenResponse>;
}
