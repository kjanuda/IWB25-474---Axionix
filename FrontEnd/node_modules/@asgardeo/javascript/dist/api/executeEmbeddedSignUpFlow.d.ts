/**
 * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { EmbeddedFlowExecuteResponse, EmbeddedFlowExecuteRequestConfig } from '../models/embedded-flow';
/**
 * Executes an embedded signup flow by sending a request to the specified flow execution endpoint.
 *
 * @param requestConfig - Request configuration object containing URL and payload.
 * @returns A promise that resolves with the flow execution response.
 * @throws AsgardeoAPIError when the request fails or URL is invalid.
 *
 * @example
 * ```typescript
 * try {
 *   const embeddedSignUpResponse = await executeEmbeddedSignUpFlow({
 *     url: "https://api.asgardeo.io/t/<ORGANIZATION>/api/server/v1/flow/execute",
 *     payload: {
 *       flowType: "REGISTRATION"
 *     }
 *   });
 *   console.log(embeddedSignUpResponse);
 * } catch (error) {
 *   if (error instanceof AsgardeoAPIError) {
 *     console.error('Embedded SignUp flow execution failed:', error.message);
 *   }
 * }
 * ```
 */
declare const executeEmbeddedSignUpFlow: ({ url, baseUrl, payload, ...requestConfig }: EmbeddedFlowExecuteRequestConfig) => Promise<EmbeddedFlowExecuteResponse>;
export default executeEmbeddedSignUpFlow;
