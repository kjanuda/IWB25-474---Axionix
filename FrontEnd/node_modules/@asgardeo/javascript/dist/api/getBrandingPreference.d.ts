/**
 * Copyright (c) 2025, WSO2 LLC. (https://www.wso2.com).
 *
 * WSO2 LLC. licenses this file to you under the Apache License,
 * Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing,
 * software distributed under the License is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
 * KIND, either express or implied. See the License for the
 * specific language governing permissions and limitations
 * under the License.
 */
import { BrandingPreference } from '../models/branding-preference';
/**
 * Configuration for the getBrandingPreference request
 */
export interface GetBrandingPreferenceConfig extends Omit<RequestInit, 'method'> {
    /**
     * The base URL for the API endpoint.
     */
    baseUrl: string;
    /**
     * Locale for the branding preference
     */
    locale?: string;
    /**
     * Name of the branding preference
     */
    name?: string;
    /**
     * Type of the branding preference
     */
    type?: string;
    /**
     * Optional custom fetcher function.
     * If not provided, native fetch will be used
     */
    fetcher?: (url: string, config: RequestInit) => Promise<Response>;
}
/**
 * Retrieves branding preference configuration.
 *
 * @param config - Configuration object containing baseUrl, optional query parameters, and request config.
 * @returns A promise that resolves with the branding preference information.
 * @example
 * ```typescript
 * // Using default fetch
 * try {
 *   const response = await getBrandingPreference({
 *     baseUrl: "https://api.asgardeo.io/t/<ORGANIZATION>",
 *     locale: "en-US",
 *     name: "my-branding",
 *     type: "org"
 *   });
 *   console.log(response.theme);
 * } catch (error) {
 *   if (error instanceof AsgardeoAPIError) {
 *     console.error('Failed to get branding preference:', error.message);
 *   }
 * }
 * ```
 *
 * @example
 * ```typescript
 * // Using custom fetcher (e.g., axios-based httpClient)
 * try {
 *   const response = await getBrandingPreference({
 *     baseUrl: "https://api.asgardeo.io/t/<ORGANIZATION>",
 *     locale: "en-US",
 *     name: "my-branding",
 *     type: "org",
 *     fetcher: async (url, config) => {
 *       const response = await httpClient({
 *         url,
 *         method: config.method,
 *         headers: config.headers,
 *         ...config
 *       });
 *       // Convert axios-like response to fetch-like Response
 *       return {
 *         ok: response.status >= 200 && response.status < 300,
 *         status: response.status,
 *         statusText: response.statusText,
 *         json: () => Promise.resolve(response.data),
 *         text: () => Promise.resolve(typeof response.data === 'string' ? response.data : JSON.stringify(response.data))
 *       } as Response;
 *     }
 *   });
 *   console.log(response.theme);
 * } catch (error) {
 *   if (error instanceof AsgardeoAPIError) {
 *     console.error('Failed to get branding preference:', error.message);
 *   }
 * }
 * ```
 */
declare const getBrandingPreference: ({ baseUrl, locale, name, type, fetcher, ...requestConfig }: GetBrandingPreferenceConfig) => Promise<BrandingPreference>;
export default getBrandingPreference;
